{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/search/SearchRow.ts","src/counters/CountersPage.ts","src/counters/CountersPanel.ts","src/data/CountersDataService.ts","src/data/ErrorDescription.ts","src/data/ErrorsMessages.ts","src/data/EventsDataService.ts","src/data/LogMessage.ts","src/data/LoggingDataService.ts","src/data/SettingsDataService.ts","src/data/StatCounters.ts","src/data/StatisticsDataService.ts","src/errors/ErrorsPage.ts","src/errors/ErrorsPanel.ts","src/events/EventsPage.ts","src/events/EventsPanel.ts","src/index.ts","src/logging/LoggingModel.ts","src/logging/LoggingPage.ts","src/logging/LoggingPanel.ts","src/logging/LoggingViewModel.ts","src/rest/CountersResources.ts","src/rest/EventsResources.ts","src/rest/LoggingResources.ts","src/rest/SettingsResources.ts","src/rest/StatisticsResources.ts","src/settings/AddSettingsKeyController.ts","src/settings/AddSettingsKeyService.ts","src/settings/AddSettingsSectionController.ts","src/settings/AddSettingsSectionService.ts","src/settings/SettingsPage.ts","src/settings/SettingsPanel.ts","src/statistics/StatisticsPage.ts","src/statistics/StatisticsPanel.ts","src/statistics/StatisticsService.ts","temp/pip-admin-system-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","system","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","SearchRowController","$inject","prototype","isDisable","ngDisable","_scope","_","isFunction","onSearch","_this","localSearch","_timeout","pipOnSearch","onClear","$element","$attrs","$scope","$timeout","onKeyPress","event","keyCode","stopPropagation","preventDefault","addClass","_element","placeholder","$watch","search","declareSearchRowResources","pipTranslateProvider","translations","SEARCH_ROW_PLACEHOLDER","directive","restrict","controller","ngDisabled","templateUrl","3","appHeader","pipNavService","appbar","parts","logo","icon","title","addShadow","showMenu","breadcrumb","text","actions","hide","CountersController","onRetry","$window","history","back","$state","$rootScope","$mdMedia","$injector","has","get","configureCountersRoute","$stateProvider","state","url","auth","controllerAs","4","defineProperty","value","CountersPanelBindings","CountersPanelController","readCounters","pipCountersData","results","counters","data","console","log","pipMedia","component","params","successCallback","errorCallback","pipRest","getResource","error","CountersData","$stateParams","pipSession","RESOURCE","CountersDataProvider","$get","_service","angular","provider","6","Object","__","constructor","d","extendStatics","b","create","_super","LogMessage_1","ErrorLogMessage","LogMessage","__extends","apply","arguments","ErrorMessageRecord","start","pageSize","refresh","defaultSearch","refreshEvent","refreshTimes","ConfigErrors","ErrorsMessagesVisability","Limit","Step","8","EventsData","readEvents","take","skip","EventsDataProvider","13","14","LogLevel","LogMessages","LoggingData","filterToString","filter","key","result","readLogging","total","readErrors","LoggingDataProvider","SettingsData","readSettingsSections","readSettings","section","createSettings","save","updateSettings","update","saveSettingsKey","SettingsDataProvider","17","StatCounterType","StatCounter","StatCounterValue","StatCounterSet","StatisticsData","readStatisticsSections","readStatistics","getStats","counter","type","fromTimeUtc","toTimeUtc","dataCallback","query","getTotalStats","getYearlyStats","getMonthlyStats","getDailyStats","getHourlyStats","createStatistics","updateStatistics","StatisticsDataProvider","ErrorsController","configureErrorsRoute","config","20","getErrorString","responses","isString","message","statusText","clean","onSearchErrors","ErrorsPanelController","clearErrors","_pipConfirmationDialog","show","ok","cancel","clearErrorsError","_pipToasts","showError","setState","loading","isArray","errors","setRefresh","refreshTime","getFilter","searchQuery","Search","setRefreshTimer","_pipTimer","isStarted","removeRefreshTimer","addEvent","removeEvent","onErrorRead","createErrors","errorMessageTree","prepareErrorTree","createErrorTree","traceErrors","item","oldItem","find","items","collapsed","push","sortBy","ErrorType","updating","onError","_log","JSON","stringify","errorText","InitErrors","parallel","callback","_errorsData","_start","_take","errorData","isObject","ErrorDescription_1","ErrorDescription","tree","createRecord","addToRecord","each","sortByTime","count","first","MomentTimeUtc","last","ErrorsMessages_1","record","errorItem","moment","time","toDate","getTime","correlation_id","level","collection","onRefreshClick","onRefreshChange","onClickErrorDetails","_location","onFilterErrors","onErrorsDetails","onShowMore","onShowLess","$log","$q","$location","pipLoggingData","pipTimer","pipConfirmationDialog","pipToasts","_config","stopRefresh","showMessagesLimit","_q","_state","_pipMedia","$on","cleanUpFunc","bindings","ErrorsPanelBindings","../data/ErrorsMessages","21","EventsController","configureEventsRoute","22","EventsPanelBindings","EventsState","Progress","Data","Empty","Component","Severity","Type","All","EventsPanelController","clear","refreshEvents","pipEventsData","events","onReadEvents","err","onReadEventsError","trace","$index","splice","LoggingsState","getLoggings","loggings","setLoggings","LoggingModel","getState","errorcallback","onLoggingRead","refreshLogging","traces","LoggingController","configureLoggingRoute","26","LoggingPanelBindings","Times","Content","CorrelationId","Level","$onDestroy","LoggingPanelController","pipLoggingViewModel","logging","transaction","begin","_refreshTime","playStopAutoUpdate","autoUpdate","abort","end","pipTransaction","filters","LoggingsFilter","LoggingsTimer","LoggingViewModel","workflow","set","enumerable","configurable","service","28","pipRestProvider","registerOperation","configCountersResources","29","configEventsResources","30","configLoggingResources","31","configSettingsResources","registerPagedCollection","page","method","configStatisticsResources","33","SettingsKey","AddSettingsKeyDialogController","onOk","$mdDialog","onCancel","theme","$theme","name","replace","34","AddSettingsKeyService","cancelCallback","_mdDialog","targetEvent","locals","clickOutsideToClose","then","sectionName","AddSettingsSectionDialogController","./AddSettingsSectionService","36","AddSettingsSectionService","settingsName","SettingsController","configureSettingsRoute","SettingSection","SettingsState","pipSettingsData","settingsSections","onSettingsRead","SettingsPanelController","index","filterSections","selectIndex","findIndex","selectItem","indexOf","settings","keys","map","split","newKey","k","settingsN","zipObject","values","updateKey","pipAddSettingsKeyDialog","addKeyDialogCallback","updateKeyDialogCallback","openDeleteKeyDialog","deleteKey","omit","addKey","saveKeyCallback","errorkeyCallback","addSection","pipAddSettingsSectionDialog","addSectionDialogCallback","saveSectionCallback","errorSectionCallback","SettingsPanelBindings","StatisticsController","configureStatisticsRoute","StatisticsPanelBindings","prepareDecades","utcStartYear","utc","startOf","add","decades","Array","StatisticsService_1","ToolsStatisticsDecade","year","toString","cloneDeep","configDates","hourlyDate","_$state","StatisticsFilter","Hourly","utcDate","Daily","Monthly","yearlyDate","Yearly","StatisticsPanelController","getCounters","_rest","getStatistics","ToolsStatisticsStates","getEndDate","endDate","dailyDate","monthlyDate","getStartDate","startDate","yearlyName","dec","statistics","dateStart","dateEnd","Total","ToolsStatisticsGetFunctions","temp","counterStatistics","seria","prepareForLineCharts","groupStatistics","prepareForPieCharts","searchClick","serias","pieChartSeria","dateFrom","dateTo","category","_pipStatistics","fillLineCharts","lineChartSeria","groups","filterStatistics","_$location","statisticsGroups","group","toLowerCase","statisticsGroup","refreshStatistics","_$timeout","_onlyUpdated","previousStep","nextStep","today","updateDate","updateDecade","pipStatisticsData","pipAuxPanel","pipDateConvert","pipStatistics","TOTAL","_pipAuxPanel","_pipDateConvert","chartXTickFormat","x","ToolsStatisticsFormatTickX","41","_statistics","_value","_key","_counter","_seria","undefined","_group","_counterStats","counterStats","_series","series","_singleChartvalue","singleChartvalue","cs","chartValue","color","ToolsStatisticsFormatX","toFixed","Number","getStatisticsCount","statKey","pop","getStatisticsLastActionDate","date","Day","Hour","Month","Year","month","day","hour","formatXvalues","fillLast24LineCharts","from","sDay","sMonth","sYear","startHours","h","point","current","statistic","this_1","sHour","getUTCHours","to","diff","size","_loop_2","this_2","day_1","i_1","StatisticsService","StatisticsProvider","42","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,CAAA,IAAAK,IAAAA,EAAA,oBAAAC,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,MAAAL,EAAAK,IAAA,KAAAC,OAAAX,KAAA,CAAA,WAAA,OAAA,SAAAY,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAjB,GAAA,IAAAc,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAnB,GAAAkB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAhB,QAAA,IAAAY,EAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAhB,QAAA,IAAA,IAAAmB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAjB,EAAAD,4BCAA,IAAA2B,GAUIA,EAAAC,QACI,CAAA,WACA,SACsB,SACM,cAuBdC,UAAQC,UAAO,WAGhC,OADGtB,KAAAuB,UAASvB,KAAWwB,OAAmB,WAAKxB,KAAAwB,OAAY,WAAA,KAC3DC,EAAAC,WAAA1B,KAAAuB,YAAAvB,KAAAuB,eAEDF,UAWCM,SAAA,WAVG,IAAIC,EAAK5B,KACLA,KAAAsB,cAIJtB,KAAKwB,OAAS,OAAAxB,KAAA6B,iBACVC,SAAM,WACFL,EAAAC,WAAKE,EAAaG,cACrBH,EAAAG,eAER,SAGYV,UAAcW,QAAA,WACnBhC,KAAAsB,cAIJtB,KAAK6B,YAAW,KACnB7B,KAAA2B,aAUJR,YAxDOA,EAAWc,EAAAC,EAAAC,EAAAC,GAgDR,IAAAR,EAAA5B,UACHqC,WAAU,SAAcC,GACd,KAANA,EAAMC,UACND,EAAME,kBACNF,EAAKG,iBACRzC,KAAA2B,aAlDDM,EAASS,SAAS,kBAElBT,EAAKS,SAAW,QAChB1C,KAAK2C,SAASV,EACdjC,KAAKwB,OAAQW,EAEbnC,KAAK8B,SAAWM,EAEhBpC,KAAK+B,YAAcI,EAAO,SAAcA,EAAW,SAAA,KAEnDnC,KAAA4C,YAAcT,EAAW,YAAcA,EAAA,YAAA,2BAChCU,OAAO,SAAS,SAAAC,GACfA,GAAKlB,EAAAC,cACRD,EAAAC,YAAAiB,cA4DDC,EAAwBC,KAEzBC,aAAA,KAAA,CACHC,uBAAqB,iBAElBD,aAAA,KAAA,CACNC,uBAAA,gBAtBU9B,QAAA,CAAA,gCA2BN3B,OAAO,eAAA,IAEX0D,UAAA,gCA3BO,CACAC,SAAA,IACAC,WAAOlC,eACK,kBACR,CACA2B,OAAA,aACAnB,SAAU,eACbiB,YAAA,kBACDU,WAAa,KAEpBC,YAAA,iDCvFDC,EAAA,CAAA,SAAA9C,EAAAjB,EACYD,KAQG4B,QAAA,CAAA,YAAA,2BAFHA,QAAA,CAAA,UAAkC,SAAA,SAAA,aAAA,WAAA,YAAA,mBAa/BC,UAAYoC,UAAA,gBACrBC,cAAAC,OAAAC,MAAA,CACEC,MAAC,EACDC,MAAC,EACDC,MAAC,cAER/D,KAAA0D,cAAAC,OAAAK,YAEMhE,KAAA0D,cAAAI,KAAAG,WACHjE,KAAK0D,cAAQQ,WAAeC,KAAA,WAC/BnE,KAAA0D,cAAAU,QAAAC,QA/BLC,EAgCCjD,UAAAkD,QAAA,WAEDvE,KAAAwE,QAAAC,QAAAC,QAMIJ,YA5BQA,EAAoBE,EAAKrC,EAAWwC,EAAGC,EAAcC,EAAcC,EAAKpB,GAG/E1D,KAAAwE,QAAAA,EAEOxE,KAAA0D,cAAAA,EACCoB,EAAoBC,IAAC,aAAQD,EAAAE,IAAA,iBAC9BvB,qBAuBAwB,EAAgBH,EAAAI,KAGhBC,MAAA,WAAc,CACdC,IAAA,YACD/B,WAAAiB,EACVe,MAAA,EAIAC,aAAA,QAEG/B,YAAO,uFC5CX,IAAAgC,EAAA,CAAA,SAAA7E,EAAAjB,EAAAD,uBAGCgG,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,QAADC,EAAA,QAS4BtE,QAAA,CAAA,SAAA,kBAAA,YAP5BuE,EAcCtE,UAAAuE,aAAA,WAEA,IAAAhE,EAAA5B,KACGA,KAAO6F,gBAAAD,aAAA,KAAA,SAAAE,GAAAlE,EAAAmE,SAAAD,EAAAE,KAAAC,QAAAC,IAAAtE,EAAAmE,SAAAD,MAEFH,GAXL,SAACA,EAAAhB,EAAAkB,EAAAM,GAEOnG,KAAA2E,OAAAA,EAAR3E,KAAA6F,gBAGCA,EADG7F,KAAKmG,SAAAA,EACRnG,KAAA4F,uBAUKnG,OAAA,mBAAA,IAEL2G,UAAA,mBAAA,4EC/BG,CAAA,SAAU1F,EAACjB,EAAAD,sCAFIA,EAAuB,aAAA,CAAAiG,OAAA,aAJlCrE,QAAmB,CAAA,eAAW,UAAA,gBAkBtBC,UAAAuE,aAAgB,SAAAS,EAAAC,EAAAC,eAChBC,QAAAC,YAAqB,YAAAzB,IAAA,GAAA,SAAAgB,GACxBM,GACFA,EAAAN,IAGf,SAAAU,GAACH,GAEDA,EAAAG,MAMWC,GA1BS,SAACA,EAAAC,EAAAJ,EAAAK,GAIb7G,KAAA4G,aAAoBA,OAGZJ,QAAIA,kBACAK,OACHC,SAAA,kBA6BbC,EAAC1F,UAAA2F,KAAA,CAAA,eAAA,UAAA,aAAA,SAAAJ,EAAAJ,EAAAK,GAMA,OAJJ,MAAA7G,KAAAiH,WAEMjH,KAAAiH,SAAA,IAAAN,EAAAC,EAAAJ,EAAAK,IAEO7G,KAAAiH,uBAVFF,IACJ/G,KAAC8G,SAAA,WC5CTI,QAAAzH,OAAA,kBAAA,CAAA,YAUC0H,SAAA,kBAAAJ,QAADK,EAAA,CAAA,SAAA1G,EAAAjB,EAACD,GAAD,aAVa6H,OAAA7B,eAAAhG,EAAA,aAAgB,CAAAiG,OAAA,+QCE7B,SAAA6B,IAAAtH,KAAAuH,YAAAC,EAFAC,EAAAD,EAAAE,GAEqCF,EAAAnG,UAAA,OAAAqG,EAAAL,OAAUM,OAAAD,IAAAJ,EAAAjG,UAAAqG,EAAArG,UAAA,IAAAiG,YAE9C9B,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,QAAAmC,EAADC,EAAAnH,EAAC,gBAFoCoH,GAEpCF,EAEDC,EAQCE,WAZYC,EAAAF,EAAAF,GAYbE,GARA,SAAAA,IAAA,OAAA,OAAAF,GAAAA,EAAAK,MAAAjI,KAAAkI,YAAAlI,KAAaR,EAAAsI,gBAAAA,EAuBb,SAAAK,OAIaA,mBAAwBA,eAGpCnI,KAAAoI,MAAA,EAADpI,KAAAqI,SAAC,IAAArI,KAAAsI,QAAA,EAPYtI,KAAAuI,cAAA,GASbvI,KAAAwI,aAAA,uBAAAxI,KAAAyI,aAAA,CAAA,EAAA,EAAA,EAAA,EAAA,IACWjJ,EAAAkJ,aAAAA,EACA,IAAAC,EAFE,aCpCbA,EAAAC,MAAA,KAIgBC,KAAA,KAGRF,yBAAWA,mBAHH,KAAAG,EAAY,CAAA,SAAZpI,EAA4CjB,EAAAD,sCAE5CA,EAAA,aAAwC,CAAAiG,OAAA,WACpCsD,EAAC3H,QAAA,CAAA,eAAA,UAAA,gBAMNC,UAAQ2H,WAAK,SAAA3C,EAAA+B,EAAAa,EAAA3C,EAAAC,eACR,IAAZ6B,IAAoBA,EAAY,QAGpB,IAAJa,IAAmBA,EAAG,MAEtB5C,KAAC,IAEL6C,KAACd,IACMa,KAACA,WACA,EACHjJ,KAAAwG,QAAAC,YAAA,UAAAzB,IAAAqB,EAAA,SAAAL,GACFM,GACVA,EAAAN,IAEJ,SAAAU,GAEDH,GAIIA,EAAAG,MAOIqC,GAhCG,SAAAA,EAAAnC,EAAPJ,EAAAK,GAAkD7G,KAAA4G,aAAAA,EAC9C5G,KAAKwG,QAAOA,OAACK,WAAYA,EACzB7G,KAAA8G,SAAc,gBAuCtBqC,EAAA9H,UAAC2F,KAAA,CAAA,eAAA,UAAA,aAAA,SAAAJ,EAAAJ,EAAAK,UAEM,MAAA7G,KAAAiH,WACKjH,KAAAiH,SAAe,IAAG8B,EAAWnC,EAAAJ,EAAAK,gCARhCsC,IAEDnJ,KAAA8G,SAAY,2XC/CpBO,OAAY7B,eAQXhG,EAAA,aAAA,CAAAiG,OAAA,KARD,IAAA2D,GAAA,CAAA,SAAoB1I,EAAAjB,EAAAD,uBAEhBgG,eAAAhG,EAAA,aAAS,CAAAiG,OAAA,SACT4D,GAAA,CAAA,SAAA3I,EAAAjB,EAAAD,oBAIA8J,SAFA9D,eAAAhG,EAAA,aAAQ,CAAAiG,OAAA,KAER6D,EAaJ9J,EAAA8J,WAAA9J,EAAA8J,SAAA,KApBoBA,EAAR,KAAQ,GAAR,OAWZA,EAAAA,EAAA,MAAA,GAAA,QAAAA,EAAAA,EAAA,MAAA,GAAA,QAOAA,EAACA,EAAA,KAAA,GAAA,OAADA,EAAAA,EAAC,KAAA,GAAA,OAPDA,EAOCA,EAAA,MAAA,GAAA,QAPYA,EAAAA,EAAA,MAAU,GAAA,QAYvB,SAHAvB,oCCfgBwB,YAAAA,UACA,CAAA,SAAA7I,EAAAjB,EAA8BD,sCAJ1BA,EAAW,aAAU,CAAAiG,OAAA,QAQrC+D,GAEQA,EAAApI,QAAA,CAAA,eAAR,UAAuB,gBASXC,UAASoI,eAAK,SAAAC,MACR,QACV,OAAI,WACA,GACR,IAAC,IAAAC,KAAAD,EAAA,CAEa,EAAPE,EAAO3I,SACjB2I,GAAA,KAGM,IAAAnE,EAAAiE,EAAAC,GAA4CC,GAAnB,MAAAnE,EAAmBkE,EAAA,IAAAlE,EAE7BkE,EAElB,OAAOC,KAIKvI,UAAAwI,YAAsB,SAAAxD,EAAA+B,EAAAa,EAAA3C,EAAAC,GAO9B,YANK,IAAD6B,IAACA,EAAA,QAEJ,IAADa,IAAWA,EAAA,OACJC,KAACd,SACAa,IACHa,OAAA,EACF9J,KAAAwG,QAAAC,YAAA,WAAAzB,IAAAqB,EAAA,SAAAL,GACVM,GAEMA,EAAAN,IAA2C,SAAAU,GACvCH,GACAA,EAAYG,QAMPrF,UAAA0I,WAAsB,SAAA1D,EAAA+B,EAAAa,EAAA3C,EAAAC,GAO9B,YANK,IAAD6B,IAACA,EAAA,QAEJ,IAADa,IAAWA,EAAA,OACJC,KAACd,SACAa,IACHa,OAAA,EACF9J,KAAAwG,QAAAC,YAAA,UAAAzB,IAAAqB,EAAA,SAAAL,GACVM,GAELA,EAACN,IAED,SAAAU,GAIIH,GAFQA,EAAmBG,MAWpB8C,YArECA,EAAU5C,EAAKJ,EAAAK,GACnB7G,KAAI4G,aAAYA,EAEhB5G,KAAKwG,QAAOA,OACRK,WAAWA,gBACD,iBAmDtBmD,EAoBC3I,UAAA2F,KAAA,CAAA,eAAA,UAAA,aAAA,SAAAJ,EAAAJ,EAAAK,UAG2B,MAAhB7G,KAAAiH,WACPjH,KAASiH,SAAA,IAAkBuC,EAAA5C,EAAqBJ,EAAAK,oBC7FrDmD,YDsFQA,IACHhK,KAAA8G,SAAA,yBCnFW,iBAAA,CAAA,qBACA,iBAA8BkD,WAC9B,CAAA,SAAAtJ,EAAAjB,EAAAD,uBACKgG,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,QAGVwE,KACI7I,QAAY,CAAC,eAAY,UAAA,gBAWzBC,UAAA6I,qBAAA,SAAA7D,EAAAC,EAAAC,GACV,OAAAvG,KAAAwG,QAAAC,YAAA,oBAAAzB,IAAA,GAAA,SAAAgB,GAEMM,GACIA,EAAaN,EAAAA,OAIhB,SAACU,GACOH,GACAA,EAAAG,QAKArF,UAAA8I,aAAqB,SAAAC,EAAA9D,EAAAC,UACxBvG,KAAAwG,QAAAC,YAAA,YAAAzB,IAAA,CACFoF,QAAAA,GACV,SAAApE,GAEMM,GAAgCA,EAAAN,IAEnC,SAAYU,GAIAH,GACAA,EAAAG,QAKArF,UAAAgJ,eAAqB,SAAAD,EAAApE,EAAAM,EAAAC,GAGpC,YAFY,IAADP,IAACA,EAAA,IACLC,QAAGC,IAAA,UAAAkE,EAAApK,KAAAwG,QAAAC,YAAA,aACVzG,KAAAwG,QAAAC,YAAA,YAAA6D,KAAA,CAAAF,QAAAA,GAAApE,EAAA,SAAAA,GAEMM,GACIA,EAAaN,IAIhB,SACAU,GACQH,GACAA,EAAAG,QAKArF,UAAAkJ,eAAqB,SAAAH,EAAApE,EAAAM,EAAAC,UACxBvG,KAAAwG,QAAAC,YAAA,YAAA+D,OAAA,CACFJ,QAAAA,GACVpE,EAAA,SAAAA,GAEOM,GACGA,EAAaN,aAGJU,GAEPH,GAEGA,EAAAG,QAKArF,UAAAoJ,gBAAgB,SAAAL,EAAAT,EAAAlE,EAAAa,EAAAC,eAChBC,QAAAC,YAAqB,YAAA6D,KAAA,CACzBF,QAACA,EACFT,IAAAA,GACVlE,EAAA,SAAAO,GAELM,GAACA,EAAAN,IAMG,SAAAU,GAFQH,GAESA,EAAAG,kBAxFLuD,EAAIrD,EAAkBJ,EAAAK,QAErBD,aAAAA,EACL5G,KACAwG,QAACA,OACGK,WAAIA,gBACA,kBAoGpB6D,EAAOrJ,UAAA2F,KAAA,CAAA,eAAA,UAAA,aAAA,SAAAJ,EAAAJ,EAAAK,UAEO,MAAT7G,KAASiH,uDC5HFyD,GDsHR,SAACA,IAEL1K,KAAA8G,SAAA,mBCpHIrH,OAAA,kBAAA,CAAA,YACA0H,SAAA,kBAAAuD,QACAC,GAAA,CAAA,SAAAjK,EAAAjB,EAAAD,GACJ,iBAMCoL,EAJDvD,OAAA7B,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,KAICmF,EASApL,EAAAoL,kBAAApL,EAAAoL,gBAAA,KATDA,EAAC,MAAA,GAAA,QAJDA,EAICA,EAAA,KAAA,GAAA,OAJYA,EAAAA,EAAW,MAAA,GAAA,QAMxBA,EAAAA,EAAA,IAAA,GAAA,MAAAA,EAAAA,EAAA,KAAA,GAAA,OAAA,SAOAC,OASCA,YAAAA,EAPD,SAOAC,0BCzBI,SAHJC,OAMgBA,eAAUA,UALd,CAAA,SAAArK,EAAmBjB,EAAAD,uBASpBgG,eAAAhG,EAAA,aAAA,CAAAiG,OAAP,aAIgBrE,QAAA,CAAA,eAAkB,UAAA,cASlC4J,EAAC3J,UAAA4J,uBAAA,SAAA5E,EAAAC,EAAAC,GAEM,OAAAvG,KAAAwG,QAAAC,YAAA,sBAAezB,IAAiB,GAAA,SAAqCgB,GACjEM,GAECA,EAAgBN,EAAAA,gBAGZU,GACAH,GACHA,EAAAG,QAKArF,UAAA6J,eAAA,SAAAd,EAAA9D,EAAAC,GACL,OAAGvG,KAAAwG,QAAAC,YAAA,cAAAzB,IAAA,CACVoF,QAAAA,GAGM,SAAApE,GAA0BM,GAEjBA,EAAgBN,IAEzB,SAAQU,GAAUH,GACbA,EAASG,QAEbrF,UAAiB8J,SAAC,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjF,QAAQ,IAAP8E,IAAmBA,EAAA,GAC1CpF,QAAOC,IAAA,OAAUmF,GAEjB,IAAAhF,EAAY,GAmBf,OAbA,MAAA+E,IACQ/E,EAAA+E,QAAAA,GAEO,MAAZC,IACHhF,EAAAgF,KAAAA,GACM,MAAAC,IAEHjF,EAAWiF,YAAUA,GACxB,MAAAC,IAEMlF,EAAAkF,UAAAA,GAEHlF,EAAO+D,QAAKgB,EACfpL,KAAAwG,QAAAC,YAAA,cAAAgF,MAAApF,EAAAA,EAAAmF,EAAAjF,MAIclF,UAAUqK,cAAY,SAAaN,EAASI,EAAcjF,GACxE,OAAAvG,KAAAmL,SAAAC,EAAA,EAAA,KAAA,KAAAI,EAAAjF,MAIclF,UAAUsK,eAAY,SAAaP,EAAWE,EAAYC,EAAEC,EAAejF,GACzF,OAAAvG,KAAAmL,SAAAC,EAAA,EAAAE,EAAAC,EAAAC,EAAAjF,MAEwClF,UAAAuK,gBAAc,SAAAR,EAAAE,EAAAC,EAAAC,EAAAjF,GACnD,OAAOvG,KAAKmL,SAASC,EAAS,EAAEE,EAAaC,EAAYC,EAAcjF,MAK3DlF,UAAAwK,cAAkB,SAAAT,EAAAE,EAAAC,EAAAC,EAAAjF,eAClB4E,SAAAC,EAAsB,EAAAE,EAAAC,EAAAC,EAAAjF,MAG9BlF,UAAWyK,eAAA,SAAAV,EAAAE,EAAAC,EAAAC,EAAAjF,UACJvG,KAACmL,SAAaC,EAAG,EAAAE,EAAAC,EAAAC,EAAAjF,MAEnBlF,UAAA0K,iBAAA,SAAA3B,EAAApE,EAAAM,EAAAC,GAIN,YAHI,IAAAP,IAAAA,EAAA,IACVC,QAAAC,IAAA,UAAAkE,EAAApK,KAAAwG,QAAAC,YAAA,eAEMzG,KAAAwG,QAAAC,YAAA,cAAP6D,KAAwB,CAAAF,QAAiBA,GAAWpE,EAAA,SAAuCA,GAChFM,GAECA,EAAgBN,aAIZU,GACAH,GACHA,EAAAG,QAKArF,UAAA2K,iBAAA,SAAA5B,EAAApE,EAAAM,EAAAC,GACL,OAAGvG,KAAAwG,QAAAC,YAAA,cAAA+D,OAAA,CACVJ,QAAAA,GAELpE,EAAA,SAACA,GAAAM,GAEDA,EAAAN,IAEY,SAAQU,GAECH,GAEVA,EAAAG,MASFsE,cAzHWpE,EAA0BJ,EAACK,GAEnC7G,KACA4G,aAAWA,OACPJ,QAAIA,kBACAK,OACHC,SAAA,iBAsHbmF,KAKQ5K,UAAsB2F,KAAU,CAAC,eAAA,UAAA,aAAA,SAAAJ,EAAAJ,EAAAK,GCzIrC,6BAVR7G,KAAAiH,SAAA,IAAA+D,EAAApE,EAAAJ,EAAAK,IAUQ7G,KAAWiH,WAFHgF,GDwIhB,SAAAA,IAACjM,KAAA8G,SAAA,qBCjIIrH,OAAA,oBAAA,CAAA,YAEO0H,SAAA,oBAAA8E,WACJ,CAAA,SAAKvL,EAAcjB,EAAOD,KAChB4B,QAAK,CAAA,YAAA,2BAEJA,QAAY,CAAA,UAAA,SAAA,SAAA,aAAA,WAAA,YAAA,mBASVC,UAAQoC,UAAO,WAC/BzD,KAAA0D,cAAAC,OAAAC,MAAA,CACLC,MAAA,EAACC,MAAA,EAEDC,MAAA,cAMI/D,KAAA0D,cAAcC,OAAAK,iBACTN,cAAgBI,KAAAG,WACbjE,KAAK0D,cAASQ,WAAAC,KAAA,SACdnE,KAAA0D,cAAYU,QAAAC,UAEAhD,UAASkD,QAAA,WACrBvE,KAAAwE,QAAaC,QAAAC,QAExBwH,YA1BSA,EAAA1H,EAAArC,EAAAwC,EAAAC,EAAAC,EAAAC,EAAApB,GAEF1D,KAAKwE,QAAAA,EACLxE,KAAK0D,cAAcA,EACdoB,EAAcC,IAAQ,aAAOD,EAAAE,IAAA,YACrChF,KAAAyD,qBA2BD0I,EAAOrH,EAAAI,KAINC,MAAA,SAAA,oCCzDLG,aAAA,QAEA/B,YAAA,2BAgBA2D,QAAAzH,OAAA,gBAAC,CAAA,WAAA2M,OAAAD,QA0CGE,GAAA,CAAA,SAAA3L,EAAAjB,EAAAD,sCA/BeA,EAAqB,aAAA,CAAAiG,OAAA,UAW5B/E,EAAyB,4BACdA,EAAkB,8BAE9B,QAmbOU,QAAc,CAAA,OAAG,KAAA,SAAA,SAAA,YAAA,aAAA,gBAAA,iBAAA,WAAA,WAAA,wBAAA,eAxVtBC,UAAAiL,eAAA,SAAAC,GACL,OAACA,EAEM9K,EAAG+K,SAAAD,GACbA,EAGcA,EAAQE,QACdF,EAAiBE,QAGlBF,EAAAvG,MAAAuG,EAAWvG,KAAnByG,QACSF,EAAAvG,KAAuByG,QAITF,EAAAG,YAAA,GAef,MAGFrL,UAAAsL,MAAA,WACL3M,KAAA8C,OAAA,KAEO9C,KAAA4M,kBAGRC,EAACxL,UAAAyL,YAAA,WAGO9M,KAAA+M,uBAAAC,KAAA,CACA1K,MAAK,KACLyB,MAAK,oBACLkJ,GAAA,QACHC,OAAA,UACE,wBAECjH,QAAOC,IAAA,sBAGM7E,UAAQ8L,iBAAA,SAAAzG,QACrB0G,WAAOC,UAAA3G,IAEfmG,EAACxL,UAAAiM,SAAA,WAEOtN,KAAAuN,QACAvN,KAACmF,MAAW,UAKZ+B,QAAMsG,QAAWxN,KAAAyN,SAAAzN,KAAAyN,QAAA,EAAAzN,KAAAyN,OAAAxM,OAEjBjB,KAAKmF,MAAA,SAIT+B,QAAasG,QAACxN,KAAAyN,SAAAzN,KAAAyN,QAAA,GAAAzN,KAAAyN,OAAAxM,UACjBjB,KAAAmF,MAAA,YAKI9D,UAAAqM,WAAA,WAED1N,KAAK2N,YAAa,GAAA3N,KAAAsI,QAAA,OAEHjH,UAASuM,UAAA,WAC3B,IAAAlE,EAAA,GAMO,OAJA1J,KAAA6N,cACAnE,EAACoE,OAAU9N,KAAA6N,aAGXnE,KAE0BrI,UAAA0M,gBAAA,WAC1B/N,KAAAgO,UAAgCC,aAChCjO,KAAAgO,UAAkC5F,QAGtCpI,KAAA0N,aAEA1N,KAAKkO,0BACDF,UAAWG,SAAA,uBAAsBnO,KAAA2N,gBAEzBtM,UAAgB6M,mBAAc,0BAG3BE,YAAS,2BACR/M,UAAAgN,YAAA,SAAA9B,8BAGZkB,EAAC,GAIL,IAAK,IAAA9D,OAHM3J,KAAKsO,aAAM/B,GACtBgC,EAACvO,KAAAwO,iBAAAxO,KAAAyO,gBAAAC,IAE8B,CAC3B,IAAAC,EAAWJ,EAAW5E,GACvB,GAAA3J,KAAAyN,QAAA,EAAAzN,KAAAyN,OAAAxM,OAAA,CAGE,IAAO2N,EAASnN,EAAAoN,KAAA7O,KAAAyN,OAAA,SAAAkB,GAChB,SAAWA,GAAMA,EAAAG,OAAA,EAAAH,EAAAG,MAAA7N,QAAA0N,EAAAG,MAAA,GAAApI,MAAA2E,MAAA1B,KAMjBgF,EAAKI,YAAeH,KAAQA,EAAUG,UAEvCtB,EAACuB,KAAAL,GAEL3O,KAAKyN,OAAQhM,EAAGwN,OAAMxB,EAAA,SAAAkB,GAClB,OAAMA,EAAGO,YAEhBlP,KAAAuN,SAAA,EAEOvN,KAAAmP,UAAA,EAARnP,KAAA0G,OAAA,EACI1G,KAAIsN,cAGcjM,UAAC+N,QAAA,SAAA7C,GAInBvM,KAAKqP,KAAC3I,MAAS,UAAA4I,KAAAC,UAAAhD,SACXiD,UAAC,yDAEQjD,OAGRgB,SAAA,OACD4B,UAAC,cACO,OAGP7B,cAEQjM,UAAYoO,WAAW,eAGhC7N,EAAC5B,KACD0J,EAAA1J,KAAC4N,0BACQ,OAGRlH,OAAA,QACDgJ,SAAC,UACQC,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAAjO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,kBAEQiJ,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,kBAEQiJ,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,kBAEQiJ,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,kBAEQiJ,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,kBAEQiJ,GAGR/N,EAAAgO,YAAA7F,WAAAL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,SAGG,SAAUiJ,GACN/N,EAAKgO,YAAY7F,WAAQL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,SAE7B,SAAUiJ,GAAC/N,EAAKgO,YAAQ7F,WAAQL,EAAA9H,EAAAiO,OAAA,EAAAjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,SAE3C,SAAAiJ,GAEO/N,EAAAgO,YAAA7F,WAAAL,EAAR9H,EAAAiO,OAAqB,EAAgBjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,SAG/B,SAAKiJ,GACC/N,EAAAgO,YAAiB7F,WAASL,EAAQ9H,EAAQiO,OAAU,EAAGjO,EAAAkO,MAAAlO,EAAAkO,MAAA,SAAAvD,GAAAoD,EAAA,KAAApD,IAAA,SAAA7F,GAAAiJ,EAAAjJ,EAAA,mBAEnDA,EAAAkD,IACHlD,GAAAkD,GACJhI,EAAAyM,YAAAzE,GAGElD,GACV9E,EAAAwN,QAAAxF,QAGiCvI,UAAAiN,aAAA,SAAAI,GAC9B,IAAIqB,EAAQ,iBACNrB,EAAK,SAAaC,MAChBzH,QAAQ8I,SAAArB,IAAAzH,QAAAsG,QAAAmB,EAAA3I,MACR,IAAI,IAAKxF,EAAA,EAAOA,EAACmO,EAAA3I,KAAA/E,OAAAT,IACbuP,EAAUf,KAACL,EAAM3I,KAAKxF,WAMhBa,UAAOoN,gBAAA,SAAAC,SACb1O,OACH,GAsBT,eArBYwN,QAAMkB,WACVA,EAAY,SAAKC,GAClB,IAAAhF,EACNgF,EAAAjI,MAEWiD,EAAAgF,EAAAjI,MAAA2E,MAGhB1B,EAeC,YAbcgF,EAAEjI,MAAC,IAAwBuJ,EAAAC,kBAEnCC,EAAAxG,KAGQwG,EAAExG,GAAC/H,EAAwBwO,aAAAzG,IAEjB/H,EAAKwO,aAAazG,GAC/BwG,EAAKxG,GAAK/H,EAAQyO,YAAWF,EAAMxG,GAAMgF,KAG9CwB,GAEPtD,EAACxL,UAAAmN,iBAAA,SAAA2B,GAEO,IAAAvO,EAAA5B,KAaJ,OAZAyB,EAAA6O,KAAIH,EAA2B,SAAAxB,GAE/BA,EAAS/M,EAAA2O,WAAA5B,YAELwB,EAAS,SAAKxB,GACH,EAAXA,EAAOG,MAAI7N,SACP0N,EAAE6B,MAAI7B,EAAAG,MAAA7N,OACV0N,EAAQ8B,MAAA9B,EAAAG,MAAAH,EAAAG,MAAA7N,OAAA,GAAAyP,cACR/B,EAASgC,KAAOhC,EAAAG,MAAA,GAAA4B,iBAIbP,GAGHtD,EAAAxL,UAAA+O,aAAR,SAAoBzG,SAGP,CACLmF,MAAM,GACNI,UAAUvF,EACV8G,MAAA,KACAE,KAAA,KACAH,MAAA,EACAzB,WAAU,EACV/B,KAAA4D,EAAuBjI,yBAAMC,UAMnBvH,UAAAgP,YAAA,SAAAQ,EAAAlC,GACjB,IAAAmC,EAgBM,OAdCA,EAAA,IAAAF,EAAA9I,gBACJ+I,GAAWA,EAAU/B,QACjBgC,EAAOJ,cAAUK,OAAApC,EAAAqC,MAClBF,EAAAE,KAAAF,EAAAJ,cAAAO,SAAAC,UAEHJ,EAAOK,eAAWxC,EAAAwC,eACrBL,EAAAE,KAAArC,EAAAqC,KAEMF,EAAAM,MAAAzC,EAAAyC,MACCN,EAASpK,MAAQiI,EAAAjI,MACjBoK,EAACrE,QAAmBkC,EAAAlC,QACpBoE,EAAC/B,MAAYE,KAAC8B,IAGfD,GAEPhE,EAACxL,UAAAkP,WAAA,SAAAc,GAQG,OANGA,EAAAvC,MAAArN,EAAAwN,OAAAoC,EAAAvC,MAAA,SAAPH,GAGC,OAAAA,EAAAqC,OAGQK,KAEAhQ,UAAiBiQ,eAAA,WACzBtR,KAAAmP,UAAA,EAEMnP,KAAA6N,YAAA7N,KAAA8C,OACH9C,KAAIyP,gBAEcpO,UAAQkQ,gBAAe,gBACrCxD,mBAERlB,EAACxL,UAAAmQ,oBAAA,aAeD3E,EAACxL,UAAAuL,eAAA,WAUM5M,KAAA6N,YAAA7N,KAAA8C,OACH9C,KAAKyR,UAAO3O,OAAS,SAAG9C,KAAA6N,aAC3B7N,KAAAsR,oBAGejQ,UAAAqQ,eAAA,YACf1R,KAAA8C,QAAA9C,KAAA6N,eAEM7N,KAAA6N,YAAA7N,KAAA8C,OAEN9C,KAAAyR,UAAA3O,OAAA,SAAA9C,KAAA6N,aAEL7N,KAAAsR,mBAGIzE,EAAOxL,UAAAsQ,gBAAA,SAAAhD,OAEQtN,UAAgBuQ,WAAE,SAAAjD,GACzBA,EAAA3B,KAAU2B,EAAA3B,KAAA4D,EAAmBjI,yBAAAE,QAEjBxH,UAAAwQ,WAAqB,SAAAlD,GACnCA,EAAA3B,KAAA4D,EAAAjI,yBAAAC,uCCxfNiE,cD+d2BiF,EAAGC,EAAApN,EAAAxC,EAAA6P,EAAApN,EAAAlB,EAAAuO,EAAAC,EAAA/L,EAAAgM,EAAAC,OAC1BxQ,EAAC5B,KACLA,KAACqS,QAAA,IAAAzB,EAAAlI,aAtZG1I,KAAK6N,YAAY,GACjB7N,KAAKsS,aAAQ,EACbtS,KAAKuS,kBAAgB3B,EAAAjI,yBAAAC,MACrB5I,KAAKuN,SAAS,EACdvN,KAAKmP,UAAS,EACdnP,KAAK0G,OAAA,EACL1G,KAAKqC,WAAY,SAASC,GACA,KAArBA,EAASC,UAETD,EAAAE,kBACAF,EAAAG,iBAEAzC,KAAM4M,mBAGX5M,KAAKqP,KAAOyC,EACZ9R,KAAKwS,GAAAT,EAIL/R,KAAKyS,OAAS9N,EACd3E,KAAKwB,OAAAW,EAELnC,KAAKyR,UAAUO,EAEfhS,KAAK4P,YAAWqC,OACZjE,UAAKkE,EACTlS,KAAG0S,UAAAvM,EAGHnG,KAAK+M,uBAAkBoF,EACvBnS,KAAIoN,WAAcgF,OACdvC,OAAS7P,KAACqS,QAAYjK,iBACdpI,KAACqS,QAAWhK,sBACX,OACRC,QAAAtI,KAAAqS,QAAA/J,QACLtI,KAAGyI,aAAAzI,KAAAqS,QAAA5J,aAEHzI,KAAA8C,OAAW9C,KAAAyR,UAAY3O,SAAAA,QAAA9C,KAAAqS,QAAA9J,mBACnBsF,YAAY7N,KAAA8C,qBACR,OACHtB,OAAAmR,IAAA,WAAA,WACF/Q,EAAAsM,uBAGHlO,KAAK+N,kBAER,IAAA6E,EAAAhO,EAAA+N,IAAA,uBAAA,WAEO/Q,EAAA0Q,cACA1Q,EAAUuN,UAAE,EACRvN,EAAE6N,kBAEJkD,IAAO,WAAY,WACjBzL,QAAOxF,WAAUkR,IACpBA,WAEAtF,gBAACmC,qBCzHNhQ,OAAI,iBAAqB,IACzB2G,UAAK,iBAAY,CAEpByM,SAAAC,EAEOvP,YAAA,0BACJF,WAAKwJ,iCAGM,EAAYkG,yBAAA,IAAAC,GAAA,CAAA,SAAAtS,EAAAjB,EAAAD,KACrB4B,QAAA,CAAA,YAAA,2BAEGA,QAAkB,CAAC,UAAW,SAAA,SAAA,aAAA,WAAA,YAAA,iBAxB3C6R,EAgCC5R,UAAAoC,UAAA,WAEDzD,KAAA0D,cAAAC,OACIC,MACA,CAEAC,MAAW,EAEXC,MAAc,EACTC,MAAM,cAEH/D,KAAA0D,cAAYC,OAAAK,YACZhE,KAAI0D,cAAOI,KAAAG,WACXjE,KAAA0D,cAAcQ,WAAOC,KAAA,SACrBnE,KAAA0D,cAAaU,QAAAC,QAExB4O,EAAA5R,UAAAkD,QAAA,WAIAvE,KAAAwE,QAAAC,QAAAC,QAGQuO,YA9BIA,EAAczO,EAAWrC,EAAOwC,EAASC,EAAAC,EAAAC,EAAApB,GAEjD1D,KAAAwE,QAAAA,EAEMxE,KAAA0D,cAAAA,EACUoB,EAAYC,IAAG,aAAAD,EAAAE,IAAA,YAC/BhF,KAAAyD,YA2BL,SAAKyP,EAAApO,EAAAI,qBCpDCE,IAAA,UAIN/B,WAAA4P,EAAA5N,MAAA,EAGCC,aAAA,QAAD/B,YAAA,2BAMA2D,QAAAzH,OAAA,gBAAC,CAAA,WAJD2M,OAAA8G,IAEW,IAAAC,GAAA,CAAA,SAAezS,EAAOjB,EAAAD,GACtB,aAGX6H,OAAA7B,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,QAAA2N,EAAA,GAGWC,EACA,eAkBKC,SAAA,aACAC,KAAA,SACDC,MAAA,6BAVJC,UAAgB,cAGhBC,SAAgB,aASdC,KAAA,SACRC,IAAA,CAAA,YAAA,WAAA,YAGOC,KACczS,QAAC,CAAA,YAAA,SAAA,gBAAA,WAAA,aAsBfyS,EAAAxS,UAAAyS,MAAA,WACJ9T,KAAK8C,OAAQ,KAChB9C,KAAA+T,mBAqBA1S,UAAA2H,WAAA,WAlBG,IAAIpH,EAAM5B,KACVA,KAAEmP,UAAY,OACV6E,cAAShL,WAAgBhJ,KAAI4N,YAAQ5N,KAAU6P,OAAA7P,KAAA8P,MAAA,SAAAmE,KAC3CC,aAAYD,aACfE,GAACvS,EAAMwS,kBAAAD,QAGT9S,UAAAuM,UAAA,WACH,OAAI5N,KAAK8C,OAAY,CAAAgL,OAAU9N,KAAK8C,QAAU,MAE7CzB,UAAA+S,kBAAA,SAAA1N,GAED1G,KAAK0G,MAAMA,KAEErF,UAAY6S,aAAe,SAAWD,OACtCrS,EAAA5B,KAEbA,KAAK0G,MAAQ,KAChBjF,EAAA6O,KAAA2D,EAAAjO,KAAA,SAAAqO,EAAAC,GAEM,IAAA1S,EAAAiO,QAAAjO,EAAAqS,OAAaK,GACX1S,EAAQqS,OAAKK,GAAaD,EAI1BzS,EAAAqS,OAAajF,KAAAqF,KAEzB,IAAArU,KAAA6P,QAAAoE,EAAAjO,KAAA/E,OAAAjB,KAAA8P,OAEA9P,KAAAiU,OAAAM,OAAAN,EAAAjO,KAAA/E,OAAAjB,KAAA8P,MAAAmE,EAAAjO,KAAA/E,aAEQ4O,QAAO7P,KAAA8P,WACPA,MAAU,IACP9P,KAAAmF,MAA6B,EAAnB8O,EAAAjO,KAAA/E,QAAmB,IAAAjB,KAAA6P,QAAA,EAAA7P,KAAAiU,OAAAhT,OAC7BoS,EAAaE,KAAAF,EAAAG,MACbxT,KAAAmP,UAAY,GAGpB0E,EAACxS,UAAA0S,cAAA,oDCrHJ/T,KAAA6P,OAAA,EAEG7P,KAAOgS,UAAAlP,OAAA,SAAA9C,KAAA8C,aACFkG,cAGG6K,YD+CCA,EAAgB7B,EAAArN,EAAAqP,EAAA7N,EAAAiM,GACxBpS,KAAAgS,UAAAA,EAEMhS,KAAA2E,OAAAA,EAAP3E,KAAAgU,cAYCA,EAXGhU,KAAKmG,SAAWA,EAEfnG,KAAKoS,UAAAA,OAEE6B,OAAK,GACTjU,KACA6P,OAAC,OACGC,MAAK,IACT9P,KACF8C,OAAA,GAEL9C,KAAAmF,MAAAkO,EAAAC,SAEQtT,KAAA0G,MAAA,KACL1G,KAAAgJ,qBC7DIvJ,OAAA,iBAAiB,IAEjB2G,UAAA,iBAAe,CACfyM,SAAAO,EAEA7P,YAAA,0BACAF,WAAAwQ,YAIA,CAAA,SAAAnT,EAAAjB,EAAoBD,WAGpBC,OAAA,YAAgB,CAEhB,eACA,sBACA,iBACA,sBAEA,iBACA,kBACA,gBACA,iBACA,uBAEF,kBAEL,0EClCL,gBAAA,iBAIC,uBAAD,kBAJA,kBACW,mBACA,yBACA,uBAHE,oBAMb,oBAQI,+BANO,CAAA,SAAKiB,EAAWjB,EAAaD,sCAGXA,EAAE,aAAA,CAAAiG,OAAA,UAGgC,eAKpD6N,SAAA,aACEC,KAAQ,SAChBC,MAAA,UAEMgB,cAAAA,WAcCnT,UAASoT,YAAA,kBACFzU,KAAC0U,YAEHrT,UAAAsT,YAAA,SAAAD,GACL1U,KACF0U,SAAAA,GAKCE,EAAAvT,UAAAiM,SAAA,SAAPnI,GACInF,KAAKmF,MAAMA,GAGfyP,EAACvT,UAAAwT,SAAA,WAEO,OAAA7U,KAAAmF,SACC9D,UAAcwI,YAAY,SAAS/G,EAAW6M,EAAUmF,OACzDlT,EAAA5B,KAEJA,KAAEiS,eAAkBpI,YAAC,CAAAiE,OAAahL,GAAA9C,KAAA6P,OAAA7P,KAAA8P,MAAA,SAAAhK,GAC9BlE,EAAKmT,cAASjP,EAAU6J,IACzB,SAAAwE,GAEEW,GAEGA,EAAcX,QAKjB9S,UAAA2T,eAAA,SAAAlS,EAAA6M,EAAAmF,GACL9U,KAAC6P,OAAA,EAAC7P,KAAK6J,YAAC/G,EAAA6M,EAAAmF,MAGJzT,UAAW0T,cAAA,SAAAE,EAAAtF,OACX/N,EAAQ5B,KACZA,KAACmF,MAAA,EAAA8P,EAAAjP,KAAA/E,QAAA,IAAAjB,KAAA6P,QAAA,EAAA7P,KAAA0U,SAAAzT,OAEJuT,EAAAjB,KAAAiB,EAAAhB,MAEL/R,EAAA6O,KAAA2E,EAAAjP,KAAC,SAAAqO,EAAAC,GAAA1S,EAAA8S,SAAAJ,GAAA1S,EAAA8S,SAAAJ,EAAA1S,EAAAiO,QAAAwE,EAAAzS,EAAA8S,SAAA1F,KAAAqF,iCClFDrU,KAAA8J,OAAA9J,KAAA6P,QAAA7P,KAAA8P,OAAAmF,EAAAjP,KAAA/E,UACIjB,KAAA8J,MAAA9J,KAAA6P,OASI7P,KAAW0U,SAAAzT,OAAAjB,KAAA8J,OARH9J,KAAO0U,SAAAH,OAAmBvU,KAAA8J,MAAA9J,KAAA0U,SAAAzT,OAAAjB,KAAA8J,QAe9B6F,GACAA,QDWR,SAACiF,EAAA3C,GAEMjS,KAAAiS,eAAAA,EACHjS,KAAA0U,SAAY,GACf1U,KAAAmF,MAAAqP,EAAAlB,SAEMtT,KAAA8J,MAAA,EAAP9J,KAAA6P,OAAA,EACI7P,KAAK8P,MAAA,MCbL8E,aAAKA,UACL,CAAA,SAAKlU,EAAcjB,EAAKD,KACnB4B,QAAc,CAAA,YAAkB,yBAEzC8T,EAAC9T,QAAA,CAAA,UAAA,SAAA,SAAA,aAAA,WAAA,YAAA,iBAaD8T,EAAc7T,UAAAoC,UAAA,gBACTC,cAAiBC,OAAAC,MAAA,CACXC,MAAE,EACLC,MAAU,EACNC,MAAO,cAEX/D,KAAA0D,cAAaC,OAAAK,YACdhE,KAAA0D,cAAAI,KAAAG,WACVjE,KAAA0D,cAAAQ,WAAAC,KAAA,UAIAnE,KAAA0D,cAAAU,QAAAC,UAGehD,UAAgBkD,QAAG,gBAC1BC,QAAOC,QAAAC,WA3BL,SAAAwQ,EAAA1Q,EAAOrC,EAAdwC,EAAAC,EAAAC,EAAAC,EAAApB,GAEC1D,KAAAwE,QAAAA,EACLxE,KAAA0D,cAACA,EAAAoB,EAAAC,IAAA,aAAAD,EAAAE,IAAA,YAEDhF,KAAAyD,4BCtBAyB,EAAAC,MAAA,UAAA,CAGCC,IAAA,WAAD/B,WAAA6R,EAAC7P,MAAA,EAEDC,aAAA,QAAA/B,YAAA,6BACW2D,QAGXzH,OAAA,iBAAA,CAAA,WAAA2M,OAAA+I,QAKAC,GAAA,CAAA,SAAA1U,EAACjB,EAAAD,GAAD,aAJW6H,OAAA7B,eAAOhG,EAAW,aAAU,CAAAiG,OAAA,IAC5B,IAAA4P,EAAA,oBASAC,MAAO,CAAa,EAAA,EAAA,EAAA,GAAA,GAAe,yBAOlCC,QAAW,YAaVC,cAAc,kBACdC,MAAS,UACT7B,IAAM,CAAG,UAAK,gBAAmB,kBAEnBxS,QAAA,CAAA,sBAAA,YAAA,WAAA,WAAA,iBAAA,gBAmCAC,UAASqU,WAAK,gBAC7BxD,SAAK9D,YAAiB,WACzBlH,QAAAxF,WAAA1B,KAAA4S,cAEG5S,KAAC4S,eAGT+C,EAACtU,UAAAqT,SAAA,WAEM,OAAA1U,KAAA4V,oBAAAC,SAEPF,EAACtU,UAAA8D,MAAA,WAEO,OAAAnF,KAAA4V,oBAAAzQ,OAERwQ,EAACtU,UAAAwI,YAAA,WAEM,IAAAjI,EAAA5B,KACHA,KAAKsS,aAAc,EACtBtS,KAAA8V,YAAAC,MAAA,cAEO/V,KAAA4V,oBAAA/L,YAAO7J,KAAf8C,OAAgB,WAAUlB,EAAAmT,iBAAA,SAAArO,GAAA9E,EAAAwN,QAAA1I,QAELrF,UAAQ0M,gBAAA,WACpB/N,KAAAkS,SAAcjE,aACtBjO,KAAAkS,SAAA9J,QAGGpI,KAAK0N,aACL1N,KAAKkS,SAAQ9D,YAAK,WAClBpO,KAAKkS,SAAA/D,SAAkB,UAAAnO,KAAAgW,eAGpBL,EAAAtU,UAAAkQ,gBAAP,WAAAvR,KAAA+N,qBAEuB1M,UAAKqM,WAAA,WACxB1N,KAAKgW,aAA8B,IAAlBhW,KAAMsI,SAE3BqN,EAACtU,UAAA4U,mBAAA,WACMjW,KAAAkW,YAAAlW,KAAAkW,cAEgB7U,UAAG+N,QAAA,SAAA1I,GACzB1G,KAAA0G,MAAAA,EAEL1G,KAAA8V,YAAAK,QAACnW,KAAAsS,aAAA,GAGGqD,EAAOtU,UAAA0T,cAAA,gBACFzC,aAAO,OACP5L,MAAU,KACP1G,KAAA8V,YAAUM,SAEE/U,UAAA2T,eAAsB,WACpC,IAAApT,EAAA5B,KAELA,KAAAgS,UAAAlP,OAAA,SAAA9C,KAAA8C,+KCvIL6S,EAAAtU,UAAAM,SAAA,WAGI3B,KAAA8C,OAAA9C,KAAA6B,YACI7B,KAAAgV,kBACAW,YD0CKA,EAAkBC,EAAA5D,EAAAE,EAAA/L,EAAAkQ,EAAAzR,GACvB,IAAIhD,EAAC5B,UACD4V,oBAAqBA,iBACZ5D,OACRE,SAAAA,EACLlS,KAAGmG,SAAAA,EAENnG,KAAAkW,YAAA,EAEMlW,KAAAsW,QAAAC,EAAA3C,IACH5T,KAAKsI,QAASkO,EAAYlB,MAAS,GACnCtV,KAAIyI,aAAQ+N,EAAgBlB,WACxBxS,OAAK,GACT9C,KAAC6B,YAAA,GACJ7B,KAAA0G,MAAA,KAEM1G,KAAAsS,aAAA,EACHtS,KAAA8V,YAAYO,EAAoB1O,OAAQ,UAC3C3H,KAAA0J,OAAA1J,KAAAgS,UAAAlP,SAAA4G,QAAA6M,EAAAhB,QAEMvV,KAAA8C,OAAA9C,KAAAgS,UAAAlP,SAAPA,QAAA,GACI9C,KAAA6B,YAAY7B,KAAA8C,OACf9C,KAAA6J,cAGM7J,KAAA+N,kBAAP/N,KAAA4S,YAIChO,EAAA+N,IAAA,UAAA,YAHQ/Q,EAAA0Q,aAAmB1Q,EAAAsU,YACnBtU,EAAAoT,kCCjEL,kBAAqB,IACxB5O,UAAA,kBAAA,UAEDiP,cACS,4BACThS,WAACsS,YAJA,CAAA,SAAAjV,EAAAjB,EAAAD,sCAMDA,EAAA,aAAA,CAAAiG,OAAA,UACW/E,EAAK,uBAGhBU,QAA8B,CAAA,kBAKvBiG,OAAA7B,eAAAiR,EAAWpV,UAAlB,UAAoC,CAChC2D,IAAK,WACR,OAAAhF,KAAA0W,SAAAjC,eAEGkC,IAAK,SAASjC,GACjB1U,KAAA0W,SAAA/B,YAAAD,IACJkC,YAAA,EAEAC,cAAA,WAGQrR,eAAOiR,EAAwBpV,UAAU,QAAA,KACzC,WAEJ,OAAArB,KAAA0W,SAAA7B,YClDL8B,IAAA,SAAAxR,GAEInF,KAAA0W,SAAgBpJ,SAAAnI,IAGbyR,YAAA,EACFC,cAAO,4CCNZ7W,KAAA0W,SAAA7M,YAA+B/G,EAAA6M,EAAuCmF,IAGrE2B,EAAApV,UAAA2T,eAAA,SAAAlS,EAAA6M,EAAAmF,GAEM9U,KAAA0W,SAAA1B,eAAAlS,EAAA6M,EAAAmF,IAEI2B,YFyBHA,EAAcxE,6DG9BlB/K,QACAzH,OAAA,sBAAkC,CAAA,WACrCqX,QAAA,sBAAAL,sBAGW,KAAAM,GAAA,CAAA,SAA0BrW,EAAAjB,EAAAD,iBCPtCwX,EAAAC,kBAAiC,WAAuC,sBDQ5D7V,QAAsB,CAAC,kCCFvB,uBAAyB,IAC5BgL,OACH8K,QACFC,GAAA,CAAA,SAAezW,EAACjB,EAAAD,GAIpB,SAAO4X,EAAAJ,KACKC,kBAA0B,SAAC,oBAHvCG,EAAChW,QAAA,CAAA,2BCXD3B,OAAA,qBAAA,IAEI2M,OAAAgL,QACAC,GAAA,CAAA,SAAe3W,EAACjB,EAAAD,GAGpB,SAAC8X,EAAAN,GAEDA,EAAOC,kBAAA,UAAA,qBACKA,kBAA0B,SAAG,4BALrB7V,QAAA,CAAA,2BCJpB3B,OAAY,sBAAC,eAEb,IAAA8X,GAAA,CAAA,SAAA7W,EAAAjB,EAAAD,YAGCgY,EAAAR,GAADA,EAAAS,wBAAC,WAAA,iCAAA,CAAArN,QAAA,YAAA,CAAAsN,KAAA,CAAAC,OAAA,MAAAnK,SAAA,GAHYhD,OAAA,CAAAmN,OAAA,SAWTX,EAAAC,kBAAA,mBAEI,0BAbR7V,QAAA,CAAA,kCAkBY,uBAAuB,WACvBoW,WACJ,CAAA,SAAW9W,EAAIjB,EAAWD,YAE1BoY,EAA2BZ,KAEhBC,kBAAmB,sBAAG,iCACxBA,kBAAQ,qBAAoB,+BACpCA,kBAAA,aAAA,uCALe7V,QAAW,CAAA,kCASvB,yBAA0B,IACjCgL,OAAAwL,QAEMC,GAAA,CAAA,SAAAnX,EAAAjB,EAAAD,uBAENgG,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,QACLqS,EA/BA,eAmCKA,YAAWA,EAEhB,IAAAC,+DC1B6B1W,UAAO2W,KAAA,gBACxBC,UAAA5T,KAAArE,KAAqB2J,QAEFtI,UAAA6W,SAAA,gBACnBD,UAAI/K,iCAfhBlN,KAAA+D,MAAA,mBAEI/D,KAAAiY,UAAAA,EACIjY,KAAKmY,MAAAvT,EAAYwT,OACpBpY,KAAA2J,IAAA,IAAAmO,EACM9X,KAAA2J,IAAA0O,KAAAhS,EAAAgS,KAAAhS,EAAPgS,KAAAC,QAAY,QAAQ,IAAA,KACftY,KAAK2J,IAAA3D,KAAUK,EAAKL,KACjBK,EAAAgS,MAAahS,EAAOL,OACpBhG,KAAA+D,MAAa,sDAWQgU,iBAErB,0BAAC,CAAA,0BACF,oCAAAA,KAEN,uDAEL,KAACQ,GAAA,CAAA,SAAA7X,EAAAjB,EAAAD,GAAD,aAEA6H,OAAO7B,eAAAhG,EAAA,aAAA,CAAAiG,OAAA,aAEMrE,QAAA,CAAA,aCnCboX,EAAAnX,UAAA2L,KAAA,SAAA3G,EAAAC,EAAAmS,GAMIzY,KAAA0Y,UAAA1L,KAAA,CAKI2L,YAAWtS,EAAA/D,MAEPiB,YAAa,qCACbF,WAAS,oCAEhBiC,aAAA,QAEMsT,OAAA,CAAAvS,OAAAA,GACCwS,qBAAqB,IAGtBC,KAAA,SAAAnP,GACErD,GACRA,EAAAqD,IACJ,WAzBY8O,GA2BNA,wBA7BPzY,KAAa0Y,UAAAT,UCKbxY,OAAA,2BAEIqX,QAAA,0BAAmB0B,WACf,CAAA,SAAK9X,EAAYjB,EAASD,uBAEvBgG,eAAAhG,EAAA,aAAI,CAAXiG,OAAA,aAEiCrE,QAAA,CAAA,SAAA,YAAA,YAAA,gBAM1BC,UAAA2W,KAAA,gBACFC,UAAK5T,KAACrE,KAAA+Y,gBAEiB1X,UAAc6W,SAAA,gBACjCD,UAAA/K,sBATD8L,EAAa3S,EAAA4R,EAAwCnT,EAAAF,QAErDqT,UAAYA,OACZE,MAAQvT,EAASwT,4CAUhBY,UAGRvZ,OAAA,8BAAA,CAAA,eAEL4D,WAAA,wCAAC2V,GAADtY,EAAC,gCAED,CAAAuY,8BAAO,KAAAC,GAAA,CAAA,SAAAxY,EAAAjB,EAAAD,uBAEFgG,eAAQhG,EAAA,aAA+B,CAAAiG,OAAA,WCnC5C0T,EAAA/X,QAAA,CAAA,eAQgBC,UAAA2L,KAAkC,SAAA3G,EAAAC,EAAAmS,GAI1CzY,KAAI0Y,UAAW1L,KAAA,CACX2L,YAAatS,EAAA/D,MAEpBiB,YAAA,yCAEOF,WAAA,wCACAiC,aAAc,QACdsT,OAAM,CAAAvS,OAAKA,GACXwS,qBAAW,IAEbC,KAAA,SAAAM,GACG9S,GACAA,EAAmB8S,IAExB,WACHX,GAEMA,OAGVU,GA/BG,SAAAA,EACsClB,GAQlCjY,KAAA0Y,UAAWT,UA8BfxY,OAAA,uCACK,8BAAuB0Z,WACpB,CAAA,SAAKzY,EAAAjB,EAAgBD,KACT4B,QAAA,CAAA,YAAkB,2BAEhBA,QAAO,CAAA,UAAA,SAAA,SAAA,aAAA,WAAA,YAAA,iBAa7BiY,EAAChY,UAAAoC,UAAA,4DClDCM,MAAA,cAIN/D,KAAA0D,cAAAC,OAAAK,YAGChE,KAAA0D,cAAAI,KAAAG,WAADjE,KAAA0D,cAAAQ,WAACC,KAAA,WAAAnE,KAAA0D,cAAAU,QAAAC,QAEDgV,EAAAhY,UAAAkD,QAAA,WAICvE,KAAAwE,QAAAC,QAAAC,QAJD2U,YD6BYA,EAAa7U,EAAArC,EAA4BwC,EAAAC,EAAAC,EAAAC,EAAApB,GAEpD1D,KAAAwE,QAAAA,EAIAxE,KAAA0D,cAAAA,EAEUoB,EAAAC,IAAA,aAAAD,EAAAE,IAAA,iBACFvB,YCpCE,SAAA6V,EAAsBxU,EAAAI,GAKjCA,EAAAC,MAAA,gBAAA,CAEWC,IAAA,iBACV/B,WAAAgW,EAADhU,MAAA,EAACC,aAAA,QAHY/B,YAAA,uCAmBG9D,OAAA,kBAA8B,CAAA,WAC9B2M,OAAAkN,WAIA,CAAA,SAAM5Y,EAANjB,EAA2BD,sCAEpBA,EAAR,aAAmC,CAAAiG,OAAA,UAClC,oBAUP6N,SAAA,aACJC,KAAA,SAEOC,MAAA,qBAGJxT,KAAKqE,MAAK,mBAKGkV,WAESnY,QAAG,CAAA,UAAmB,YAAA,YAAA,iBAAA,OAAA,8BAAA,SAAA,kBAAA,WAAA,0BAAA,2BAqC/BC,UAAiB8I,aAAC,eAC3BvI,EAAC5B,KACLA,KAAC8V,YAAAC,MAAA,oBACJ/V,KAAAmF,MAAAqU,EAAAhG,MAEMxT,KAAA8V,YAAAM,MACHpW,KAAKyZ,gBAAcvP,qBAAA,GAAA,SAAAwP,GACf9X,EAACuD,MAAWqU,EAAAlG,SACnB1R,EAAA+X,eAAAD,GAEO,EAAAA,EAAAzY,OACCW,EAAKuD,MAAUqU,EAAejG,KAI/B3R,EAAQuD,MAAQqU,EAAgBhG,OAEnC,SAAA9M,GAAK9E,EAAEwN,QAAA1I,MAGZkT,EAACvY,UAAAM,SAAA,WAEO,IAAAC,EAAA5B,KAIJ,GAJJA,KAAAgS,UAAAlP,OAuCC,SAAA9C,KAAA8C,QAtCGrB,EAAA6O,KAAKtQ,KAAA0Z,iBAAsB,SAAA/K,EAAAkL,GACzBjY,EAAK8X,iBAAkBG,GAAAxV,KAAazC,EAAAkY,eAAAnL,EAAA0J,SAEpCrY,KAAA0Z,iBAAA1Z,KAAA+Z,cAAA,GAAA/Z,KAAA0Z,iBAAA1Z,KAAA+Z,aAAA1V,KAAA,CACE,IAACwV,EAAWpY,EAAEuY,UAACha,KAAA0Z,iBAAA,CAAArV,MAAA,KAEP,GAALwV,GACC7Z,KAAAmF,MAAYqU,EAAUhG,MACtBxT,KAAI+Z,YAAY,OAIhB/Z,KAAImF,MAAmBqU,EAAcjG,KAErCvT,KAAIia,WAASJ,QAILxY,UAAoBsL,MAAA,uBACtB,wBAGMtL,UAAUyY,eAAS,SAAA1P,yBACtB,IAAApK,KAAA8C,UAGP,KAAAoX,QAAAla,KAAA8C,WAQGzB,UAAUsY,eAAuB,SAAUD,OACpD9X,EAAG5B,KAEPA,KAAG0Z,iBAAA,GACNjY,EAAA6O,KAAAoJ,EAAA,SAAA/K,GAEO/M,EAAA8X,iBAAA1K,KAAA,CAAAqJ,KAAR1J,EAAAtK,MAAgB,MAEZrE,KAAKma,SAAW,GACnB1Y,EAAA6O,KAAAtQ,KAAA0Z,iBAAA,SAAAtP,EAAAyP,GAEMzP,EAAAiO,OAAAzW,EAAAoQ,UAAUlP,SAAjBsH,UACSxI,EAAAmY,YAAoBF,GAE5BjY,EAAA6X,gBAAAtP,aAAAC,EAAAiO,KAAA,SAAA8B,GAEM,IAAAC,EAAA3Y,EAAA2Y,KAAAD,GAAPC,EAAA3Y,EAeC4Y,IAAAD,EAAA,SAAAzQ,GAdQ,GAAA,YAAAA,GACD,aAAAA,EACa,OAAKA,EACR,IAAI2Q,EAAA7Y,EAAA6Y,MAAA3Q,EAAA,KACA4Q,EAAA,GAON,OALR9Y,EAAC6O,KAAGgK,EAAA,SAAAE,EAAAX,GACKU,GAAYC,EACDX,GAAOS,EAAArZ,OAAA,IACdsZ,GAAA,YAEAA,IAEX,IAAAE,EAAAhZ,EAAAiZ,UAAAN,EAAA3Y,EAAAkZ,OAAAR,IACTvY,EAAAuY,SAAAN,GAAAY,EAEO7Y,EAAAkU,YAAAM,MAARxU,EAAAuD,MAcCqU,EAAAjG,MAbU,SAAK7M,GACJ9E,EAAMkU,YAAMK,QAGfvU,EAAAwQ,UAAgB/E,UAAA3G,EAAoB,KAAA,KAAA,KAAiB,aAOnCrF,UAAU+N,QAAO,SAAY1I,GAChD1G,KAAG0G,MAAAA,EACV1G,KAAA8V,YAAAM,IAAA1P,MAiBArF,UAAA4Y,WAAA,SAAAJ,GAdG7Z,KAAK+Z,YAAAF,OAEG7H,UAAWlP,OAAA,UAAA9C,KAAA0Z,iBAAAG,GAAAxB,SAEChX,UAAAuZ,UAAA,SAAAvC,EAAArS,OACZpE,EAAQ5B,UAEZ6a,wBAAA7N,KAAA,CACI5C,QAAKpK,KAAA0Z,iBAAsB1Z,KAAA+Z,aAE/B1B,KAAAA,EACIrS,KAAAA,GAEN,SAAA2D,GACL/H,EAAAkU,YAAAC,MAAA,eAEMsC,GAAA1O,EAAA0O,KAAPzW,EAAAkZ,qBAaCnR,GAVQ/H,EAASmZ,wBAAsBpR,EAAK0O,QAM5BhX,UAAoB0Z,wBAAA,SAAApR,EAAA0O,OAEzBzW,EAAK5B,KACTqY,EAAGA,EAAAC,QAAA,IAAA,UACV3O,EAAA0O,KAAA1O,EAAA0O,KAAAC,QAAA,IAAA,UAEMtY,KAAAyZ,gBAAApP,eAAMrK,KAAb0Z,iBAAA1Z,KAAA+Z,aAAA1B,KAAA1O,EAAA0O,KAAA,SAAArS,GAAApE,EAAAkU,YAICM,OAHG,SAAK1P,GACD9E,EAAKkU,YAAAK,QACPvU,EAAAwQ,UAAA/E,UAAA3G,EAAA,KAAA,KAAA,KAAA,WAwBLrF,UAAA2Z,oBAAA,SAAArR,EAAAlE,GApBG,IAAI7D,EAAC5B,KAELA,KAAImS,sBAAiCnF,KAAK,CAEtC1K,MAAM,KACNyB,MAAI,0BACA,SACJmJ,OAAC,UACJ,WACDtL,EAASqZ,UAAStR,EAAOlE,IACzB,WACIQ,QAACC,IAAA,sBAKQ7E,UAAoB4Z,UAAA,SAAAtR,EAAAlE,OACzB7D,EAAK5B,KACTA,KAAGma,SAAAna,KAAA+Z,aAAAtY,EAAAyZ,KAAAlb,KAAAma,SAAAna,KAAA+Z,aAAApQ,GAEV3J,KAAAma,SAAAna,KAAA+Z,aAAAtY,EAAAyZ,KAAAlb,KAAAma,SAAAna,KAAA+Z,aAAA,YAEO/Z,KAAAma,SAAAna,KAAA+Z,aAAAtY,EAAAyZ,KAAAlb,KAAema,SAAvBna,KAAwB+Z,aAAG,aACvB/Z,KAAKyZ,gBAAepP,eAAGrK,KAAA0Z,iBAAA1Z,KAAA+Z,aAAA1B,KAAArY,KAAAma,SAAAna,KAAA+Z,aAAA,SAAA/T,GAEnBpE,EAAIkU,YAAYM,OACjB,SAAO1P,GACN9E,EAAKkU,YAAaK,QACrBvU,EAAAwQ,UAAA/E,UAAA3G,EAAA,KAAA,KAAA,KAAA,SAIGkT,EAAAvY,UAAA8Z,OAAA,WACJ,IAAIvZ,EAAC5B,KACLA,KAAK6a,wBAAoB7N,KAAO,CAAI5C,QAAQpK,KAAM0Z,iBAAM1Z,KAAA+Z,cAAA,SAAApQ,GAC3D/H,EAAAkZ,qBAAAnR,QAGQtI,UAAAyZ,qBAAsC,SAAmBnR,OAC1D/H,EAAK5B,KACTA,KAAE8V,YAAAC,MAAA,eAGE,IAFP,IAAAoE,EAAA,GAAAC,EAAA3Y,EAAA2Y,KAAApa,KAAAma,SAAAna,KAAA+Z,cAAAY,EAAAlZ,EAAAkZ,OAAA3a,KAAAma,SAAAna,KAAA+Z,cAEOvZ,EAAA,EAAAA,EAAAma,EAAA1Z,OAAAT,IASP,YATD4Z,EAAA5Z,IASC,aAAA4Z,EAAA5Z,KATqD2Z,EAAAC,EAAA5Z,IAAAma,EAAcna,MAIpDmJ,EAAC0O,MAAA1O,EAAA3D,KACTC,QACAC,IAAAiU,QACIV,gBAAKpP,eAAwBrK,KAAA0Z,iBAAA1Z,KAAA+Z,aAAA1B,KAAA8B,EAAA,WAC9BvY,EAAAwZ,gBAAAzR,IACV,SAAAjD,GAEO9E,EAAAkU,YAAAK,QACAvU,EAACwQ,UAAe/E,UAAG3G,EAAA,KAAA,KAAA,KAAA,SAG3BkT,EAACvY,UAAA+Z,gBAAA,SAAAzR,GAEO3J,KAAA8V,YAAAM,MACJzM,EAAI0O,KAAC1O,EAAA0O,KAAeC,QAAQ,IAAE,UACzBtY,KAAAma,SAAUna,KAAS+Z,eAC3B/Z,KAAAma,SAAAna,KAAA+Z,aAAA,IAGJ/Z,KAAAma,SAAAna,KAAA+Z,aAAApQ,EAAA0O,MAAA1O,EAAA3D,MAGG4T,EAAOvY,UAAAga,iBAAA,SAAA3U,QACFoP,YAAOK,aACP/D,UAAU/E,UAAA3G,EAAoB,KAAA,KAAA,KAAA,SAEdrF,UAAAia,WAA6B,WAC1C,IAAA1Z,EAAY5B,KACdA,KAAAub,4BAAAvO,KAAA,GAAA,SAAA+L,GAELnX,EAAA4Z,yBAAAzC,MC5UDa,EAAAvY,UACYma,yBAGR,SACAzC,EACA/S,GAGA,IAAApE,EAAW5B,UARI,IAAPgG,IAA0BA,EAAA,IAM1BhG,KAAA8V,YAAAC,MAAA,kBAIR/V,KAAIyZ,gBAAWpP,eAAc0O,EAAc/S,EAAU,WACjDpE,EAAC6Z,oBAAY1C,IAEpB,SAAArS,GAEO9E,EAAAyZ,iBAAA3U,QAGWrF,UAAAoa,oBAAA,SAAAzV,QACX8P,YAAOM,WACTsD,iBAAA1K,KAAA,CAAAqJ,KAAArS,EAAA3B,KAAArE,KAAA8Z,eAAA9T,KACFhG,KAAKia,WAAAja,KAAc0Z,iBAAmBzY,OAAA,MAEnBI,UAAWqa,qBAAoB,SAAAhV,GAClD1G,KAAK8V,YAAAM,IAAc,SACtBpW,KAAAoS,UAAA/E,UAAA3G,EAAA,KAAA,KAAA,KAAA,OAGGkT,YD6CSA,EAAApV,EAAAwN,EAAAI,EAAAiE,EAAAvE,EAAAyJ,EAAA5W,EAAA8U,EAAAtT,EAAA0U,EAAA1I,OAACvQ,EAAM5B,kBACCwE,OACRwN,UAAAA,EACLhS,KACAoS,UAACA,OACGmJ,4BAAoBA,EACxBvb,KAAG2E,OAAAA,EAeV3E,KAAAyZ,gBAAAA,EAEMzZ,KAAAmG,SAAAA,EAAPnG,KAAA6a,wBAgBCA,EAfG7a,KAAKmS,sBAAiBA,EAEtBnS,KAAE8C,OAAU,UACRqC,MAAKqU,EAAiBlG,SAC1BtT,KAAE0G,MAAA,KACF1G,KAAK8V,YAAKO,EAAsB1O,OAAA,iBAC5B7E,OAAS9C,KAAagS,UAAUlP,SAAKA,YACrCqH,gCACc,yBACM,WACpBvI,EAACqY,WAAArY,EAAAmY,cC7Gb7S,QAkCAzH,OAAA,mBACI,CAAA,8BACc,4BAEd2G,UAAW,mBAAA,CAEXyM,SAAc8I,cACH,8BACHtY,WAAKuW,YAGL,CAAA,SAAAlZ,EAAcjB,EAAOD,KACR4B,QAAA,CAAA,YAAA,yBAExBwa,EAAAxa,QAAA,CAAA,UAAA,SAAA,SAAA,aAAA,WAAA,YAAA,kDC7CDpB,KAAA0D,cAAAC,OAAAC,MAAA,CAcAC,MAAA,EAAAC,MAAA,EAICC,MAAA,cAJD/D,KAAA0D,cAAAC,OAAAK,YACWhE,KAAA0D,cAAAI,KAAQG,WACRjE,KAAA0D,cAAKQ,WAAmBC,KAAA,aACxBnE,KAAA0D,cAAIU,QAAiBC,QAYhCuX,EAAAva,UAAAkD,QAAA,WAAAvE,KAAAwE,QAAAC,QAAAC,QAGAkX,GDiBC,SAAAA,EAAApX,EAAArC,EAAAwC,EAAAC,EAAAC,EAAAC,EAAApB,QAGQc,QAAOA,OACPd,cAAOA,EAEXoB,EAAAC,IAAA,aAAAD,EAAAE,IAAA,6BCrBL,SAAA6W,EAAA/W,EAAAI,KACWC,MAAA,aAAoB,CAEpBC,IAAA,cAMA/B,WAAKuY,EAiBJvW,MAAA,EAiBJC,aAAa,QACb/B,YAAa,2CAKb9D,OAAK,oBAAqB,CAAA,WAC1B2M,OAAKyP,WAEL,CAAA,SAAKnb,EAAcjB,EAAAD,sCAENA,EAAM,aAAI,CAAAiG,OAAA,UAEN/E,EAAQ,wCAQpB4S,SAAc,aACdE,MAAc,UACtBD,KAAA,WAEOuI,EAAA,QAQY1a,QAAU,CAAA,UAAiB,WAAa,SAAC,YAAA,oBAAA,iBAAA,cAAA,iBAAA,WAAA,gBAAA,eA6BtDC,UAAA0a,eAAA,WACN,IAEOC,EAAAjL,OAAAkL,MAAAC,QAAA,QAARC,IAAA,SAAA,IACInc,KAAIoc,QAAQ,IAAAC,MACZrc,KAAAoc,QAAapN,KAAA,IAASsN,EAAAC,sBAAAxL,OAAAkL,IAAAD,GAAA/K,SAAA+K,EAAAQ,OAAAC,WAAA,MAAAT,EAAAG,IAAA,QAAA,IAAAK,OAAAC,iBAClB,IAAKjc,EAAA,EAAAA,GALZ,EAK6BA,IAAM,KACxB4H,EAAO3G,EAAGib,UAAOV,GAEjB5F,EAAM3U,EAAAib,UAAAV,EAAAG,IAAA,QAAA,KACVnc,KAAKoc,QAAApN,KAAA,IAAAsN,EAAiBC,sBAAKxL,OAAAkL,IAAA7T,GAAA6I,SAAA7I,EAAAoU,OAAAC,WAAA,MAAArG,EAAAoG,OAAAC,iBAGtBpb,UAAAsb,YAAiB,uCAEZ5L,OAAAkL,WACVW,WAAK5c,KAAA6c,QAAAxW,OAAiB,OAAArG,KAAM6c,QAAAxW,OAAA,SAAAiW,EAAAQ,iBAAAC,OAAA/c,KAAA6c,QAAAxW,OAAA,MAAA5E,EAAAib,UAAAM,EAAA/L,yBACdjR,KAAA6c,QAAYxW,OAAe,OAACrG,KAAS6c,QAAQxW,OAAe,SAAMiW,EAAGQ,iBAAAG,MAAAjd,KAAA6c,QAAAxW,OAAA,MAAA5E,EAAAib,UAAAM,EAAA/L,2BACzEjR,KAAA6c,QAAAxW,OAAA,OAAArG,KAAA6c,QAAAxW,OAAA,SAAAiW,EAAAQ,iBAAAI,QAAAld,KAAA6c,QAAAxW,OAAA,MAAA5E,EAAAib,UAAAM,EAAA/L,UACd+L,EAACb,IAAA,SAAA,GAEDnc,KAAAmd,WAAend,KAAA6c,QAAAxW,OAAA,OAAArG,KAAA6c,QAAAxW,OAAA,SAAAiW,EAAAQ,iBAAAM,OAAApd,KAAA6c,QAAAxW,OAAA,MAAA5E,EAAAib,UAAAM,EAAA/L,WAGXoM,EAAAhc,UAAAic,YAAY,WAChB,IAAI1b,EAAA5B,KACJA,KAAA8V,YAAaC,MAAS,mBAClBwH,MAAKtS,uBAAA,KAAA,SAAiBlF,KAClBA,SAAYA,EAEM,EAAlBnE,EAAKmE,SAAU9E,OACfW,EAAM4b,iBAGN5b,EAAKkU,YAAYM,MACjBxU,EAAMuD,MAAAsY,EAAAjK,iBAEN9M,KACA0G,WAAK1G,KACLoP,YAAMM,WAGD/U,UAAaqc,WAAU,6BAExBhU,aACH4S,EAAWQ,iBAAAC,OACZY,EAAM5M,OAAA/Q,KAAA4c,YAAAT,IAAA,OAAA,GAAAA,IAAA,EAAA,SAAAA,IAAA,WAAA,GAAAlL,SACb,MAEG,KAACqL,EAAkBQ,iBAAoBG,MAEpCU,EAAU5M,OAAA/Q,KAAA4d,WAAAzB,IAAA,QAAA,GAAAA,IAAA,WAAA,GAAAlL,SACpB,MAEO,KAAAqL,EAAAQ,iBAAaI,QAArBS,EAyCC5M,OAAA/Q,KAAA6d,aAAA1B,IAAA,QAAA,GAAAA,IAAA,WAAA,GAAAlL,SAxCQ,MACD,KAAAqL,EAAuBQ,iBAAeM,OACtCO,EAAoB5M,OAAC/Q,KAAUmd,YAAGhB,IAAA,QAAA,IAAAA,IAAA,WAAA,GAAAlL,qBAQjB5P,UAAYyc,aAAM,6BAEvBpU,eACYoT,iBAAcC,SACrBhM,OAAAkL,IAAWjc,KAAK4c,YAAMV,QAAA,OAAAC,IAAA,EAAA,SAAAlL,cAE3B2L,WAAcmB,aACjBzB,EAAaQ,iBAAAG,QACLlM,OAAAkL,IAAWjc,KAAO4d,WAAA1B,QAAA,WAAAjL,cACvB2M,UAAKG,EACT,MACR,KAACzB,EAAAQ,iBAAAI,QAAKa,EAAEhN,OAAAkL,IAAAjc,KAAA6d,aAAA3B,QAAA,QAAAjL,SACJjR,KAAI6d,YAAOE,eAIYjB,iBAAAM,SACVrM,OAAQkL,IAAKjc,KAAAmd,YAAAjB,QAAoB,QAAYjL,cAChDkM,WAAYY,OAEdC,WAAKvc,EAAUmI,OAAMnI,EAAAoN,KAAM7O,KAAAoc,QAAA,SAAA6B,GAE3B,OAAIA,EAAKxY,MAAKgX,YAAcsB,EAAWtB,4CAIvC3Z,OAAK,QAAYib,QAG9B1c,UAAAmc,cAAA,WACN,IAAA5b,EAAA5B,KAEMA,KAAAke,WAAA,IAAA7B,MACH,IAAI8B,EAAUne,KAAK8d,eACfM,EAACpe,KAAc0d,aACtBjc,EAAA6O,KAAAtQ,KAAA+F,SAAA,SAAAqF,EAAAyO,GAMOjY,EAAA8H,SAAA4S,EAAAQ,iBAARuB,MACSzc,EAAO2b,MAAgBjB,EAAWgC,4BAAA1c,EAAA8H,SAAA0B,EAAA+S,EAAAC,EAAA,SAAAF,GAChCjY,QAAYC,IAAA,KAACgY,GACRtc,EAAIkU,YAAMM,MACV,IAAImI,EAAA,IAAAjC,EAAAkC,kBAA4BpT,EAAK8S,GACtCK,EAAKE,MAAO7c,EAAA8c,qBAAAR,EAAA9S,EAAA+S,EAAAC,EAAAxc,EAAA8H,QACrBzD,QAAAC,IAAA,OAAAqY,GACK3c,EAAMsc,WAAAlP,KAAAuP,GAChB1E,IAAAjY,EAAAmE,SAAA9E,OAAA,GAEOW,EAAA+c,mBAAR,SAWCjY,GAVc9E,EAAMwL,WAAc1G,GACxB9E,EAAUkU,YAAGM,QAIlBxU,EAAA2b,MAAA7R,cAAAN,EAAA,SAAA8S,GACUtc,EAAKkU,YAAQM,MAGlB,IAAOmI,EAAA,IAAAjC,EAAAkC,kBAAApT,EAAA8S,GACjBK,EAAAE,MAAA7c,EAAAgd,oBAAAV,EAAA9S,GAEOnF,QAAAC,IAAA,OAAAqY,GACO3c,EAAOsc,WAAWlP,KAACuP,GAClB1E,IAAcjY,EAACmE,SAAQ9E,OAAA,GAQ9BW,EAAgB+c,mBACxB,SAAAjY,GAEM9E,EAAAwL,WAAA1G,GACE9E,EAAWkU,YAAOM,aAe1B/U,UAAAsL,MAAA,WATG3M,KAAK8C,OAAA,KACL9C,KAAE6e,iBAEkBxd,UAASud,oBAAsB,SAAWV,EAAY9S,SAClE0T,EAAK,GAOjB,OANIrd,EAAE6O,KAAC4N,EAAA,SAAAvP,GAEC1I,QAAMC,IAAGyI,GACT8P,EAAC,IAAWnC,EAAOyC,cAAApQ,EAAAvD,QAAAuD,EAAAgM,OAAA,GAAAlV,OAC1BqZ,EAAA9P,KAAAyP,KAEDK,KAC8Bzd,UAAOqd,qBAAA,SAAAR,EAAA9S,EAAA4T,EAAAC,EAAAC,GACjC,IAAuCT,EAAO9D,EAA1C/Y,EAAK5B,KAAqC8e,EAAA,UAE9Crd,EAAA6O,KAAK4N,EAAQ,SAAAvP,GACTgM,EAAC/Y,EAAWud,eAAiBC,eAAazQ,EAAAgM,OAAAqE,EAAAC,EAAAC,GAE1CT,EAAC,IAAWnC,EAAoB+C,eAAC1Q,EAAAvD,QAAAuP,GACjCmE,EAAC9P,KAAAyP,KAGLxY,QAAKC,IAAA,IAAUyU,GACXmE,GAERzB,EAAChc,UAAAsd,gBAAA,WAEM3e,KAAAsf,OAAAtf,KAAAke,WACHjY,QAAQC,IAAI,SAAUlG,KAAAsf,aAClBC,sBAEUle,UAAAwd,YAAA,gBACVW,WAAK1c,OAAA,SAAA9C,KAAA8C,yBACIiT,MAAS,yCAGT1U,UAAcke,iBAAgB,iBACnCvf,UACJyf,iBAAK,IAAApD,kBACGiD,OAAC,SAAaI,EAAWrH,WAC7BnS,IAAM,mBAAAwZ,EAAArH,KACbzW,EAAAkB,SAAA,EAAAuV,EAAAsH,cAAAzF,QAAAtY,EAAAkB,OAAA6c,iBAEI/d,EAAA6d,iBAAoBzQ,KAAA,IAAAsN,EAAAsD,gBAAAvH,EAAAqH,MAGtB1f,KAAAmF,MAAP,IAAOnF,KAAAyf,iBAAAxe,OAAPwc,EAAAjK,MAAAiK,EAAAlK,KACIvT,KAAA8V,YAAaM,SAEA/U,UAAmBwe,kBAAoB,SAAMnW,SAClD1J,KACJ0J,SACIA,OAAKA,GACC,QAAN+V,iBAAMxe,oBAEDwc,EAAqBnK,yBACpBxQ,OAAA,SAAA9C,KAAA0J,aACVoM,YAAKC,MAAA,sDAEK,EACd/V,KAAC8f,UAAA,WAEGle,EAACme,cAAoB,GAC5B,SAGwB1e,UAAM2e,aAAA,WAE3B,OAAQhgB,KAAK0J,QACT,KAAK4S,EAAAQ,iBAAiBC,OAClB/c,KAAK4c,WAAa7L,OAAOkL,IAACjc,KAAQ4c,YAACT,IAAA,QAAA,GAAAlL,SACnC,MACJ,KAAKqL,EAAAQ,iBAAiBG,MAClBjd,KAAK4d,UAAY7M,OAAOkL,IAACjc,KAAQ4d,WAACzB,IAAA,SAAA,GAAAlL,SAClC,MACJ,KAAKqL,EAAAQ,iBAAiBI,QAClBld,KAAK6d,YAAc9M,OAAOkL,IAACjc,KAAQ6d,aAAC1B,IAAA,SAAA,GAAAlL,SACpC,MACJ,KAAKqL,EAAAQ,iBAAiBM,OAClBpd,KAAAmd,WAAkBpM,OAACkL,IAAAjc,KAAAmd,YAAAhB,IAAA,SAAA,IAAAlL,SAG3BjR,KAAC6f,qBAGLxC,EAAChc,UAAA4e,SAAA,WAEM,OAAAjgB,KAAA0J,QACC,KAAK4S,EAAcQ,iBAAAC,OAAK/c,KAAC4c,WAAiB7L,OAAGkL,IAAAjc,KAAA4c,YAAAT,IAAA,OAAA,GAAAlL,SACpD,MAEM,KAAAqL,EAAAQ,iBAAYG,MACVjd,KAAA4d,UAAa7M,OAAWkL,IAAAjc,KAAA4d,WAAAzB,IAAA,QAAA,GAAAlL,SAExB,MACR,KAAAqL,EAAAQ,iBAAAI,QAGLld,KAAA6d,YAAA9M,OAACkL,IAAAjc,KAAA6d,aAAA1B,IAAA,QAAA,GAAAlL,SAAA,MAEA,KAAAqL,EAAAQ,iBAAAM,OACUpd,KAAAmd,WAAApM,OAAAkL,IAAAjc,KAAAmd,YAAAhB,IAAA,QAAA,IAAAlL,SAGCjR,KAAA6f,uBAEYxe,UAAA6e,MAAyB,WACvC,IAAAlD,EAAAjM,OAAAkL,MAEL,OAAAjc,KAAA0J,uCChZO1J,KAAA4c,WAAAI,EAAA/L,eAKZ,KAAAqL,EAAAQ,iBAAAG,MAAAjd,KAAA4d,UAAAZ,EAAA/L,SAOC,MAAD,KAAAqL,EAACQ,iBAAAI,QAPDld,KAAA6d,YAAAb,EAAA/L,SACW,MACA,KAAAqL,EAA4BQ,iBAAAM,OAC5BJ,EAAKR,KAAW,MAChBxc,KAAAmd,WAAyBH,EAAC/L,SAJxBjR,KAAA6f,qBAgBTxC,EAAAhc,UAAoC8e,WAAgC,WAC3DngB,KAAA+f,cACD/f,KAAC6f,qBAETxC,EAAChc,UAAA+e,aAAA,SAAAjD,GAEDnd,KAAAmd,WAAWA,OAAX0C,qBAECxC,YDqFOA,EAAsB7Y,EAAApC,EAAAuC,EAAAqN,EAAsBqO,EAAkBhK,EAAgBiK,EAAeC,EAAgBpa,EAAQqa,EAAapO,GACtI,IAACxQ,EAAA5B,KACJA,KAAAsW,QAAAgG,EAAAQ,iBAAAlJ,IAEO5T,KAAAmF,MAAAsY,EAAAnK,SACJtT,KAAKygB,MAAAnE,EAAiBQ,iBAAAuB,MACtBre,KAAI+f,cAAgB,EAEpB/f,KAAKmG,SAAUA,EACfnG,KAAKud,MAAA8C,EACLrgB,KAAK0gB,aAAeJ,EACpBtgB,KAAA2gB,gBAAuBJ,EACvBvgB,KAAK6c,QAAUlY,EAClB3E,KAAAwf,WAAAxN,EAEOhS,KAAA8f,UAAA1d,EAARpC,KAAAmf,eAcCqB,EAbGxgB,KAAKoN,WAAYgF,EACjBpS,KAAK8V,YAAMO,EAAuB1O,OAAM,mBACpCiZ,iBAAgB,SAASC,GAGvB,OAFEjf,EAAK8H,QAAS4S,EAAaQ,iBAAAC,SAC3B8D,GAAK,GAADA,GAAC,GAAaA,GAAG,GAAA,GAAA,GACjBvE,EAAAwE,2BAAAlf,EAAA8H,QAAAmX,gBAEClc,EAAK0B,OAAG,QAAAiW,EAA4BQ,iBAAAC,YAC5Cja,OAAA6B,EAAA0B,OAAA,OACLrG,KAAG2c,mBACCW,iGC/GPzK,SAAAiJ,EAMDvY,YAAA,6CAAA8Z,4BAIiB,KAAa0D,GAAA,CAAA,SAAArgB,EAAAjB,EAAAD,sCAE7BA,EAAA,aAAA,CAAAiG,OAAA,yBAGG2X,OAAY,WACfF,QAAA,YAEDD,MAAe,UACNF,OAAO,WACfsB,MAAA,8GAOgBG,EAAWnd,UAAA,aAAA,KACxB,kBAAiBrB,KAAKghB,iDAG1BpK,YAAA,gBAAA,WAECpR,eAAAgZ,EAAAnd,UAAA,QAAA,KAED,WACI,OAAKrB,KAAMihB,uCAEnBrK,YAAA,EAACC,cAAA,IAEDxP,OAAA7B,eAAAgZ,EAAAnd,UAAA,MAAA,CAMI2D,IAAA,WAAA,OAAAhF,KAAAkhB,MAEIvK,IAAK,SAASlR,GACZzF,KAAKkhB,KAAAzb,GAEPmR,YAAE,EACFC,cAAK,WAEHrR,eAAUgZ,EAAwBnd,UAAC,UAAE,KACnC,WAEA,OAAKrB,KAAAmhB,UAEZxK,IAAA,SAAAvL,GAEDpL,KAAAmhB,SAAW/V,EAAXpL,KAAAohB,SACIphB,KAAOohB,OAAKzX,IAAOyB,gBAGvB,gBACS,8DAHR,OAAApL,KAAAohB,YAMD,SAAA3C,GACIze,KAAAohB,OAAY3C,eAGhB,gBACS,OApDT,SAAAD,EAAWpT,EAAA8S,EAAAzY,QAAX0b,SAAA/V,OACI4V,YAAY9C,EAChBle,KAACihB,OAAAxb,QAAA4b,IA+CA7C,kBAAAA,MAMDoB,yBAaSA,EAAoBve,UAAgB,QAAC,CAC9C2D,IAAC,+BAJA2R,IAAA,SAAA+I,GAKL1f,KAAAshB,OAAC5B,GApDY9I,YAAA,EAsDbC,cAAA,WAMQrR,eAAWoa,EAAAve,UAAA,eAAA,CACX2D,IAAK,WACD,OAAMhF,KAAGuhB,eAErB5K,IAAA,SAAC6K,GAAAxhB,KAAAuhB,cAAAC,GAED5K,YAAA,EAKIC,cAAA,WAEIrR,eAAcoa,EAAOve,UAAA,SAAA,CACrB2D,IAAK,WACR,OAAAhF,KAAAyhB,SACJ9K,IAAA,SAAA+K,GAVY1hB,KAAAyhB,QAAAC,GAiBT9K,YAAA,EACIC,cAAc,WAEdrR,eAAkBoa,EAAcve,UAAA,mBAAA,CACnC2D,IAAA,WACL,OAAAhF,KAAC2hB,mBAVYhL,IAAA,SAAAiL,GAYb5hB,KAAA2hB,kBAAAC,GAMChL,YAAA,EAADC,cAAA,IALW+I,YAtDPA,EAAAF,EAAA8B,OACI5f,EAAO5B,KACXiG,QAACC,IAAA,IAAAwZ,EAAA8B,QAEDF,OAAAE,EAA+B,eAC3BA,EAAsB,MAAA,SAAAK,EAAAhI,GACzB2H,EAAA,MAAA3H,GAAAlQ,IAAA6X,EAAA,WAAA3H,GAAAxB,4BAJArY,KAAAyhB,QAAA,IAAApF,MAMD5a,EAAA6O,KAAAtQ,KAAAuhB,cAAW,MAAA,SAAAM,KAAXJ,QAAAzS,KAAA6S,GACIjgB,EAAM+f,mBAAwB,IAAlB/f,EAAkB+f,yBAAAN,IAAAQ,EAAAlH,QAAA,IAAAkH,EAAAlH,OAAA1Z,UA+C3BzB,EAAAogB,gBAAAA,EACA,IAAAkC,EACA,SAAAjB,EAAApb,EAAKsc,GALH/hB,KAAA6gB,EAAAA,EAQb7gB,KAAAyF,MAAAA,EAAAzF,KAAA+hB,MAAAA,QAAAV,GACW7hB,EAAAsiB,WAAAA,EAEA,SADAzC,EACK1V,EAAWgR,EAAAoH,GAChB/hB,KAAA2J,IAAAA,EAJE3J,KAAA2a,OAAAA,EAOb3a,KAAA+hB,MAAAA,QAAAV,IAEQhC,eAAiBA,EAGP,SAFdN,EAEcpV,EAAAlE,EAAOsc,GACjB/hB,KAAI2J,IAAMA,EAEV3J,KAAAyF,MAAaA,EAChBzF,KAAA+hB,MAAAA,QAAAV,IAMatC,cAAAA,qBAfLT,EAAAlB,OAAA,iBAoBbkB,EAAApB,QAAA,oBAIID,MAAmB,kBACEF,OAAA,mBACEsB,MAAA,kBACtBC,4BAAAA,MACL0D,EARA,eAyBmB5E,OAAA,mBAEdF,QAAA,gBAEMD,MAAA,eACmBF,OAAA,gBAEtBiF,uBAAmBA,WAKI5E,OAAM,SAAAyD,iBACnBA,GAAAoB,QAAA,MAEP/E,QAAA,SAAA2D,GAGN,MADgB,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YAChBA,MAG6B5D,MAAS,SAAU4D,GAE7C,OAAOqB,OAAArB,GAAUoB,QAAE,MAEIlF,OAAE,SAAA8D,mBACfA,KACE,GAAIA,EAAK,MAASA,EAAI,GAAG,mBAlBjCC,kCAqBqBA,aACGrb,EAAQ4S,0BAEvB5S,0BAGF8W,WAMVlb,UAAA8gB,mBAAA,SAAAjE,EAAAkE,GAAC,IAAI5R,EAAE,EAWL,cAVC0N,EAAY,SAAAvP,GACfA,EAAAvD,QAAAkP,MAAA,KAAA+H,OACJD,GAEM3gB,EAAA6O,KAAA3B,EAAAgM,OAAA,SAAa/Z,GACN4P,GAAS5P,EAAI6E,UAKpB+K,KAEcnP,UAAAihB,4BAAA,SAAApE,EAAAkE,GAEjB,IAAIG,EAAK,CAAGC,IAAM,EAACC,KAAM,EAAIC,MACrB,EAAGC,KAAM,UAKjBlhB,EAAA6O,KAAO4N,EAAG,SAAAvP,GAEIA,EAAGvD,QAASkP,MAAA,KAAW+H,OACvBD,gCAEDG,EAAA/F,KAAe5b,EAAA4b,MAIR+F,EAAI/F,MAAU5b,EAAA4b,MAAI+F,EAAQK,MAAUhiB,EAAAgiB,OAItCL,EAAQ/F,MAAC5b,EAAA4b,MAAA+F,EAAAK,OAAAhiB,EAAAgiB,OAAAL,EAAAM,IAAAjiB,EAAAiiB,KAEfN,EAAA/F,MAAA5b,EAAA4b,MAAA+F,EAAAK,OAAAhiB,EAAAgiB,OAAAL,EAAAM,KAAAjiB,EAAAiiB,KAAAN,EAAAO,KAAAliB,EAAAkiB,QATGP,EAAG3hB,cAajBmQ,OAAAkL,IAAA,CAAAsG,EAAA/F,KAAA+F,EAAAK,MAAA,EAAAL,EAAAM,IAAAN,EAAAO,OAAA7R,SAKE,QAGc5P,UAAA0hB,cAAA,SAAAlC,EAAA3B,GAEjB,QAAQmC,IAARR,GAAmB3B,EAQnB,OAAO2B,EAACmB,EAAW9C,SAEP7d,UAAW2hB,qBAAmB,SAAA9E,EAAAc,EAAAC,SAC/BlO,OAAKkL,IAAM+C,KACVjO,OAAIkS,GAAMH,OAAAI,EAAAnS,OAAAkS,GAAAV,OAAAY,EAAApS,OAAAkS,GAAAL,QAAAQ,EAAArS,OAAAkS,GAAAzG,OAAA7B,EAAA,IAAA0B,sBAKVgH,EAASC,GAAU,SACfvS,OAAOkL,IAAG,CAAAmH,EAAWD,EAAQD,EAAM,IAAE/G,IAAMkH,EAAQC,EAAA,WACnD7hB,EAAAoN,KAASqP,EAAU,SAAYqF,aACxBA,EAAKT,MAAUU,EAAQjB,QAAQgB,EAAMV,KAASW,EAAQZ,QAAQ,GAAOW,EAAIX,OAAUY,EAAShH,QAAQ+G,EAAM/G,SAEjHiH,EAAQA,EAAYhe,MAAU,EAE9B,aACA,IAAOqc,EAAS4B,EAAUX,cAAMhS,OAAakL,IAAC,CAAAmH,EAAWD,EAAQD,EAAMS,IAAQ1S,SAAQ,UAAUxL,WAEjG,IAAOqc,EAASuB,EAAWC,EAAA,GAAa7d,YAb5CuZ,EAAa4E,2BAEjB,EAAIN,KAASA,oBAgBTjiB,UAAW+d,eAAkB,SAAAlB,EAAAc,EAAAC,EAAAC,WACjCnO,OAAQkL,IAAK+C,KACbjO,OAAIkL,IAAYgD,eAEZ,MAAIf,gBACA+E,GAAOH,OAAOI,EAAMnS,OAAOkS,GAAMV,OAAQY,EAAWpS,OAAIkS,GAASL,QAAMQ,EAAIrS,OAAAkS,GAAAzG,OAAA7B,EAAA,IAAA0B,uBAEnEU,OAIpB,GAFK,MADG8G,EAAMC,KAAKb,EAAK,SAAW,KAE/Bc,EAAM,IACLA,GAAA,EACD,MACA,IAAIV,EAAQrE,EAAA4E,cACRN,OAAC,EACDU,EAAI,cACAX,EAAiBC,GAAI,GACzB,IAAGE,EAAAzS,OAAAkL,IAAA,CAAAmH,EAAAD,EAAAD,EAAA,IAAA/G,IAAAkH,EAAAC,EAAA,SACCG,EAAQhiB,EAAAoN,KAASqP,EAAa,SAAUqF,GAC5C,OAAWI,GAAKJ,EAAUT,MAAMU,EAAAjB,QAAoBgB,EAAMV,KAAOW,EAAQZ,QAAS,GAAEW,EAASX,OAAUY,EAAAhH,QAAA+G,EAAA/G,OAErG/W,EAAAge,EAAAA,EAAAhe,MAAA,EACY,IAAjB4d,EACa1I,EAAA3L,KAAA,IAAA8S,EAAAmC,EAAAlB,cAAAhS,OAAAkL,IAAA,CAAAmH,EAAAD,EAAAD,EAAAS,IAAA1S,SAAAiO,GAAAzZ,IAGPkV,EAAK3L,KAAA,IAAA8S,EAAAuB,EAAAC,EAAA,GAAA7d,KAGRwe,EAAIjkB,WACA,EAAAsjB,EAAOS,EAAKT,IAChBU,eAGHlH,EAAAG,MAIF,IAAAiH,EACV,IAJWH,EAAMF,EAAAC,KAAAb,EAAA,QAAA,EACbU,EAAA,KAGJO,EAAAhB,EAAAgB,EAAAhB,EAAAa,EAAAG,IAAA,CAEL,IAKIze,GALJge,EAAChiB,EAAAoN,KAAAqP,EAAA,SAAAqF,GAAA,OAAAW,GAAAX,EAAAV,KAAAM,EAAA,GAAAI,EAAAX,OAAAQ,GAAAG,EAAA/G,QAKGiH,EAAAhe,MAAA,EACCkV,EAAA3L,KAAA,IAAA8S,EAAA9hB,KAAA+iB,cAAAhS,OAAAkL,IAAA,CAAAmH,EAAAD,EAAAe,IAAAjT,SAAAiO,GAAAzZ,IAGG,MAEI,KAAKqX,EAAiBI,QAI7B,IADUgG,EAFCS,EAAC,KAGZR,EAAA,EAAAA,EAAA,GAAAA,IAIO1d,GAHZge,EAAChiB,EAAAoN,KAAAqP,EAAA,SAAAqF,GAAA,OAAAJ,EAAA,GAAAI,EAAAX,OAAAQ,GAAAG,EAAA/G,QAGsCiH,EAAAhe,MAAA,EACzBkV,EAAA3L,KAAiB,IAAA8S,EAAA9hB,KAAoB+iB,cAAAhS,OAAAkL,IAAA,CAAAmH,EAAAD,IAAAlS,SAAAiO,GAAAzZ,ICpZnD,MACA,KAAAqX,EAAAM,OACA,IAAA+G,EAKA,IAJAJ,EAAAF,EAAAC,KAAAb,EAAA,SAAA,EAGAE,EADAD,EADAS,EAAA,KAGAQ,EAAAf,EAAAe,EAAAf,EAAAW,EAAA,EAAAI,IAAA,CACA,IAAAV,EAGAhe,GAHAge,EAAAhiB,EAAAoN,KAAAqP,EAAA,SAAAqF,GACA,OAAAY,GAAAZ,EAAA/G,QAEAiH,EAAAhe,MAAA,EACAkV,EAAA3L,KAAA,IAAA8S,EAAA9hB,KAAA+iB,cAAAhS,OAAAkL,IAAA,CAAAkI,IAAAlT,SAAAiO,GAAAzZ,KAIA,OAAAkV,GAEAyJ,YD+OWA,KC7OX,IAAAC,GAGAA,EAAAhjB,UAAA2F,KAAA,WAIA,OAFA,MAAAhH,KAAAiH,WACAjH,KAAAiH,SAAA,IAAAmd,GACApkB,KAAAiH,UAEAod,GARA,SAAAA,KAUAnd,QACAzH,OAAA,uBAAA,IACA0H,SAAA,gBAAAkd,IACA,IAAAC,GAAA,CAAA,SAAA5jB,EAAAjB,EAAAD,IACA,SAAAC,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,6BACA,gDARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,8BACA,8sBARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,yBACA,4CARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,0BACA,+vMARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,yBACA,4CARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,0BACA,yuHARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,2BACA,8CARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,4BACA,orLARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,qCACA,urBARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,yCACA,wgBARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,6BACA,gDARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,uBACA,MAAAW,GACAX,EAAAyH,QAAAzH,OAAA,sBAAA,IAEAA,EAAA8kB,IAAA,CAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,8BACA,66PARA,GAYA,SAAAhlB,GACA,IACAA,EAAAyH,QAAAzH,OAAA,0MAFA,m+JpCnLA","file":"pip-admin-system.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","class SearchRowController {\n    private _element;\n    private _scope: angular.IScope;\n    private _timeout: ng.ITimeoutService;\n    private pipOnSearch: Function;\n    private ngDisable: Function;\n    public placeholder: string;\n\n    public localSearch: string;\n    \n    constructor(\n        $element: any,\n        $attrs: angular.IAttributes,\n        $scope: angular.IScope,\n        $timeout: ng.ITimeoutService\n    ) {\n        \"ngInject\";\n\n        $element.addClass('pip-search-row');\n        $element.addClass('flex');\n\n        this._element = $element;\n        this._scope = $scope;\n        this._timeout = $timeout;\n\n        this.pipOnSearch = $scope['onSearch'] ?  $scope['onSearch'] : null;\n\n        this.placeholder = $scope['placeholder'] ?  $scope['placeholder'] : 'SEARCH_ROW_PLACEHOLDER';\n\n        $scope.$watch('search', (search: string) => {\n            if (search != this.localSearch) {\n                this.localSearch = search;\n            }\n        });\n    }\n\n    public isDisable(): boolean {\n        this.ngDisable = this._scope['ngDisabled'] ? this._scope['ngDisabled'] : null;\n\n        return _.isFunction(this.ngDisable) && this.ngDisable();\n    }\n\n    public onSearch(): void {\n        if (this.isDisable()) {\n            return;\n        }\n        this._scope['search'] = this.localSearch;        \n\n        this._timeout(() => {\n            if (_.isFunction(this.pipOnSearch)) {\n                this.pipOnSearch();\n            }            \n        }, 200);\n    }\n    \n    public onClear() {\n        if (this.isDisable()) {\n            return;\n        }\n\n        this.localSearch = null;\n        this.onSearch();        \n    }\n\n    public onKeyPress = function (event: JQueryKeyEventObject): void {\n        if (event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSearch()\n        }\n    } \n\n}\n\n(() => {\n    function SearchRowDirective() {\n        return {\n            restrict: 'E',\n            controller: SearchRowController,\n            controllerAs: 'searchRow',\n            scope: {\n                search: '=pipSearch',\n                onSearch: '&pipOnSearch',\n                placeholder: '=pipPlaceholder',\n                ngDisabled: '&'\n            },\n            templateUrl: 'common/search/SearchRow.html'\n        };\n    }\n\n    function declareSearchRowResources(pipTranslateProvider: pip.services.ITranslateProvider) {\n        pipTranslateProvider.translations('en', {\n            SEARCH_ROW_PLACEHOLDER: 'Search ...',\n\n        });\n        pipTranslateProvider.translations('ru', {\n            SEARCH_ROW_PLACEHOLDER: 'Найти ...',\n        });\n    }\n\n    angular\n        .module('pipDirective', [])\n        .directive('pipSearchRow', SearchRowDirective)\n        .config(declareSearchRowResources);\n\n})();","class CountersController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Counters';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureCountersRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('counters', {\n            url: '/counters',\n            controller: CountersController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'counters/CountersPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipCountersPage', ['pipNav'])\n        .config(configureCountersRoute)\n\n})();\n","import { ICountersDataService } from '../data/ICountersDataService';\n\ninterface ICountersPanelBindings {\n    [key: string]: any;\n}\n\nconst CountersPanelBindings: ICountersPanelBindings = {\n\n}\n\nclass CountersPanelChanges implements ng.IOnChangesObject, ICountersPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass CountersPanelController {\n    public counters: any[];\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        private pipCountersData: ICountersDataService,\n        public pipMedia: pip.layouts.IMediaService) {\n        this.readCounters();\n    }\n\n    private readCounters() {\n\n        this.pipCountersData.readCounters(null, (results) => { this.counters = results.data; console.log(this.counters, results); });\n    }\n}\n\n(() => {\n    angular\n        .module('pipCountersPanel', [])\n        .component('pipCountersPanel', {\n            bindings: CountersPanelBindings,\n            templateUrl: 'counters/CountersPanel.html',\n            controller: CountersPanelController\n        })\n\n})();\n","import { ICountersDataService, ICountersDataProvider } from './ICountersDataService';\n\nclass CountersData implements ICountersDataService {\n    private RESOURCE: string = 'counters'; \n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readCounters(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('counters').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n   \n}\n\nclass CountersDataProvider implements ICountersDataProvider {\n    private _service: ICountersDataService;\n    private RESOURCE: string = 'counters'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n        \n        if (this._service == null) {\n            this._service = new CountersData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipCountersData', ['pipRest'])\n    .provider('pipCountersData', CountersDataProvider);\n\n\n","export class ErrorDescription {\n\tpublic type: string;\n\tpublic category: string;\n\tpublic status: number;\n\tpublic code: string;\n\tpublic message: string;\n\tpublic details: any;\n\tpublic correlation_id: string;\n\tpublic cause: string;\n\tpublic stack_trace: string;\n}","import {LogMessage} from './LogMessage';\n\nexport class ErrorLogMessage extends LogMessage {\n    MomentTimeUtc: any;\n}\n\nexport class ErrorMessageRecord {\n    items: ErrorLogMessage[];\n    ErrorType: string;\n    first: any;\n    last: any;\n    count: number;\n    collapsed: boolean;\n    show: number;\n}\n\nexport interface IErrorMessages {\n    [key: string]: ErrorMessageRecord\n}\n// todo нужны default значения\nexport interface IConfigErrors {\n    start: number; // например тут при инициализации будет 0 и тд\n    pageSize: number;\n    refresh: number;\n    defaultSearch: string;\n    refreshEvent: string;\n    refreshTimes: number[];\n}\n\nexport class ConfigErrors implements IConfigErrors {\n    readonly start: number = 0;\n    readonly pageSize: number = 100;\n    readonly refresh: number = 3;\n    readonly defaultSearch: string = '';\n    readonly refreshEvent: string = 'TOOLS.ERRORS_REFRESH';\n    readonly refreshTimes: number[] = [1, 2, 3, 5, 10];\n}\n\nexport class ErrorsMessagesVisability {\n    static Limit: number = 50;\n    static Step: number = 50;\n}\n","import { IEventsDataService, IEventsDataProvider } from './IEventsDataService';\n\nclass EventsData implements IEventsDataService {\n    private RESOURCE: string = 'events';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n    public readEvents(params: any, start: number = 0, take: number = 100, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        if (!params) params = {};\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('events').get(\n            params,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass EventsDataProvider implements IEventsDataProvider {\n    private _service: IEventsDataService;\n    private RESOURCE: string = 'events'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new EventsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipEventsData', ['pipRest'])\n    .provider('pipEventsData', EventsDataProvider);\n\n\n","import { ErrorDescription } from './ErrorDescription';\n\nexport enum LogLevel {\n    None = 0,\n    Fatal = 1,\n    Error = 2,\n    Warn = 3,\n    Info = 4,\n    Debug = 5,\n    Trace = 6\n}\n\n\nexport class LogMessage {\n    public time: Date;\n    public source: string;\n    public level: LogLevel;\n    public correlation_id: string;\n    public error: ErrorDescription;\n    public message: string;\n}\n\nexport class LogMessages {\n    data: LogMessage[];\n    total: number;\n}","import { ILoggingDataService, ILoggingDataProvider } from './ILoggingDataService';\nimport { LogMessages } from './LogMessage';\n\nclass LoggingData implements ILoggingDataService {\n    private RESOURCE: string = 'logging';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n    }\n\n    private filterToString(filter: any): string {\n        if (filter == null) return null;\n        let result = ''; \n\n        for (let key in filter) {\n            if (result.length > 0)\n                result += ';';\n\n            let value = filter[key];\n            if (value != null)\n                result += key + '=' + value\n            else\n                result += key\n        }\n\n        return result;\n    }\n\n\n    public readLogging(params: any, start: number = 0, take: number = 100, successCallback?: (data: LogMessages) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('logging').get(\n            params,\n            (data: LogMessages) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readErrors(params: any, start: number = 0, take: number = 100, successCallback?: (data: LogMessages) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('errors').get(\n            params,\n            (data: LogMessages) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass LoggingDataProvider implements ILoggingDataProvider {\n    private _service: ILoggingDataService;\n    private RESOURCE: string = 'logging'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new LoggingData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipLoggingData', ['pipRest'])\n    .provider('pipLoggingData', LoggingDataProvider);\n\n\n","import { ISettingsDataService, ISettingsDataProvider } from './ISettingsDataService';\n\nclass SettingsData implements ISettingsDataService {\n    private RESOURCE: string = 'settings';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readSettingsSections(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings_section').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data.data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readSettings(section: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').get(\n            {\n                section: section\n            },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public createSettings(section: string, data: any = {}, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        console.log('section', section, this.pipRest.getResource('settings'));\n        return this.pipRest.getResource('settings').save(\n            { section: section },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public updateSettings(section: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').update(\n            {\n                section: section\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n     public saveSettingsKey(section: string, key: string, value: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').save(\n            {\n                section: section,\n                key: key\n            },\n            value,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass SettingsDataProvider implements ISettingsDataProvider {\n    private _service: ISettingsDataService;\n    private RESOURCE: string = 'settings'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new SettingsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipSettingsData', ['pipRest'])\n    .provider('pipSettingsData', SettingsDataProvider);\n\n\n","export enum StatCounterType\n{\n    Total = 0,\n    Year = 1,\n    Month = 2,\n    Day = 3,\n    Hour = 4\n}\n\nexport class StatCounter\n{\n    public group: string;\n    public name: string;\n}\n\nexport class StatCounterValue\n{\n    public year: number;\n    public month: number;\n    public day: number;\n    public hour: number;\n    public value: number;\n}\n\nexport class StatCounterSet\n{\n    public group: string;\n    public name: string;\n    public type: StatCounterType;\n    public values: StatCounterValue[];\n    public counter?: any;\n}\n","import { IStatisticsDataService, IStatisticsDataProvider } from './IStatisticsDataService';\nimport { StatCounterValue } from './StatCounters';\n\nclass StatisticsData implements IStatisticsDataService {\n    private RESOURCE: string = 'statistics';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readStatisticsSections(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics_section').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data.data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readStatistics(section: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics').get(\n            {\n                section: section\n            },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n\n    public getStats(counter: string, type: number = 0, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: any) => void, errorCallback?: (err: any) => void): any {\n            console.log('type', type);\n        let params: any = {};\n        if (counter != null) params.counter = counter;\n        if (type != null) params.type = type;\n        if (fromTimeUtc != null) params.fromTimeUtc = fromTimeUtc;\n        if (toTimeUtc != null) params.toTimeUtc = toTimeUtc;\n        params.section = counter;\n\n        return this.pipRest.getResource('statistics').query(\n            params,\n            params,\n            dataCallback,\n            errorCallback\n        );\n    }\n      public getTotalStats(counter: string, dataCallback?: (data: any) => void, errorCallback?: (err: any) => void): any {\n       \n        return this.getStats(counter, 0, null, null, dataCallback, errorCallback);\n    }\n    public getYearlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 1, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getMonthlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 2, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getDailyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 3, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getHourlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 4, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public createStatistics(section: string, data: any = {}, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        console.log('section', section, this.pipRest.getResource('statistics'));\n        return this.pipRest.getResource('statistics').save(\n            { section: section },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public updateStatistics(section: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics').update(\n            {\n                section: section\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass StatisticsDataProvider implements IStatisticsDataProvider {\n    private _service: IStatisticsDataService;\n    private RESOURCE: string = 'statistics'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new StatisticsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipStatisticsData', ['pipRest'])\n    .provider('pipStatisticsData', StatisticsDataProvider);\n\n\n","class ErrorsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Errors';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureErrorsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('errors', {\n            url: '/errors',\n            controller: ErrorsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'errors/ErrorsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipErrorsPage', ['pipNav'])\n        .config(configureErrorsRoute)\n\n})();\n","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { ConfigErrors, ErrorsMessagesVisability, ErrorMessageRecord, IErrorMessages, ErrorLogMessage } from '../data/ErrorsMessages';\nimport { LogMessage } from '../data/LogMessage';\nimport { ErrorDescription } from '../data/ErrorDescription';\n\ndeclare let moment;\ndeclare let async;\n\ninterface IErrorsPanelBindings {\n    [key: string]: any;\n}\n\nconst ErrorsPanelBindings: IErrorsPanelBindings = {\n\n}\n\nclass ErrorsPanelChanges implements ng.IOnChangesObject, IErrorsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass ErrorsPanelController {\n    private _log: ng.ILogService;\n    private _q: ng.IQService;\n    private _scope: ng.IScope;\n    private _state: angular.ui.IStateService;\n    private _location: ng.ILocationService;\n    private _errorsData: ILoggingDataService;\n    private _pipTimer: pip.services.ITimerService;\n    //private _pipErrorDetailsDialog: IErrorDetailsService;\n    private _config: ConfigErrors = new ConfigErrors();\n    private _rootScope: ng.IRootScopeService;\n    private _pipConfirmationDialog: any;\n    private _pipToasts: any;\n\n    private _start: number;\n    private _take: number;\n    private _total: boolean;\n\n    private refreshTime: number; // todo Имя должно начитаться с нижнего подчеркивания = это же private _refreshTime\n    private errorMessage: any;\n    private searchQuery: string = '';\n    private stopRefresh: boolean = false;\n\n    public showMessagesLimit: number = ErrorsMessagesVisability.Limit;\n\n    public _pipMedia: pip.layouts.IMediaService;\n    public search: string;\n    public refresh: number;\n    public refreshTimes: number[];\n    public errorText: string;\n\n    // data\n    public errors: ErrorMessageRecord[];\n    // state \n    // todo Стас, нужно сделать State одним параметром с использованием класса States, как в traces\n    public state: string;\n    public loading: boolean = false;\n    public updating: boolean = false; // нужно использовать транзакции, а не просто флаг\n    public error: boolean = false;\n\n    constructor(\n        $log: ng.ILogService,\n        $q: ng.IQService,\n        $state: angular.ui.IStateService,\n        $scope: ng.IScope,\n        $location: ng.ILocationService,\n        $rootScope: ng.IRootScopeService,\n        pipNavService: pip.nav.INavService,\n        pipLoggingData: ILoggingDataService,\n        pipTimer: pip.services.ITimerService,\n        pipMedia: pip.layouts.IMediaService,\n        //pipErrorDetailsDialog: IErrorDetailsService,\n        pipConfirmationDialog: any,\n        pipToasts: any) {\n\n        this._log = $log;\n        this._q = $q;\n        this._state = $state;\n        this._scope = $scope;\n        this._location = $location;\n        this._errorsData = pipLoggingData;\n        this._pipTimer = pipTimer;\n        this._pipMedia = pipMedia;\n        //this._pipErrorDetailsDialog = pipErrorDetailsDialog;\n        this._pipConfirmationDialog = pipConfirmationDialog;\n        this._pipToasts = pipToasts;\n\n        this._start = this._config.start;\n        this._take = this._config.pageSize;\n        this._total = true;\n        this.refresh = this._config.refresh;\n        this.refreshTimes = this._config.refreshTimes;\n\n\n        //this.filter = this._location.search().filter || this._config.defaultFilter;\n        this.search = this._location.search().search || this._config.defaultSearch;\n        this.searchQuery = this.search;\n\n        this.loading = true;\n\n        this._scope.$on('$destroy', () => {\n            this.removeRefreshTimer();\n        });\n\n\n        this.setRefreshTimer();\n        var cleanUpFunc = $rootScope.$on('TOOLS.ERRORS_REFRESH', () => {\n            if (!this.stopRefresh) {\n                this.updating = true;\n                this.InitErrors();\n            }\n        });\n\n        $scope.$on('$destroy', () => {\n            if (angular.isFunction(cleanUpFunc)) {\n                cleanUpFunc();\n            }\n        });\n\n        this.setState()\n        this.InitErrors();\n\n    }\n\n    private getErrorString(responses: any): string {\n        if (responses) {\n            if (_.isString(responses)) {\n                return responses;\n            } else if (responses.message) {\n                return responses.message;\n            } else if (responses.data && responses.data.message) {\n                return responses.data.message;\n            } else {\n                return responses.statusText || '';\n            }\n        }\n\n        return '';\n    }\n\n    public clean() {\n        this.search = null;\n        this.onSearchErrors();\n    }\n\n    private clearErrors() {\n        this._pipConfirmationDialog.show(\n            {\n                event: null,\n                title: 'Clear all errors?',\n                ok: 'Clear',\n                cancel: 'Cancel'\n            },\n            () => {\n                /*this._errorsData.clearErrors(\n                    () => {\n                        this.onErrorRead([]);\n                        this._pipToasts.showMessage('All errors have been cleared.');\n                        this.InitErrors();\n                    },\n                    (error: any) => {\n                        this.clearErrorsError(error);\n                    }\n                );*/\n            },\n            () => {\n                console.log('You disagreed');\n            }\n        );\n    }\n\n    private clearErrorsError(error: any) {\n        this._pipToasts.showError(error);\n        // todo need transactions \n    }\n\n    // todo нужно использовать traces data state -> смотри в traces \n    private setState() {\n        if (this.loading) {\n            this.state = 'loading';\n            return;\n        }\n        if (angular.isArray(this.errors) && this.errors && this.errors.length > 0) {\n            this.state = 'data';\n            return;\n        }\n        if (!angular.isArray(this.errors) || (this.errors && this.errors.length == 0)) {\n            this.state = 'empty';\n            return;\n        }\n    }\n\n    private setRefresh() {\n        this.refreshTime = this.refresh * 60 * 1000;\n    }\n\n    // для фильтра тоже нужно использовать класс\n    private getFilter() { // нужно писать возвращаемое значение\n        let filter: any = {};\n\n        if (this.searchQuery) {\n            filter.Search = this.searchQuery;\n        }\n\n        return filter;\n    }\n\n    private setRefreshTimer() {\n        if (!this._pipTimer.isStarted()) {\n            this._pipTimer.start();\n        }\n\n        this.setRefresh();\n        this.removeRefreshTimer();\n        this._pipTimer.addEvent('TOOLS.ERRORS_REFRESH', this.refreshTime);\n    }\n\n    private removeRefreshTimer() {\n        this._pipTimer.removeEvent('TOOLS.ERRORS_REFRESH');\n    }\n\n    private onErrorRead(responses: any) {\n        console.log(responses);\n        let traceErrors: LogMessage[];\n        let errorMessageTree: IErrorMessages;\n        let errors: ErrorMessageRecord[] = [];\n\n        traceErrors = this.createErrors(responses);\n        errorMessageTree = this.prepareErrorTree(this.createErrorTree(traceErrors));\n\n        for (var key in errorMessageTree) { // почему используется for ? Лучше использовать _.each  \n            let item = errorMessageTree[key];\n            if (this.errors && this.errors.length > 0) {\n                let oldItem = _.find(this.errors, (item) => {\n                    // все if должны быть с полной записью, но зачем тут вообще if ??????\n                    // нужно просто: return item && item.items && item.items.length > 0 && item.items[0].error.Type == key;\n                    if (item && item.items && item.items.length > 0 && item.items[0].error.type == key) return true;\n                    else return false;\n                });\n                item.collapsed = oldItem ? !!oldItem.collapsed : false;\n            }\n            errors.push(item);\n        }\n\n        this.errors = _.sortBy(errors, function (item: ErrorMessageRecord) {\n            return item.ErrorType;\n        });\n\n        // todo зачем тут куча просто переменных если у тебя есть state? \n        this.loading = false;\n        this.updating = false;\n        this.error = false;\n        this.setState();\n    }\n\n    private onError(responses: any): void { // тут тоже нужен класс\n        this._log.error('Error: ' + JSON.stringify(responses));\n        this.errorText = 'Error: Error on load erros messages.';\n        this.errorMessage = responses;\n        this.loading = false;\n        this.updating = false;\n        this.error = true;\n        this.setState();\n    }\n\n    private InitErrors(): void {\n        let filter = this.getFilter();\n\n        this.loading = true;\n        this.error = false;\n\n        // todo тут с этим куском что-то нужно сделать, это выглядит очень-очень странно \n        // each parallel используй\n        async.parallel([\n            (callback) => {\n                // поему тут используется старые  function ? где тип получаемых значений ?\n                this._errorsData.readErrors(filter, this._start, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 2 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 3 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 4 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 5 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 6 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 7 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 8 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 9 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            }\n        ]\n            , (error, result) => { // где типы возвращаемых значенией ? \n                if (!error && result) {\n                    this.onErrorRead(result);\n                }\n                if (error) this.onError(result);\n            });\n    }\n\n    private createErrors(traceErrors: any): LogMessage[] { // тут нет классов \n        let errorData = []; // тут нет классов \n        // join errors\n        _.each(traceErrors, (item) => {\n            if (angular.isObject(item) && angular.isArray(item.data)) {\n                for (let i = 0; i < item.data.length; i++) {\n                    errorData.push(item.data[i]);\n                }\n            }\n        });\n\n        return errorData;\n    }\n\n    private createErrorTree(traceErrors: LogMessage[]): IErrorMessages {\n        let tree: IErrorMessages = {};\n        if (angular.isArray(traceErrors)) {\n            _.each(traceErrors, (item) => {\n                let key;\n                if (item.error) {\n                    key = item.error.type;\n                } else {\n                    key = 'undefined';\n                    item.error = new ErrorDescription();\n                }\n\n                if (!tree[key]) {\n                    tree[key] = this.createRecord(key);\n                }\n                let record = this.createRecord(key);\n                tree[key] = this.addToRecord(tree[key], item);\n            });\n        }\n\n        return tree;\n    }\n\n    private prepareErrorTree(tree: IErrorMessages): IErrorMessages { //[]\n        // sort each record\n        _.each(tree, (item: ErrorMessageRecord) => {\n            item = this.sortByTime(item);\n        });\n\n        // set first last and count property\n        _.each(tree, (item: ErrorMessageRecord) => {\n            if (item.items.length > 0) {\n                item.count = item.items.length;\n                item.first = item.items[item.items.length - 1].MomentTimeUtc;\n                item.last = item.items[0].MomentTimeUtc\n            }\n        });\n        return tree;\n    }\n\n    private createRecord(key: string): ErrorMessageRecord {\n        let record: ErrorMessageRecord;\n\n        record = {\n            items: [],\n            ErrorType: key,\n            first: null,\n            last: null,\n            count: 0,\n            collapsed: false,\n            show: ErrorsMessagesVisability.Limit\n        }\n\n        return record;\n    }\n\n    private addToRecord(record: ErrorMessageRecord, item: LogMessage): ErrorMessageRecord {\n        let errorItem: ErrorLogMessage;\n\n        errorItem = new ErrorLogMessage;\n        if (record && record.items) {\n            errorItem.MomentTimeUtc = moment(item.time);\n            errorItem.time = errorItem.MomentTimeUtc.toDate().getTime();\n            errorItem.correlation_id = item.correlation_id;\n            errorItem.time = item.time;\n            errorItem.level = item.level;\n            errorItem.error = item.error;\n            errorItem.message = item.message;\n\n            record.items.push(errorItem);\n        }\n\n        return record;\n    }\n\n    private sortByTime(collection: ErrorMessageRecord): ErrorMessageRecord {\n        collection.items = _.sortBy(collection.items, function (item: ErrorLogMessage) {\n            return item.time;\n        });\n\n        return collection;\n    }\n\n    public onRefreshClick(): void {\n        this.updating = true;\n        this.searchQuery = this.search;\n        this.InitErrors();\n    }\n\n    public onRefreshChange(): void {\n        this.setRefreshTimer()\n    }\n\n    public onClickErrorDetails(): void {\n        // pipErrorDetailsDialog.show(\n        // this.errorMessage);\n    }\n\n    public onSearchErrors(): void {\n        this.searchQuery = this.search;\n        this._location.search('search', this.searchQuery);\n        this.onRefreshClick();\n    }\n\n    public onFilterErrors(): void {\n        if (this.search || this.searchQuery) {\n            this.searchQuery = this.search;\n            this._location.search('search', this.searchQuery);\n            this.onRefreshClick();\n        }\n    }\n\n    public onErrorsDetails(item: LogMessage): void {\n        /*this.stopRefresh = true\n        this._pipErrorDetailsDialog.show({\n            message: item.error.message,\n            source: item.error.category,\n            trace: item.error.stack_trace,\n            correlationId: item.correlation_id,\n            type: item.error.type,\n            time: item.time\n        },\n            () => { this.stopRefresh = false; },\n            () => { this.stopRefresh = false; }\n        );*/\n    }\n\n    public onKeyPress = function (event: JQueryKeyEventObject): void {\n        if (event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSearchErrors();\n        }\n    }\n\n    public onShowMore(item: ErrorMessageRecord): void {\n        item.show = item.show + ErrorsMessagesVisability.Step;\n    }\n\n    public onShowLess(item: ErrorMessageRecord): void {\n        item.show = ErrorsMessagesVisability.Limit;\n    }\n\n    public onBlur(): void {\n        //  this.search = this._location.search().search || this._config.defaultSearch;\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipErrorsPanel', [])\n        .component('pipErrorsPanel', {\n            bindings: ErrorsPanelBindings,\n            templateUrl: 'errors/ErrorsPanel.html',\n            controller: ErrorsPanelController\n        })\n\n})();\n","class EventsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Events';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureEventsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('events', {\n            url: '/events',\n            controller: EventsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'events/EventsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipEventsPage', ['pipNav'])\n        .config(configureEventsRoute)\n\n})();\n","import { IEventsDataService } from '../data/IEventsDataService';\n\ninterface IEventsPanelBindings {\n    [key: string]: any;\n}\n\nconst EventsPanelBindings: IEventsPanelBindings = {\n\n}\n\nclass EventsPanelChanges implements ng.IOnChangesObject, IEventsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass EventsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\nclass EventsFilter {\n    static Component: string = 'Component';\n    static Severity: string = 'Severity';\n    static Type: string = 'Type';\n    static All: string[] = ['Component', 'Severity', 'Type'];\n}\n\n\nclass EventsPanelController {\n    public events: any[] = [];\n    private _start: number = 0;\n    private _take: number = 100;\n\n    public search: string = '';\n    public state: string = EventsState.Progress;\n    public progress: boolean;\n    public updating: boolean;\n    public error: string = null;\n\n\n    constructor(\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private pipEventsData: IEventsDataService,\n        public pipMedia: pip.layouts.IMediaService,\n        private pipToasts: pip.controls.IToastService) {\n        this.readEvents();\n    }\n\n\n     public clear() {\n        this.search = null;\n        this.refreshEvents();\n    }\n\n    public readEvents() {\n        this.updating = true;\n\n         this.pipEventsData.readEvents(\n            this.getFilter(), this._start, this._take,(events: any) => {\n                this.onReadEvents(events);\n            },\n            (err: any) => {\n                this.onReadEventsError(err);\n            }\n        );\n\n    }\n\n     private getFilter() {\n        return this.search ? {Search: this.search} : {};\n    }\n\n    private onReadEventsError(error) {\n        this.error = error;//this._bbHandleErrors.parseError(error);\n    }\n\n    private onReadEvents(events: any) {\n        this.error = null;\n        _.each(events.data, (trace, $index) => {\n            if (this._start === 0 && this.events[$index]) {\n                this.events[$index] = trace;\n            } else {\n                this.events.push(trace);\n            }\n        });\n        if (this._start === 0 && events.data.length < this._take) {\n            this.events.splice(events.data.length, this._take - events.data.length);\n        }\n\n        this._start += this._take;\n        this._take = 100;\n        this.state = events.data.length > 0 || (this._start !== 0 && this.events.length > 0) ? \n                     EventsState.Data : EventsState.Empty;\n    \n        this.updating = false;\n    }\n\n    public refreshEvents() {\n        this._take = this._start > 0 ? this._start : 100;\n        this._start = 0;\n        this.$location.search('search', this.search);\n\n        this.readEvents();\n    }\n}\n\n(() => {\n    angular\n        .module('pipEventsPanel', [])\n        .component('pipEventsPanel', {\n            bindings: EventsPanelBindings,\n            templateUrl: 'events/EventsPanel.html',\n            controller: EventsPanelController\n        })\n\n})();\n","(() => {\n\n    angular\n        .module('pipSystem', [\n            'pipDirective',\n            \n            'pipLoggingResources',\n            'pipLoggingData',\n            'pipLoggingViewModel',\n            'pipLoggingPage',\n            'pipLoggingPanel',\n            \n            'pipErrorsPage',\n            'pipErrorsPanel',\n\n            'pipCountersResources',\n            'pipCountersData',\n            'pipCountersPage',\n            'pipCountersPanel',\n\n            'pipEventsResources',\n            'pipEventsData',\n            'pipEventsPage',\n            'pipEventsPanel',\n\n            'pipSettingsResources',\n            'pipSettingsData',\n            'pipSettingsPage',\n            'pipSettingsPanel',\n\n            'pipStatisticsResources',\n            'pipStatisticsService',\n            'pipStatisticsData',\n            'pipStatisticsPage',\n            'pipStatisticsPanel'\n\n        ])\n\n})();","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { LogMessages } from '../data/LogMessage';\nimport { LogMessage } from '../data/LogMessage';\n\nexport class LoggingsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\nexport class LoggingModel {\n    public loggings: LogMessage[] = [];\n    public state: string = LoggingsState.Progress;\n\n    private total: number = 0;\n    private _start: number = 0;\n    private _take: number = 100;\n\n    constructor(private pipLoggingData: ILoggingDataService) { }\n\n    public getLoggings() {\n        return this.loggings;\n    }\n    public setLoggings(loggings: LogMessage[]) {\n        this.loggings = loggings;\n    }\n\n    public setState(state: string) {\n        this.state = state; \n    }\n    \n    public getState(): string {\n        return this.state;\n    }\n\n    public readLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this.pipLoggingData.readLogging(\n            { 'Search': search }, this._start, this._take,\n            (results: LogMessages) => {\n                this.onLoggingRead(results, callback);\n            },\n            (err: any) => {\n                if (errorcallback) {\n                    errorcallback(err);\n                }\n            }\n        );\n\n    }\n\n\n    public refreshLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this._start = 0;\n        this.readLogging(search, callback, errorcallback);\n\n    }\n\n    private onLoggingRead(traces: LogMessages, callback?: () => void): void {\n        this.state = traces.data.length > 0 || (this._start !== 0 && this.loggings.length > 0) ?\n            LoggingsState.Data : LoggingsState.Empty;\n\n        _.each(traces.data, (trace, $index) => {\n            this.loggings[$index] ? this.loggings[$index + this._start] = trace : this.loggings.push(trace);\n        });\n\n        this._start += traces.data.length;\n\n        if (this.total <= this._start || this._take != traces.data.length) {\n            this.total = this._start;\n\n            if (this.loggings.length > this.total) {\n                this.loggings.splice(this.total, this.loggings.length - this.total);\n            }\n        } else {\n            //this.readLogging();\n        }\n        if (callback) {\n            callback();\n        }\n\n    }\n\n}","class LoggingController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Logging';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureLoggingRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('logging', {\n            url: '/logging',\n            controller: LoggingController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'logging/LoggingPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipLoggingPage', ['pipNav'])\n        .config(configureLoggingRoute)\n\n})();\n","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { ILoggingViewModel } from './LoggingViewModel';\nimport { LogMessage } from '../data/LogMessage';\n\ninterface ILoggingPanelBindings {\n    [key: string]: any;\n}\n\nconst LoggingPanelBindings: ILoggingPanelBindings = {\n\n}\n\nclass LoggingPanelChanges implements ng.IOnChangesObject, ILoggingPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass LoggingsTimer {\n    static Times: number[] = [1, 3, 5, 10, 20, 30];\n}\n\nclass LoggingsFilter {\n    static Content: string = 'Content';\n    static CorrelationId: string = 'CorrelationId';\n    static Level: string = 'Level';\n    static All: string[] = ['Content', 'CorrelationId', 'Level'];\n}\n\nclass LoggingPanelController {\n    public transaction: pip.services.Transaction;\n    public filter: string;\n    public autoUpdate: boolean = true;\n    public filters: string[] = LoggingsFilter.All;\n    public refresh: number = LoggingsTimer.Times[3];\n    public refreshTimes: number[] = LoggingsTimer.Times;\n    public search: string = '';\n    public localSearch: string = '';\n    public error: string = null;\n\n    private stopRefresh: boolean = false;\n    private _refreshTime: number;\n    private cleanUpFunc: Function;\n\n    constructor(\n        private pipLoggingViewModel: ILoggingViewModel,\n        private $location: ng.ILocationService,\n        private pipTimer: pip.services.ITimerService,\n        public pipMedia: pip.layouts.IMediaService,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService) {\n\n\n        this.transaction = pipTransaction.create('traces');\n        this.filter = this.$location.search().filter || LoggingsFilter.Content;\n        this.search = this.$location.search().search || '';\n        this.localSearch = this.search;\n        this.readLogging();\n\n        this.setRefreshTimer();\n        this.cleanUpFunc = $rootScope.$on('Logging', () => {\n            if (!this.stopRefresh && this.autoUpdate) {\n                this.refreshLogging();\n            }\n        });\n\n    }\n\n    public $onDestroy() {\n        this.pipTimer.removeEvent('Logging');\n        if (angular.isFunction(this.cleanUpFunc)) {\n            this.cleanUpFunc();\n        }\n    }\n\n    public loggings(): LogMessage[] {\n        return this.pipLoggingViewModel.logging;\n    }\n\n    public state(): string {\n        return this.pipLoggingViewModel.state;\n    }\n\n\n    public readLogging(): void {\n        this.stopRefresh = true;\n        this.transaction.begin('PROCESSING');\n        this.pipLoggingViewModel.readLogging(this.search, () => { this.onLoggingRead() }, (error) => { this.onError(error) });\n    }\n\n\n    private setRefreshTimer() {\n        if (!this.pipTimer.isStarted()) {\n            this.pipTimer.start();\n        }\n\n        this.setRefresh();\n        this.pipTimer.removeEvent('Logging');\n        this.pipTimer.addEvent('Logging', this._refreshTime);\n    }\n\n    public onRefreshChange(): void {\n        this.setRefreshTimer()\n    }\n\n    private setRefresh() {\n        this._refreshTime = this.refresh * 1000;\n    }\n\n    public playStopAutoUpdate() {\n        this.autoUpdate = !this.autoUpdate;\n    }\n\n    private onError(error: any): void {\n        this.error = error;\n        this.transaction.abort();\n        this.stopRefresh = false;\n    }\n\n    private onLoggingRead(): void {\n        this.stopRefresh = false;\n        this.error = null;\n        this.transaction.end();\n    }\n\n    public refreshLogging(): void {\n        this.$location.search('search', this.search);\n        this.stopRefresh = true;\n        this.transaction.begin('PROCESSING');\n        this.pipLoggingViewModel.refreshLogging(this.search, () => { this.onLoggingRead() }, (error) => { this.onError(error) });\n    }\n    public onSearch(): void {\n        this.search = this.localSearch;\n        this.refreshLogging();\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipLoggingPanel', [])\n        .component('pipLoggingPanel', {\n            bindings: LoggingPanelBindings,\n            templateUrl: 'logging/LoggingPanel.html',\n            controller: LoggingPanelController\n        })\n\n})();\n","import { LoggingModel } from './LoggingModel';\nimport { LogMessage } from '../data/LogMessage';\nimport { ILoggingDataService } from '../data/ILoggingDataService';\n\nexport interface ILoggingViewModel {\n    logging: LogMessage[];\n    state: string;\n    readLogging(search?: string, callback?: () => void, errorcallback?: (error: any) => void);\n    refreshLogging(search?: string, callback?: () => void, errorcallback?: (error: any) => void);\n}\n\nclass LoggingViewModel implements ILoggingViewModel {\n    private workflow: LoggingModel;\n\n    constructor(private pipLoggingData: ILoggingDataService) {\n        \"ngInject\";\n        this.workflow = new LoggingModel(pipLoggingData);\n    }\n\n    public get logging(): LogMessage[] {\n        return this.workflow.getLoggings();\n    }\n\n    public set logging(loggings: LogMessage[]) {\n        this.workflow.setLoggings(loggings);\n    }\n\n    public get state(): string {\n        return this.workflow.getState();\n    }\n\n    public set state(state: string) {\n        this.workflow.setState(state);\n    }\n\n\n    public readLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this.workflow.readLogging(search, callback, errorcallback);\n    }\n    public refreshLogging(search?: string, callback?: () => void, errorcallback?: (error) => void) {\n        this.workflow.refreshLogging(search, callback, errorcallback)\n    }\n}\n\n(() => {\n\n    angular\n        .module('pipLoggingViewModel', ['pipNav'])\n        .service('pipLoggingViewModel', LoggingViewModel)\n\n})();\n\n","function configCountersResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('counters', '/api/v1/counters');\n}\n\nangular\n    .module('pipCountersResources', [])\n    .config(configCountersResources);","function configEventsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('events', '/api/v1/eventlog');\n}\n\nangular\n    .module('pipEventsResources', [])\n    .config(configEventsResources);","function configLoggingResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('logging', '/api/v1/logging');\n    pipRestProvider.registerOperation('errors', '/api/v1/logging/errors');\n}\n\nangular\n    .module('pipLoggingResources', [])\n    .config(configLoggingResources);","function configSettingsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerPagedCollection('settings', '/api/v1/settings/:section/:key',\n        { section: '@section' },\n        {\n            page: { method: 'GET', isArray: false },\n            update: { method: 'PUT' }\n        }\n    );\n    pipRestProvider.registerOperation('settings_section', '/api/v1/settings/ids');\n\n}\n\nangular\n    .module('pipSettingsResources', [])\n    .config(configSettingsResources);","function configStatisticsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('statistics_counters', '/api/v1/statistics/counters');\n    pipRestProvider.registerOperation('statistics_section', '/api/v1/statistics/groups');\n    pipRestProvider.registerOperation('statistics', '/api/v1/statistics/:section/:name');\n    \n}\n\nangular\n    .module('pipStatisticsResources', [])\n    .config(configStatisticsResources);","'use strict';\n\nexport class SettingsKey {\n    name: string;\n    data: any;\n}\n\nexport class AddSettingsKeyDialogController {\n    public title: string = \"New settings key\";\n    public $mdDialog: angular.material.IDialogService;\n    public theme;\n    public key: SettingsKey;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n        this.key = new SettingsKey();\n        this.key.name = params.name ? params.name.replace('<wbr>', '') : null;\n        this.key.data = params.data;\n\n        if (params.name && params.data) {\n            this.title = \"Edit settings key\";\n        }\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide(this.key);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipAddSettingsKeyDialog', ['ngMaterial'])\n    .controller('pipAddSettingsKeyDialogController', AddSettingsKeyDialogController);\n\nimport './AddSettingsKeyService';","\nimport { SettingsKey } from \"./AddSettingsKeyController\";\n\nexport interface IAddSettingsKeyService {\n    show(params: any, successCallback?: (key: SettingsKey) => void, cancelCallback?: () => void): any;\n}\n\nclass AddSettingsKeyService implements IAddSettingsKeyService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (key: SettingsKey) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'settings/AddSettingsKeyDialog.html',\n            controller: 'pipAddSettingsKeyDialogController',\n            controllerAs: '$ctrl',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((key: SettingsKey) => {\n            if (successCallback) {\n                successCallback(key);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddSettingsKeyDialog')\n    .service('pipAddSettingsKeyDialog', AddSettingsKeyService);","'use strict';\n\nexport class AddSettingsSectionDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme;\n    public sectionName: string;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n    \n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide(this.sectionName);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipAddSettingsSectionDialog', ['ngMaterial'])\n    .controller('pipAddSettingsSectionDialogController', AddSettingsSectionDialogController);\n\nimport './AddSettingsSectionService';","\nexport interface IAddSettingsSectionService {\n    show(params: any, successCallback?: (settingsName: string) => void, cancelCallback?: () => void): any;\n}\n\nclass AddSettingsSectionService implements IAddSettingsSectionService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (settingsName: string) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'settings/AddSettingsSectionDialog.html',\n            controller: 'pipAddSettingsSectionDialogController',\n            controllerAs: '$ctrl',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((settingsName: string) => {\n            if (successCallback) {\n                successCallback(settingsName);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddSettingsSectionDialog')\n    .service('pipAddSettingsSectionDialog', AddSettingsSectionService);","class SettingsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Settings';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureSettingsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('settings_tool', {\n            url: '/settings_tool',\n            controller: SettingsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'settings/SettingsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipSettingsPage', ['pipNav'])\n        .config(configureSettingsRoute)\n\n})();\n","import { ISettingsDataService } from '../data/ISettingsDataService';\nimport { IAddSettingsSectionService } from './AddSettingsSectionService';\nimport { IAddSettingsKeyService } from './AddSettingsKeyService';\n\ninterface ISettingsPanelBindings {\n    [key: string]: any;\n}\n\nconst SettingsPanelBindings: ISettingsPanelBindings = {\n\n}\n\nclass SettingsPanelChanges implements ng.IOnChangesObject, ISettingsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass SettingsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\n\nexport class SettingSection {\n    public name: string;\n    public hide: boolean = false;\n}\n\n\nclass SettingsPanelController {\n    public settingsSections: SettingSection[];\n    public settings: any[];//ISettingsMessages[];\n    public search: string = null;\n    public selectIndex: number;\n    public details: boolean;\n    public state: string = SettingsState.Progress;\n    public error: string = null;\n    public transaction: pip.services.Transaction;\n    public getSelectDropdown: Function;\n\n    constructor(\n        private $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        private pipToasts: pip.controls.IToastService,\n        pipTransaction: pip.services.ITransactionService,\n        $log: ng.ILogService,\n        private pipAddSettingsSectionDialog: IAddSettingsSectionService,\n        private $state: ng.ui.IStateService,\n        private pipSettingsData: ISettingsDataService,\n        public pipMedia: pip.layouts.IMediaService,\n        private pipAddSettingsKeyDialog: IAddSettingsKeyService,\n        private pipConfirmationDialog: pip.dialogs.IConfirmationDialogService) {\n\n        this.transaction = pipTransaction.create('settings');\n        this.search = this.$location.search().search;\n        this.readSettings();\n        this.selectIndex = 0;\n\n        this.getSelectDropdown = () => {\n            this.selectItem(this.selectIndex);\n        }\n    }\n\n    private readSettings() {\n        this.transaction.begin('Reading settings');\n\n        this.state = SettingsState.Empty;\n        this.transaction.end();\n        this.pipSettingsData.readSettingsSections({},\n            (settingsSections: string[]) => {\n                this.state = SettingsState.Progress;\n                this.onSettingsRead(settingsSections);\n                if (settingsSections.length > 0) {\n                    this.state = SettingsState.Data;\n                } else {\n                    this.state = SettingsState.Empty;\n                }\n            },\n            (error: any) => {\n                this.onError(error);\n            });\n        /*this.pipSettingsData.getSettingSections(\n            (settingsSections: string[]) => {\n                this.state = SettingsState.Progress;\n                this.onSettingsRead(settingsSections);\n                if (settingsSections.length > 0) {\n                    this.state = SettingsState.Data;\n                } else {\n                    this.state = SettingsState.Empty;\n                }\n            },\n            (error: any) => {\n                this.onError(error);\n            }\n        );*/\n    }\n\n    public onSearch() {\n        this.$location.search('search', this.search);\n\n        _.each(this.settingsSections, (item: SettingSection, index: number) => {\n            this.settingsSections[index].hide = this.filterSections(item.name);\n        })\n        if (!this.settingsSections[this.selectIndex] || this.settingsSections[this.selectIndex].hide == true) {\n            let index: number = _.findIndex(this.settingsSections, { hide: false })\n            if (index == -1) {\n                this.state = SettingsState.Empty;\n                this.selectIndex = null;\n            } else {\n                this.state = SettingsState.Data;\n                this.selectItem(index);\n            }\n        }\n    }\n\n    public clean() {\n        this.search = null;\n        this.onSearch();\n    }\n\n    private filterSections(section): boolean {\n        if (!this.search || this.search == '') {\n            return false;\n        }\n\n        if (section.indexOf(this.search) != -1) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private onSettingsRead(settingsSections: string[]) {\n        this.settingsSections = [];\n        _.each(settingsSections, (item: string) => {\n            this.settingsSections.push({ name: item, hide: false });\n        })\n        this.settings = [];\n\n        _.each(this.settingsSections, (section: SettingSection, index: number) => {\n            if (section.name === this.$location.search().section) {\n                this.selectIndex = index;\n            }\n\n            this.pipSettingsData.readSettings(section.name, (settings) => {\n                let keys: string[] = _.keys(settings);\n\n                keys = _.map(keys, (key) => {\n                    if (key == '$promise' || key == '$resolved') return key;\n\n                    let split: string[] = _.split(key, '.');\n                    let newKey: string = '';\n                    _.each(split, (k: string, index: number) => {\n                        newKey += k;\n                        if (index != split.length - 1) {\n                            newKey += '.<wbr>';\n                        }\n                    })\n                    return newKey;\n                })\n                let settingsN = _.zipObject(keys, _.values(settings));\n\n                this.settings[index] = settingsN;\n                this.transaction.end();\n                this.state = SettingsState.Data;\n            }, (error: any) => {\n                this.transaction.abort();\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n\n        });\n    }\n\n    private onError(error: any) {\n        this.error = error;\n        this.transaction.end(error);\n    }\n\n    public selectItem(index: number) {\n        this.selectIndex = index;\n        this.$location.search('section', this.settingsSections[index].name);\n    }\n\n    public updateKey(name: string, data: string) {\n        this.pipAddSettingsKeyDialog.show(\n            {\n                section: this.settingsSections[this.selectIndex],\n                name: name,\n                data: data\n            },\n            (key) => {\n                this.transaction.begin('add section');\n                if (name == key.name) {\n                    this.addKeyDialogCallback(key);\n                } else {\n                    this.updateKeyDialogCallback(key, name);\n                }\n            })\n    }\n\n    private updateKeyDialogCallback(key, name) {\n        name = name.replace('.', '.<wbr>');\n        key.name = key.name.replace('.', '.<wbr>');\n        //this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], name);\n        //this.settings[this.selectIndex][key.name] = key.data;\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, key.name,\n            (data) => {\n                this.transaction.end();\n            },\n            (error: any) => {\n                this.transaction.abort();\n\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n    }\n\n    public openDeleteKeyDialog(key: string, value: string) {\n        this.pipConfirmationDialog.show(\n            {\n                event: null,\n                title: 'Delete settings key?',\n                ok: 'Delete',\n                cancel: 'Cancel'\n            },\n            () => {\n                this.deleteKey(key, value);\n            },\n            () => {\n                console.log('You disagreed');\n            }\n        );\n    }\n\n    public deleteKey(key: string, value: string) {\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], key);\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], '$promise');\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], '$resolved');\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, this.settings[this.selectIndex],\n            (data) => {\n                this.transaction.end();\n            },\n            (error: any) => {\n                this.transaction.abort();\n\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n    }\n\n    public addKey() {\n        this.pipAddSettingsKeyDialog.show({ section: this.settingsSections[this.selectIndex] }, (key) => {\n            this.addKeyDialogCallback(key);\n        })\n    }\n\n    private addKeyDialogCallback(key) {\n        this.transaction.begin('add section');\n\n        let settings = {}, keys: string[] = _.keys(this.settings[this.selectIndex]),\n            values = _.values(this.settings[this.selectIndex]);\n        for (let i: number = 0; i < values.length; i++) {\n            if (keys[i] != '$promise' && keys[i] != '$resolved') {\n                settings[keys[i]] = values[i];\n            }\n        }\n        settings[key.name] = key.data;\n        console.log(settings);\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, settings,\n            () => {\n                this.saveKeyCallback(key);\n            },\n            (error: any) => {\n                this.transaction.abort();\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n\n    }\n\n    private saveKeyCallback(key) {\n        this.transaction.end();\n\n        key.name = key.name.replace('.', '.<wbr>');\n        if (!this.settings[this.selectIndex]) {\n            this.settings[this.selectIndex] = {};\n        }\n        this.settings[this.selectIndex][key.name] = key.data;\n    }\n\n    private errorkeyCallback(error: any) {\n        this.transaction.abort();\n        this.pipToasts.showError(error, null, null, null, null);\n    }\n\n    public addSection() {\n        this.pipAddSettingsSectionDialog.show({}, (sectionName: string) => {\n            this.addSectionDialogCallback(sectionName);\n        })\n    }\n\n    private addSectionDialogCallback(sectionName: string, data: any = {}) {\n        this.transaction.begin('Adding section');\n        this.pipSettingsData.createSettings(sectionName, data,\n            () => {\n                this.saveSectionCallback(sectionName);\n            },\n            (error: any) => {\n                this.errorkeyCallback(error);\n            });\n    }\n\n    private saveSectionCallback(data: string) {\n        this.transaction.end();\n        this.settingsSections.push({ name: data, hide: this.filterSections(data) }); // todo\n        this.selectItem(this.settingsSections.length - 1);\n    }\n\n    private errorSectionCallback(error) {\n        this.transaction.end('error');\n        this.pipToasts.showError(error, null, null, null, null);\n    }\n\n\n}\n\n(() => {\n    angular\n        .module('pipSettingsPanel', ['pipAddSettingsSectionDialog', 'pipAddSettingsKeyDialog'])\n        .component('pipSettingsPanel', {\n            bindings: SettingsPanelBindings,\n            templateUrl: 'settings/SettingsPanel.html',\n            controller: SettingsPanelController\n        })\n\n})();\n","class StatisticsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Statistics';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureStatisticsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('statistics', {\n            url: '/statistics',\n            controller: StatisticsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'statistics/StatisticsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipStatisticsPage', ['pipNav'])\n        .config(configureStatisticsRoute)\n\n})();\n","import { IStatisticsDataService } from '../data/IStatisticsDataService';\nimport { StatCounterValue, StatCounterSet } from '../data/StatCounters';\ndeclare let moment;\nimport {\n    IStatisticsService,\n    ToolsStatisticsGetFunctions,\n    ToolsStatisticsFormatX,\n    ToolsStatisticsFormatTickX,\n    ToolsStatisticsDecade,\n    counterStatistics,\n    pieChartSeria,\n    statisticsGroup,\n    chartValue,\n    lineChartSeria,\n    StatisticsFilter\n} from \"./StatisticsService\";\n\nclass ToolsStatisticsStates {\n    static Progress: string = 'progress';\n    static Empty: string = 'empty';\n    static Data: string = 'data';\n}\n\n\ninterface IStatisticsPanelBindings {\n    [key: string]: any;\n}\n\nconst StatisticsPanelBindings: IStatisticsPanelBindings = {\n\n}\n\nclass StatisticsPanelChanges implements ng.IOnChangesObject, IStatisticsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass StatisticsPanelController {\n    public filters: string[] = StatisticsFilter.All;\n    public filter: string;\n    public state: string = ToolsStatisticsStates.Progress;\n    public search: string;\n    public counters: string[];\n    public statistics: counterStatistics[];\n    public statisticsGroups: statisticsGroup[];\n    public transaction: pip.services.Transaction;\n    public TOTAL: string = StatisticsFilter.Total;\n    public hourlyDate: Date;\n    public dailyDate: Date;\n    public monthlyDate: Date;\n    public yearlyDate: Date;\n    public yearlyName: string;\n    public chartXTickFormat: any;\n    public decades: ToolsStatisticsDecade[];\n    public pipMedia: pip.layouts.IMediaService\n\n    private groups: any;\n    private _rest: IStatisticsDataService;\n    private _pipAuxPanel: pip.layouts.IAuxPanelService;\n    private _$state: angular.ui.IStateService;\n    private _$location: ng.ILocationService;\n    private _$timeout: ng.ITimeoutService;\n    private _pipDateConvert: pip.dates.IDateConvertService;//IDateTimeService;\n    private _onlyUpdated: boolean = false;\n    private _pipStatistics: IStatisticsService;\n    private _pipToasts: any;\n    constructor(\n        $window: ng.IWindowService,\n        $timeout: ng.ITimeoutService,\n        $state: angular.ui.IStateService,\n        $location: ng.ILocationService,\n        pipStatisticsData: IStatisticsDataService,\n        pipTransaction: pip.services.ITransactionService,\n        pipAuxPanel: pip.layouts.IAuxPanelService,\n        pipDateConvert: pip.dates.IDateConvertService,\n        pipMedia: pip.layouts.IMediaService,\n        pipStatistics: IStatisticsService,\n        pipToasts: any\n    ) {\n\n        this.pipMedia = pipMedia;\n        this._rest = pipStatisticsData;\n        this._pipAuxPanel = pipAuxPanel;\n        this._pipDateConvert = pipDateConvert;\n        this._$state = $state;\n        this._$location = $location;\n        this._$timeout = $timeout;\n        this._pipStatistics = pipStatistics;\n        this._pipToasts = pipToasts;\n        this.transaction = pipTransaction.create('statistics');\n        this.chartXTickFormat = (x) => {\n            if (this.filter == StatisticsFilter.Hourly) {\n                //x += this._pipTimeZone.hoursOffset == undefined ? 0 : this._pipTimeZone.hoursOffset;\n                x += x > 24 ? -24 : x < -24 ? 24 : 0;\n            }\n\n            return ToolsStatisticsFormatTickX[this.filter](x);\n        }\n\n        this.filter = $state.params['filter'] || StatisticsFilter.Hourly;\n        this.search = $state.params['search'];\n        this.configDates();\n        this.getCounters();\n    }\n\n    private prepareDecades() {\n        let stepsCount = 1;\n        let utcStartYear = moment.utc().startOf('year').add('years', (-stepsCount * 10 - 6));\n        this.decades = new Array<ToolsStatisticsDecade>();\n        this.decades.push(new ToolsStatisticsDecade(moment.utc(utcStartYear).toDate(), utcStartYear.year().toString() + ' - ' + utcStartYear.add('years', 10).year().toString()));\n\n        for (let i = -stepsCount + 1; i <= stepsCount; i++) {\n            let start = _.cloneDeep(utcStartYear);\n            let end = _.cloneDeep(utcStartYear.add('years', 10));\n            this.decades.push(new ToolsStatisticsDecade(moment.utc(start).toDate(), start.year().toString() + ' - ' + end.year().toString()));\n        }\n    }\n\n    private configDates() {\n        this.prepareDecades();\n        let utcDate = moment.utc();\n\n        this.hourlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Hourly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        this.dailyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Daily) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        this.monthlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Monthly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        utcDate.add('years', -6);\n        this.yearlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Yearly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n    }\n\n    private getCounters() {\n        this.transaction.begin('PROCESSING');\n        this._rest.readStatisticsSections(null, (counters) => {\n            this.counters = counters;\n            if (this.counters.length > 0) {\n                this.getStatistics();\n            } else {\n                this.transaction.end();\n                this.state = ToolsStatisticsStates.Empty;\n            }\n        }, (error: any) => {\n            this._pipToasts(error);\n            this.transaction.end();\n        });\n    }\n\n    private getEndDate() {\n        let endDate;\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                endDate = moment(this.hourlyDate).add('days', 1).add(0, 'hours').add('minutes', -1).toDate();\n                //endDate = moment(this.hourlyDate).add('days', 1).add(-this._pipTimeZone.hoursOffset, 'hours').add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                endDate = moment(this.dailyDate).add('weeks', 1).add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                endDate = moment(this.monthlyDate).add('years', 1).add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                endDate = moment(this.yearlyDate).add('years', 10).add('minutes', -1).toDate();\n                break;\n        }\n\n        return endDate;\n    }\n\n    private getStartDate() {\n        let startDate;\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                startDate = moment.utc(this.hourlyDate).startOf('day').add(0, 'hours').toDate();\n                //startDate = moment.utc(this.hourlyDate).startOf('day').add(-this._pipTimeZone.hoursOffset, 'hours').toDate();\n                this.hourlyDate = startDate;\n                break;\n            case StatisticsFilter.Daily:\n                startDate = moment.utc(this.dailyDate).startOf('isoWeek').toDate();\n                this.dailyDate = startDate;\n                break;\n            case StatisticsFilter.Monthly:\n                startDate = moment.utc(this.monthlyDate).startOf('year').toDate();\n                this.monthlyDate = startDate;\n                break;\n            case StatisticsFilter.Yearly:\n                startDate = moment.utc(this.yearlyDate).startOf('year').toDate();\n                this.yearlyDate = startDate;\n                this.yearlyName = <string>_.result(_.find(this.decades, function (dec) {\n                    return dec.value.toString() == startDate.toString();\n                }), 'name');\n                break;\n        }\n\n        this._$location.search('start', startDate);\n\n        return startDate;\n    }\n\n    private getStatistics() {\n        this.statistics = new Array<counterStatistics>();\n        let dateStart: Date = this.getStartDate();\n        let dateEnd: Date = this.getEndDate();\n        _.each(this.counters, (counter, index) => {\n            if (this.filter !== StatisticsFilter.Total) {\n                this._rest[ToolsStatisticsGetFunctions[this.filter]](counter, dateStart, dateEnd,\n                    (statistics: any) => {\n                        //statistics = _.groupBy(statistics, 'group');\n                        //[counter: '', values: [{value: 4, data}]]\n                        console.log('st',statistics);\n                        this.transaction.end();\n                        let temp = new counterStatistics(counter, statistics);\n                        temp.seria = this.prepareForLineCharts(statistics, counter, dateStart, dateEnd, this.filter);\n                        console.log('temp', temp);\n                        this.statistics.push(temp);\n\n                        if (index === this.counters.length - 1) this.groupStatistics();\n                    }, (error: any) => {\n                        this._pipToasts(error);\n                        this.transaction.end();\n                    });\n            } else {\n                this._rest.getTotalStats(counter,\n                    (statistics: any) => {\n                    \n                        this.transaction.end();\n                        let temp = new counterStatistics(counter, statistics);\n                        temp.seria = this.prepareForPieCharts(statistics, counter);\n                          console.log('temp',temp);\n                        \n                        this.statistics.push(temp);\n\n                        if (index === this.counters.length - 1) this.groupStatistics();\n                    },\n                    (error: any) => {\n                        this._pipToasts(error);\n                        this.transaction.end();\n                    });\n            }\n        });\n    }\n\n    public clean() {\n        this.search = null;\n        this.searchClick();\n    }\n\n    // private formatXValues(x) {\n    //     return x[ToolsStatisticsFormatX[this.filter]]();\n    // }\n\n    private prepareForPieCharts(statistics: any[], counter: string): pieChartSeria[] {\n         let seria, serias: any[] = [], values;\n        _.each(statistics, (item: any) => {\n            console.log(item);\n            seria = new pieChartSeria(item.counter, item.values[0].value);\n            serias.push(seria);\n        })\n        return serias\n    }\n\n    private prepareForLineCharts(statistics: StatCounterValue[], counter: string, dateFrom: Date, dateTo: Date, category: string): lineChartSeria[] {\n        let seria, serias: any[] = [], values;\n        _.each(statistics, (item: any) => {\n            values = this._pipStatistics.fillLineCharts(item.values, dateFrom, dateTo, category);\n            seria = new lineChartSeria(item.counter, values);\n            serias.push(seria);\n        })\n        console.log('v', values);\n  \n\n        return serias;\n    }\n\n    private groupStatistics() {\n        this.groups = this.statistics;\n        console.log('groups', this.groups);\n        /*_.groupBy(this.statistics, (counterStats: counterStatistics) => {\n            let oldCounter = _.clone(counterStats.counter);\n            counterStats.counter = counterStats.counter.substr(oldCounter.lastIndexOf('.') + 1);\n\n            return oldCounter.substr(0, oldCounter.lastIndexOf('.'));\n        });*/\n\n        this.filterStatistics();\n    }\n\n    public searchClick() {\n        this._$location.search('search', this.search);\n        this.transaction.begin('PROCESSING');\n        this.filterStatistics();\n    }\n\n    public filterStatistics() {\n        this.statisticsGroups = new Array<statisticsGroup>();\n        _.each(this.groups, (group, name) => {\n              console.log('statisticsGroups', group, name);\n            if (!this.search || name.toLowerCase().indexOf(this.search.toLowerCase()) > -1)\n                this.statisticsGroups.push(new statisticsGroup(name, group))\n        });\n\n        this.state = this.statisticsGroups.length === 0 ? ToolsStatisticsStates.Empty : ToolsStatisticsStates.Data;\n        this.transaction.end();\n    }\n\n    public refreshStatistics(filter?: string) {\n        if (filter) this.filter = filter;\n        if (this.statisticsGroups.length == 0) return; \n\n        this.state = ToolsStatisticsStates.Progress;\n        this._$location.search('filter', this.filter);\n\n        this.transaction.begin('PROCESSING');\n        this.getStatistics();\n\n        this._onlyUpdated = true;\n        this._$timeout(() => {\n            this._onlyUpdated = false;\n        }, 4000);\n    }\n\n    public previousStep() {\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = moment.utc(this.hourlyDate).add('days', -1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = moment.utc(this.dailyDate).add('weeks', -1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = moment.utc(this.monthlyDate).add('years', -1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                this.yearlyDate = moment.utc(this.yearlyDate).add('years', -10).toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public nextStep() {\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = moment.utc(this.hourlyDate).add('days', 1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = moment.utc(this.dailyDate).add('weeks', 1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = moment.utc(this.monthlyDate).add('years', 1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                this.yearlyDate = moment.utc(this.yearlyDate).add('years', 10).toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public today() {\n        let utcDate = moment.utc();\n\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                utcDate.year(2010);\n                this.yearlyDate = utcDate.toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public updateDate() {\n        if (!this._onlyUpdated) this.refreshStatistics();\n    }\n\n    public updateDecade(yearlyDate) {\n        this.yearlyDate = yearlyDate;\n\n        this.refreshStatistics();\n    }\n\n\n}\n\n(() => {\n    angular\n        .module('pipStatisticsPanel', ['pipCharts'])\n        .component('pipStatisticsPanel', {\n            bindings: StatisticsPanelBindings,\n            templateUrl: 'statistics/StatisticsPanel.html',\n            controller: StatisticsPanelController\n        })\n\n})();\n","'use strict'\ndeclare let moment;\nimport { StatCounterValue, StatCounterSet } from '../data/StatCounters';\nimport { IStatisticsDataService } from '../data/IStatisticsDataService';\n\nexport class StatisticsFilter {\n    static Yearly: string = 'Yearly';\n    static Monthly: string = 'Monthly';\n    static Daily: string = 'Daily';\n    static Hourly: string = 'Hourly';\n    static Total: string = 'Total';\n    static All: string[] = ['Total', 'Yearly', 'Monthly', 'Daily', 'Hourly'];\n}\n\nexport class counterStatistics {\n    private _counter: string;\n    private _statistics: StatCounterValue[];\n    private _value: number;\n    private _seria: any;\n    private _key: string;\n\n    public constructor(counter: string, statistics: StatCounterValue[], value?: number) {\n        this._counter = counter;\n        this._statistics = statistics;\n        this._value = value || undefined;\n    }\n\n    public get statistics(): StatCounterValue[] {\n        return this._statistics;\n    }\n\n    public set statistics(statistics: StatCounterValue[]) {\n        this._statistics = statistics;\n    }\n\n    public get value(): number {\n        return this._value;\n    }\n\n    public set value(value: number) {\n        this._value = value;\n    }\n\n    public get key(): string {\n        return this._key;\n    }\n\n    public set key(value: string) {\n        this._key = value;\n    }\n\n    public get counter(): string {\n        return this._counter;\n    }\n\n    public set counter(counter: string) {\n        this._counter = counter;\n        if (this._seria) this._seria.key = counter;\n    }\n\n    public get seria(): any {\n        return this._seria;\n    }\n\n    public set seria(seria: any) {\n        this._seria = seria;\n    }\n}\n\nexport class statisticsGroup {\n    private _group: string;\n    private _series: any[];\n    private _counterStats: counterStatistics[];\n    private _singleChartvalue: boolean;\n\n    public constructor(group: string, counterStats: counterStatistics[]) {\n         console.log('1',group, counterStats);\n        this._group = counterStats['counter'];\n        _.each(counterStats['seria'], (cs, index) => {\n            counterStats['seria'][index].key = counterStats['statistics'][index].name;\n        })\n        this._counterStats = counterStats;\n        this._series = new Array<any>();\n        _.each(this._counterStats['seria'], (cs) => {\n            this._series.push(cs);\n\n            this._singleChartvalue = this._singleChartvalue === false ? false : (cs.values !== undefined && cs.values.length === 1);\n        });\n    }\n\n    public get group(): string {\n        return this._group;\n    }\n\n    public set group(group: string) {\n        this._group = group;\n    }\n\n    public get counterStats(): counterStatistics[] {\n        return this._counterStats;\n    }\n\n    public set counterStats(counterStats: counterStatistics[]) {\n        this._counterStats = counterStats;\n    }\n\n    public get series(): any[] {\n        return this._series;\n    }\n\n    public set series(series: any[]) {\n        this._series = series;\n    }\n\n    public get singleChartvalue(): boolean {\n        return this._singleChartvalue;\n    }\n\n    public set singleChartvalue(singleChartvalue: boolean) {\n        this._singleChartvalue = singleChartvalue;\n    }\n}\n\nexport class chartValue {\n    public x: any;\n    public color: string;\n    public value: number;\n\n    public constructor(x: any, value: number, color?: string) {\n        this.x = x;\n        this.value = value;\n        this.color = color || undefined;\n    }\n}\n\nexport class lineChartSeria {\n    public key: string;\n    public color: string;\n    public values: chartValue[];\n\n    public constructor(key: string, values: chartValue[], color?: string) {\n        this.key = key;\n        this.values = values;\n        this.color = color || undefined;\n    }\n}\n\nexport class pieChartSeria {\n    public key: string;\n    public color: string;\n    public value: number;\n\n    public constructor(key: string, value: number, color?: string) {\n        this.key = key;\n        this.value = value;\n        this.color = color || undefined;\n    }\n}\n\nexport class ToolsStatisticsGetFunctions {\n    static Yearly: string = 'getYearlyStats';\n    static Monthly: string = 'getMonthlyStats';\n    static Daily: string = 'getDailyStats';\n    static Hourly: string = 'getHourlyStats';\n    static Total: string = 'getTotalStats';\n}\n\nexport class ToolsStatisticsFormatX {\n    static Yearly: string = 'getUTCFullYear';\n    static Monthly: string = 'getUTCMonth';\n    static Daily: string = 'getUTCDate';\n    static Hourly: string = 'getUTCHours';\n}\n\nexport class ToolsStatisticsFormatTickX {\n    public static Yearly(x): string {\n        return Number(x).toFixed(0);\n    }\n\n    public static Monthly(x): string {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        return months[x];\n    }\n\n    public static Daily(x): string {\n        return Number(x).toFixed(0);\n    }\n\n    public static Hourly(x): string {\n        x = Number(x);\n        return x <= 12 ? x + ' am' : (x - 12) + ' pm';\n    }\n}\nexport class ToolsStatisticsDecade {\n    public name: string;\n    public value: any;\n\n    public constructor(value: any, name: string) {\n        this.name = name;\n        this.value = value;\n    }\n}\n\nexport interface IStatisticsService {\n    formatXvalues(x: Date, category: string): chartValue;\n    fillLineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date, category: string): chartValue[];\n    fillLast24LineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date): chartValue[];\n    getStatisticsLastActionDate(statistics: StatCounterSet[], statKey: string): Date;\n    getStatisticsCount(statistics: StatCounterSet[], statKey: string): number;\n}\n\nexport interface IStatisticsProvider extends ng.IServiceProvider {\n\n}\n\nclass StatisticsService implements IStatisticsService {\n\n    public constructor() {\n        \"ngInject\";\n\n    }\n\n    public getStatisticsCount(statistics: StatCounterSet[], statKey: string): number {\n        let count: number = 0;\n\n        _.each(statistics, (item: StatCounterSet) => {\n            let key = item.counter.split(\".\").pop();\n            if (key == statKey) {\n\n                _.each(item.values, function (a: any) {\n                    count += a.value;\n                })\n            }\n        });\n\n        return count;\n    }\n\n    public getStatisticsLastActionDate(statistics: StatCounterSet[], statKey: string): Date {\n        let date: any = { Day: 0, Hour: 0, Month: 0, Year: 0 };\n\n        _.each(statistics, (item: StatCounterSet) => {\n            let key = item.counter.split(\".\").pop();\n            if (key == statKey) {\n                _.each(item.values, (a: any) => {\n                    if (date.year < a.year) {\n                        date = a;\n                    } else if (date.year == a.year && date.month < a.month) {\n                        date = a;\n                    } else if (date.year == a.year && date.month == a.month && date.day < a.day) {\n                        date = a;\n                    } else if (date.year == a.year && date.month == a.month && date.day == a.day && date.hour < a.hour) {\n                        date = a;\n                    }\n                });\n            }\n        });\n\n        if (date.year) {\n            return moment.utc([date.year, date.month - 1, date.day, date.hour]).toDate();\n        } else {\n            return null;\n        }\n    }\n\n    public formatXvalues(x: Date, category: string): chartValue {\n        if (x === undefined || !category) return;\n\n        return x[ToolsStatisticsFormatX[category]]();\n    }\n\n    public fillLast24LineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date): chartValue[] {\n        let from = moment.utc(dateFrom);\n        let size: number;\n\n        var sHour = moment(from).hour(),\n            sDay = moment(from).date(),\n            sMonth = moment(from).month(),\n            sYear = moment(from).year(),\n            values = new Array<chartValue>();\n\n        size = 25;\n\n        let startHours = dateFrom.getUTCHours();\n        let h: number;\n        for (h = 0; h < size; h++) {\n            sHour = (startHours + h) % 24;\n            let current = moment.utc([sYear, sMonth, sDay, 0]).add(startHours + h, 'hours');\n\n            let statistic = _.find(statistics, (point) => {\n                return sHour == point.hour && current.date() == point.day && current.month() + 1 == point.month && current.year() == point.year\n            });\n            let value = statistic ? statistic.value : 0;\n\n            if (startHours === 0) {\n                values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, sDay, sHour]).toDate(), 'Hourly'), value));\n            } else {\n                values.push(new chartValue(startHours + h - 24, value));\n            }\n\n        }\n\n        return values;\n    }\n\n    public fillLineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date, category: string): chartValue[] {\n        let from = moment.utc(dateFrom);\n        let to = moment.utc(dateTo);\n        let size: number;\n\n        console.log('st2', statistics);\n\n        let sHour = moment(from).hour(),\n            sDay = moment(from).date(),\n            sMonth = moment(from).month(),\n            sYear = moment(from).year(),\n            values = new Array<chartValue>();\n\n        switch (category) {\n            case StatisticsFilter.Hourly:\n                size = to.diff(from, 'hours') + 1;\n                if (size > 24) size = 24;\n                if (size <= 0) break;\n\n                let startHours = dateFrom.getUTCHours();\n                let h: number;\n                for (h = 0; h < size; h++) {\n                    sHour = (startHours + h) % 24;\n                    let current = moment.utc([sYear, sMonth, sDay, 0]).add(startHours + h, 'hours');\n                    let statistic = _.find(statistics, (point) => {\n                        return sHour == point.hour && current.date() == point.day && current.month() + 1 == point.month && current.year() == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n\n                    if (startHours === 0) {\n                        values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, sDay, sHour]).toDate(), category), value));\n                    } else {\n                        values.push(new chartValue(startHours + h - 24, value));\n                    }\n                }\n                break;\n            case StatisticsFilter.Daily:\n                size = to.diff(from, 'days') + 1;\n                sHour = null;\n                let day: number;\n                for (day = sDay; day < sDay + size; day++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return day == point.day && sMonth + 1 == point.month && sYear == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, day]).toDate(), category), value));\n                }\n                break;\n            case StatisticsFilter.Monthly:\n                sHour = null;\n                sDay = null;\n                for (sMonth = 0; sMonth < 12; sMonth++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return sMonth + 1 == point.month && sYear == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth]).toDate(), category), value));\n                }\n                break;\n            case StatisticsFilter.Yearly:\n                let i: number;\n                size = to.diff(from, 'years') + 1;\n                sHour = null;\n                sDay = null;\n                sMonth = null;\n                for (i = sYear; i < sYear + size + 1; i++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return i == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([i]).toDate(), category), value));\n                }\n                break;\n        }\n\n        return values;\n    }\n\n}\n\nclass StatisticsProvider implements IStatisticsProvider {\n    private _service: StatisticsService;\n\n    constructor() {\n    }\n\n    public $get() {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new StatisticsService();\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipStatisticsService', [])\n    .provider('pipStatistics', StatisticsProvider);\n","(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('counters/CountersPage.html',\n    '<pip-counters-panel></pip-counters-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('counters/CountersPanel.html',\n    '<table class=\"table table-striped table-hover bm0 pip-admin-counters-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\"><thead><tr><th class=\"pip-admin-small-td\">Type</th><th>Name</th><th>Count</th></tr></thead></table><div class=\"pip-admin-counters pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-admin-read-error\\':$ctrl.error}\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.counters\" pip-scroll-container=\"\\'.pip-admin-counters\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr ng-repeat=\"counter in $ctrl.counters\"><td class=\"pip-admin-small-td\">{{counter.type}}</td><td>{{counter.name}}</td><td>{{counter.count}}</td></tr></tbody></table></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('errors/ErrorsPage.html',\n    '<pip-errors-panel></pip-errors-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('errors/ErrorsPanel.html',\n    '<div class=\"pip-errors\"><div class=\"pip-page-errors\" ng-if=\"$ctrl.error\"><span class=\"pip-error-text text-overflow color-error flex\">{{::$ctrl.errorText | translate}}</span> <span class=\"pointer layout-row layout-align-start-center flex-fixed\" ng-click=\"$ctrl.onClickErrorDetails()\"><md-icon md-svg-icon=\"icons:info-circle\" class=\"rm16 color-error\"></md-icon><span class=\"flex text-body2 color-error\">{{:: \\'DETAILS\\' | translate }}</span></span></div><div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp16 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" class=\"pip-search-panel-primary\" pip-on-search=\"$ctrl.onSearchErrors()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"pip-search-panel-secondary layout-row layout-align-start-center\"><div class=\"flex\"></div><div class=\"pip-filter-text\">Autorefresh</div><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.refresh\" ng-disabled=\"$ctrl.updating\" md-on-close=\"$ctrl.onRefreshChange()\"><md-option ng-value=\"minutes\" ng-repeat=\"minutes in $ctrl.refreshTimes\">{{::minutes}} mins</md-option></md-select></md-input-container></div></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" aria-label=\"add\" ng-hide=\"$ctrl.loading\" ng-disabled=\"$ctrl.updating\" ng-click=\"$ctrl.onRefreshClick()\"><md-icon md-svg-icon=\"icons:reload\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.updating\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-errors-header\" ng-if=\"$ctrl._pipMedia(\\'gt-xs\\') && $ctrl.state == \\'data\\'\"><thead><tr><th class=\"pip-big-td\">Error</th><th class=\"pip-small-medium-td\">First</th><th class=\"pip-small-medium-td\">Last</th><th class=\"pip-small-td\">Count</th><th class=\"pip-small-td p4\"></th></tr></thead></table><div class=\"pip-errors-container pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-read-error\\':$ctrl.error}\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover bm0\" ng-if=\"$ctrl._pipMedia(\\'gt-xs\\')\"><tbody><tr ng-repeat-start=\"errorType in $ctrl.errors track by $index\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><td class=\"pip-big-td text-overflow\">{{errorType.ErrorType}}</td><td class=\"pip-small-medium-td text-overflow\">{{ errorType.first }}</td><td class=\"pip-small-medium-td text-overflow\">{{ errorType.last }}</td><td class=\"pip-small-td\">{{ errorType.count }}</td><td class=\"pip-small-td text-center p4\"><md-button class=\"md-icon-button m0 p0\" aria-label=\"expand\"><md-icon md-svg-icon=\"icons:chevron-down\" ng-class=\"{\\'error-expand\\': errorType.collapsed, \\'error-not-expand\\': !errorType.collapsed }\"></md-icon></md-button></td></tr><tr ng-repeat-end=\"\" ng-if=\"errorType.collapsed\"><td class=\"p0 error-messages\" colspan=\"5\"><table class=\"table table-striped table-hover bm0\"><tfoot ng-if=\"errorType.items.length > $ctrl.showMessagesLimit\"><tr><td colspan=\"4\"><a class=\"lm16\" ng-click=\"$ctrl.onShowMore(errorType)\" ng-class=\"{\\'rm16\\': errorType.show > $ctrl.showMessagesLimit}\" ng-show=\"errorType.show < errorType.items.length\">Show More ...</a> <a ng-click=\"$ctrl.onShowLess(errorType)\" ng-show=\"errorType.show > $ctrl.showMessagesLimit\">Show Less ...</a></td></tr></tfoot><tbody><tr ng-repeat=\"item in errorType.items | limitTo:errorType.show\" class=\"active .error-message\" ng-click=\"$ctrl.onErrorsDetails(item)\"><td class=\"pip-big-td text-overflow\">{{ item.message }}</td><td class=\"pip-small-medium-td text-overflow\">{{ item.time}}</td><td class=\"pip-small-medium-td text-overflow\">{{ item.correlation_id }}</td><td class=\"pip-small-td\"></td><td class=\"pip-small-td text-center p4\"><md-button class=\"md-icon-button m0 p0\" aria-label=\"show-details\"><md-icon class=\"pointer\" md-svg-icon=\"icons:search\"></md-icon></md-button></td></tr></tbody></table></td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list\" ng-if=\"$ctrl._pipMedia(\\'xs\\')\" style=\"overflow-x: hidden\"><md-list-item class=\"pip-ref-list-item\" ng-class=\"{\\'divider-bottom\\': !$last}\" md-ink-ripple=\"\" ng-repeat-start=\"errorType in $ctrl.errors\"><div class=\"pip-content flex\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><div class=\"pip-title text-overflow\">{{errorType.items[0].Error.Type}}</div><p class=\"pip-subtitle text-overflow tm4\">{{errorType.first }} • {{errorType.last}} • {{errorType.count}}</p></div><div class=\"pip-pic flex-fixed\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><md-icon md-svg-icon=\"icons:chevron-down\" ng-class=\"{\\'error-expand\\': errorType.collapsed, \\'error-not-expand\\': !errorType.collapsed }\"></md-icon></div></md-list-item><div ng-repeat-end=\"\" ng-if=\"errorType.collapsed\"><md-list-item class=\"pip-ref-list-item error-messages\" ng-class=\"{\\'divider-bottom\\': !$last}\" md-ink-ripple=\"\" ng-repeat=\"item in errorType.items | limitTo:errorType.show\"><div class=\"pip-content flex\" ng-click=\"$ctrl.onErrorsDetails(item)\"><div class=\"pip-title text-overflow\">{{ item.message }}</div><p class=\"pip-subtitle text-overflow tm4\">{{ item.correlation_id }} <span ng-show=\"item.correlation_id && item.time\">•</span> {{ item.time }}</p></div><div class=\"pip-pic flex-fixed\" ng-click=\"$ctrl.onErrorsDetails(item)\"><md-icon md-svg-icon=\"icons:search\"></md-icon></div></md-list-item><div class=\"h48 layout-align-start-center layout-row divider-bottom\" ng-if=\"errorType.items.length > $ctrl.showMessagesLimit\"><a class=\"lm16\" ng-click=\"$ctrl.onShowMore(errorType)\" ng-class=\"{\\'rm16\\': errorType.show > $ctrl.showMessagesLimit}\" ng-show=\"errorType.show < errorType.items.length\">Show More ...</a> <a ng-click=\"$ctrl.onShowLess(errorType)\" ng-show=\"errorType.show > $ctrl.showMessagesLimit\">Show Less ...</a></div></div></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty\" ng-if=\"$ctrl.state == \\'empty\\' || $ctrl.state == \\'loading\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no errors…<br>Try again later <span ng-show=\"$ctrl.searchQuery\">or change filter options</span></div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'loading\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading errors<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('events/EventsPage.html',\n    '<pip-events-panel></pip-events-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('events/EventsPanel.html',\n    '<div ng-show=\"$ctrl.error\" class=\"pip-page-errors\"><span class=\"pip-error-text color-error text-overflow flex\">{{$ctrl.error}}</span><md-icon md-svg-icon=\"icons:warn-circle\" class=\"color-error\"></md-icon></div><div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.refreshEvents()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" ng-click=\"$ctrl.refreshEvents()\" aria-label=\"add\"><md-icon md-svg-icon=\"icons:reload\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.updating && $ctrl.state == \\'data\\'\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-admin-events-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state == \\'data\\'\"><thead><tr><th class=\"pip-admin-small-td\">Severity</th><th ng-class=\"$ctrl.pipMedia(\\'gt-md\\') ? \\'pip-admin-medium-td\\': \\'pip-admin-small-medium-td\\'\">ID</th><th class=\"pip-admin-small-medium-td\">Time</th><th class=\"pip-admin-small-medium-td\">Type</th><th class=\"pip-admin-medium-td\">Source</th><th>Message</th></tr></thead></table><div class=\"pip-admin-events pip-scroll-y pip-scroll\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\" pip-infinite-scroll=\"$ctrl.readEvents()\" pip-scroll-container=\"\\'.pip-admin-events\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr class=\"w-streach\" ng-repeat=\"event in $ctrl.events\"><td class=\"pip-admin-small-td\">{{event.severity}}</td><td class=\"pip-admin-break\" ng-class=\"$ctrl.pipMedia(\\'gt-md\\') ? \\'pip-admin-medium-td\\': \\'pip-admin-small-medium-td\\'\">{{event.id}}</td><td class=\"pip-admin-small-medium-td\">{{event.time }}</td><td class=\"pip-admin-small-medium-td\">{{event.type}}</td><td class=\"pip-admin-medium-td\">{{event.source}}</td><td class=\"\">{{event.message}}</td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state == \\'data\\'\" style=\"overflow-x: hidden\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"event in $ctrl.events\"><div class=\"pip-pic layout-row layout-align-center-center\"><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"event.severity == 0\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Critical</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"event.severity == 1\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Important</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-circle\" ng-if=\"event.severity == 2\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Informational</md-tooltip></md-icon></div><div class=\"pip-content\"><div class=\"text-body2 text-overflow\">{{event.correlation_id}} <span>•</span> {{event.time }} <span ng-if=\"event.Type\">•</span> {{event.type}}</div><div class=\"text-body2\">{{event.component}}</div><p class=\"pip-subtitle\">{{event.message}}</p></div></md-list-item></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty pip-scroll\" ng-if=\"$ctrl.state == \\'progress\\' || $ctrl.state == \\'empty\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no events right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading events<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('logging/LoggingPage.html',\n    '<pip-logging-panel></pip-logging-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('logging/LoggingPanel.html',\n    '<div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.localSearch\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"flex layout-row layout-align-start-center\"><div class=\"flex\"></div><div class=\"pip-filter-text\">Autorefresh</div><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.refresh\" md-on-close=\"$ctrl.onRefreshChange()\"><md-option ng-value=\"minutes\" ng-repeat=\"minutes in $ctrl.refreshTimes\">{{::minutes}} sec</md-option></md-select></md-input-container></div></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" aria-label=\"add\" ng-click=\"$ctrl.playStopAutoUpdate()\"><md-icon md-svg-icon=\"icons:play\" ng-if=\"!$ctrl.autoUpdate\"></md-icon><md-icon md-svg-icon=\"icons:pause\" ng-if=\"$ctrl.autoUpdate\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state() != \\'progress\\'\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-admin-loggings-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state() != \\'empty\\'\"><thead><tr><th class=\"pip-admin-small-td\">level</th><th class=\"pip-admin-medium-td\">Time</th><th class=\"pip-admin-medium-td\">Correlation ID</th><th>Message</th><th class=\"pip-admin-small-td\"></th></tr></thead></table><div class=\"pip-admin-loggings pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-admin-read-error\\':$ctrl.error}\" ng-if=\"$ctrl.state() != \\'empty\\'\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.loggings && $ctrl.state() != \\'empty\\'\" pip-infinite-scroll=\"$ctrl.readLogging()\" pip-scroll-container=\"\\'.pip-admin-loggings\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr ng-repeat=\"trace in $ctrl.loggings()\"><td class=\"pip-admin-small-td\"><md-icon md-svg-icon=\"icons:menu\" ng-if=\"trace.level == 6\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Trace</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:bug\" ng-if=\"trace.level == 5\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Debug</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle-outline\" ng-if=\"trace.level == 4\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Info</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle\" ng-if=\"trace.level == 3\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Warning</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"trace.level == 2\" class=\"color-warn\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Error</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"trace.level == 1\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Fatal</md-tooltip></md-icon></td><td class=\"pip-admin-medium-td\">{{trace.time}}</td><td class=\"pip-admin-medium-td\">{{trace.correlation_id}}</td><td class=\"\"><div class=\"pip-admin-trace-message\">{{trace.message}}</div></td><td class=\"pip-admin-small-td tp4 bp4\"><md-button class=\"md-icon-button\" ng-click=\"$ctrl.onErrorDetails(trace)\" aria-label=\"error\" ng-if=\"trace.error\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list tp0\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state() == \\'data\\'\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"trace in $ctrl.loggings\"><div class=\"pip-pic flex-fixed lm16 layout-row layout-align-center-center\"><md-icon md-svg-icon=\"icons:menu\" ng-if=\"trace.level == 6\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Trace</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:bug\" ng-if=\"trace.level == 5\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Debug</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle-outline\" ng-if=\"trace.level == 4\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Info</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle\" ng-if=\"trace.level == 3\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Warning</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"trace.level == 2\" class=\"color-warn\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Error</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"trace.level == 1\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Fatal</md-tooltip></md-icon></div><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\">{{trace.time}} <span ng-if=\"trace.CorrelationId\">•</span> {{trace.correlation_id}}</div><p class=\"pip-subtitle pip-trace-message\">{{trace.message}}</p></div><div class=\"pip-pic rm0\"><md-button class=\"md-icon-button flex-fixed\" ng-if=\"trace.Error\" ng-click=\"$ctrl.onErrorDetails(trace)\" aria-label=\"error\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div></md-list-item></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty pip-scroll\" ng-if=\"$ctrl.state() == \\'empty\\' || $ctrl.state() == \\'progress\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state() == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-show=\"$ctrl.state() == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading traces<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/AddSettingsKeyDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column bb-settings-key-dialog\" width=\"400\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-body pip-scroll p16 bp0\"><h3 class=\"tm0\">{{$ctrl.title}}</h3><md-input-container class=\"md-block flex bm0\"><label>Key</label> <input ng-model=\"$ctrl.key.name\"></md-input-container><md-input-container class=\"md-block flex bm0\"><label>Value</label> <textarea ng-model=\"$ctrl.key.data\"> </textarea></md-input-container></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\" ng-disabled=\"!$ctrl.key.name || !$ctrl.key.data\">Ok</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/AddSettingsSectionDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column pip-scroll\" width=\"400\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-body\"><h3 class=\"tm0\">New section</h3><md-input-container class=\"md-block flex bm0\"><label>Section name</label> <input ng-model=\"$ctrl.sectionName\"></md-input-container></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\" ng-disabled=\"!$ctrl.sectionName\">Ok</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/SettingsPage.html',\n    '<pip-settings-panel></pip-settings-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/SettingsPanel.html',\n    '<div class=\"pip-main-menu pip-settings\" ng-class=\"{\\'pip-single-content\\': $ctrl.details}\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\"><div class=\"pip-menu\"><div class=\"pip-filter-row layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><div ng-show=\"$ctrl.error\" class=\"pip-page-errors\"><span class=\"pip-error-text color-error flex\">{{$ctrl.error}}</span><md-icon md-svg-icon=\"icons:warn-circle\" class=\"color-error\"></md-icon></div><div class=\"pip-list-container pip-scroll\" style=\"height: calc(100% - 48px);\" ng-class=\"{\\'pip-menu-empty\\': $ctrl.state == \\'empty\\'}\"><md-list class=\"pip-simple-list tp0\" pip-selected=\"$ctrl.selectIndex\" pip-select=\"$ctrl.selectItem($event.index)\"><md-list-item class=\"pip-simple-list-item pip-selectable {{ $ctrl.selectIndex == $index ? \\'selected\\' : \\'\\' }}\" md-ink-ripple=\"\" ng-repeat=\"section in $ctrl.settingsSections\" ng-show=\"!section.hide\"><p class=\"pip-title text-body2\">{{ section.name }}</p></md-list-item></md-list></div></div><div class=\"pip-content-container\"><div><pip-document><div class=\"pip-header p0\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\') && $ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover bm0\"><thead><tr><th class=\"lp16\">Key</th><th class=\"pip-settings-value\">Value</th><th style=\"width: 48px\"></th></tr></thead></table></div><div class=\"pip-body p0 layout-column layout-align-center-center\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\') && $ctrl.state != \\'data\\'\"><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll w-stretch\" ng-if=\"$ctrl.state == \\'empty\\'\"><div class=\"pip-empty\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div></div><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll w-stretch\" ng-if=\"$ctrl.state == \\'progress\\'\"><div class=\"pip-empty\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading settings<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div></div><div class=\"pip-body p0\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover\" style=\"margin-bottom: 72px\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\')\"><tbody><tr ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\" ng-if=\"key != \\'toJSON\\'\"><td class=\"pip-settings-key lp16\" ng-bind-html=\"key\"></td><td class=\"pip-settings-value\"><div class=\"pip-settings-key\" ng-if=\"!key.includes(\\'Utc\\')\">{{ value }}</div><div class=\"pip-settings-key\" ng-if=\"key.includes(\\'Utc\\')\">{{ value }}</div></td><td class=\"tp4 bp4\" style=\"width: 48px\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"vdots\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\" aria-label=\"update\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button aria-label=\"delete\">Delete</md-button></md-menu-item></md-menu-content></md-menu></td></tr></tbody></table><div ng-if=\"$ctrl.pipMedia(\\'md\\') && $ctrl.state == \\'data\\'\"><div class=\"pip-menu\" style=\"width: 100% !important;\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-if=\"key != \\'toJSON\\'\" ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\"><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\" ng-bind-html=\"key\"></div><p class=\"pip-subtitle\">{{value}}</p></div><div class=\"pip-pic rm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"vdots\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\" aria-label=\"update\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button aria-label=\"delete\">Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list><div style=\"margin-bottom: 72px\"></div></div></div></div></div><md-fab-speed-dial md-direction=\"up\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\'\" class=\"md-fab-bottom-right md-fling\" pip-fab-tooltip-visibility=\"opened\" pip-fab-show-tooltip=\"showTooltip\" md-open=\"opened\"><md-fab-trigger><md-button aria-label=\"menu\" class=\"md-fab md-accent\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button></md-fab-trigger><md-fab-actions><md-button aria-label=\"New section\" class=\"md-fab md-accent md-mini pip-fab-mini md-raised\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addSection()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Section</md-tooltip><md-icon md-svg-icon=\"icons:pie-chart\"></md-icon></md-button><md-button aria-label=\"New key\" class=\"md-fab md-accent md-mini md-raised pip-fab-mini\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addKey()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Key</md-tooltip><md-icon md-svg-icon=\"icons:submenu\"></md-icon></md-button></md-fab-actions></md-fab-speed-dial></pip-document></div></div></div><md-fab-speed-dial md-direction=\"up\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\' && !$ctrl.pipMedia(\\'gt-sm\\')\" class=\"md-fab-bottom-right md-fling\" pip-fab-tooltip-visibility=\"opened\" pip-fab-show-tooltip=\"showTooltip\" md-open=\"opened\"><md-fab-trigger><md-button aria-label=\"menu\" class=\"md-fab md-accent\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button></md-fab-trigger><md-fab-actions><md-button aria-label=\"New section\" class=\"md-fab md-accent md-mini pip-fab-mini md-raised\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addSection()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Section</md-tooltip><md-icon md-svg-icon=\"icons:pie-chart\"></md-icon></md-button><md-button aria-label=\"New key\" class=\"md-fab md-accent md-mini md-raised pip-fab-mini\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addKey()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Key</md-tooltip><md-icon md-svg-icon=\"icons:submenu\"></md-icon></md-button></md-fab-actions></md-fab-speed-dial><pip-dropdown pip-actions=\"$ctrl.settingsSections\" pip-active-index=\"$ctrl.selectIndex\" pip-change=\"$ctrl.getSelectDropdown()\" ng-if=\"!$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state != \\'progress\\'\"></pip-dropdown><div class=\"pip-main-menu pip-settings\" ng-if=\"!$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state != \\'progress\\'\"><div class=\"pip-menu\" style=\"width: 100% !important;\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\" ng-if=\"key != \\'toJSON\\'\"><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\" ng-bind-html=\"key\"></div><p class=\"pip-subtitle\">{{value}}</p></div><div class=\"pip-pic rm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button>Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list><div style=\"margin-bottom: 72px\"></div></div></div></div><div class=\"layout-column layout-align-center-center flex pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><div class=\"pip-empty\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading settings<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute; z-index: 100\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state != \\'progress\\'\"></md-progress-linear>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics/StatisticsPage.html',\n    '<pip-statistics-panel></pip-statistics-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics/StatisticsPanel.html',\n    '<div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.searchClick()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"pip-search-panel-primary flex layout-row layout-align-start-center\"><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.filter\"><md-option ng-value=\"opt\" ng-click=\"$ctrl.refreshStatistics(opt)\" ng-repeat=\"opt in $ctrl.filters\">{{::opt}}</md-option></md-select></md-input-container><div class=\"pip-filter-text\" ng-if=\"$ctrl.filter !== $ctrl.TOTAL\">for</div><div ng-if=\"$ctrl.filter === \\'Hourly\\'\"><md-datepicker ng-model=\"$ctrl.hourlyDate\" ng-change=\"$ctrl.refreshStatistics()\"></md-datepicker></div><div ng-if=\"$ctrl.filter === \\'Daily\\'\"><pip-date-range pip-date-range-type=\"weekly\" ng-model=\"$ctrl.dailyDate\" pip-changed=\"$ctrl.updateDate()\"></pip-date-range></div><div ng-if=\"$ctrl.filter === \\'Monthly\\'\"><pip-date-range pip-date-range-type=\"yearly\" ng-model=\"$ctrl.monthlyDate\" pip-changed=\"$ctrl.updateDate()\"></pip-date-range></div><div ng-if=\"$ctrl.filter === \\'Yearly\\'\"><md-input-container class=\"md-block\"><md-select ng-model=\"$ctrl.yearlyName\" class=\"flex\"><md-option ng-repeat=\"decade in $ctrl.decades\" ng-value=\"decade.name\" ng-click=\"$ctrl.updateDecade(decade.value)\">{{ decade.name }}</md-option></md-select></md-input-container></div><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"rm0\"><md-icon md-svg-icon=\"icons:arrow-left\" ng-click=\"$ctrl.previousStep()\"></md-icon></md-button><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"lm0 rm0\"><md-icon md-svg-icon=\"icons:date\" ng-click=\"$ctrl.today()\"></md-icon></md-button><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"lm0\"><md-icon md-svg-icon=\"icons:arrow-right\" ng-click=\"$ctrl.nextStep()\"></md-icon></md-button></div></div><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state != \\'progress\\'\"></md-progress-linear><pip-simple ng-if=\"$ctrl.state === \\'data\\'\"><div class=\"p16\"><div ng-repeat=\"statistics in $ctrl.statisticsGroups\" ng-if=\"$ctrl.filter !== $ctrl.TOTAL\" style=\"margin-bottom: 24px;\"><h4>{{ statistics.group }}</h4><pip-line-chart pip-series=\"statistics.series\" pip-inter-legend=\"true\" ng-if=\"!statistics.singleChartValue\" pip-x-tick-format=\"$ctrl.chartXTickFormat\"></pip-line-chart><pip-bar-chart pip-series=\"statistics.series\" pip-inter-legend=\"true\" ng-if=\"statistics.singleChartValue\" pip-x-tick-format=\"$ctrl.chartXTickFormat()\"></pip-bar-chart></div><div ng-repeat=\"statistics in $ctrl.statisticsGroups\" ng-if=\"$ctrl.filter === $ctrl.TOTAL\" ng-class=\"{\\'w-stretch\\': !$ctrl.pipMedia(\\'gt-sm\\')}\" style=\"display: inline-block; width: 295px; height:330px; margin-bottom: 24px; margin-right: 16px;\"><h4>{{ statistics.group }}</h4><pip-pie-chart pip-series=\"statistics.series\" pip-centered=\"true\" pip-donut=\"true\" pip-size=\"250\"></pip-pie-chart></div></div></pip-simple><div class=\"layout-column layout-align-center-center flex pip-admin-empty\" ng-if=\"$ctrl.state == \\'empty\\' || $ctrl.state == \\'progress\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading statistics<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/search/SearchRow.html',\n    '<div class=\"pip-search layout-row layout-align-start-center flex\"><md-button class=\"md-icon-button pip-search-button flex-fixed\" ng-click=\"searchRow.onSearch()\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><md-input-container md-no-float=\"\" class=\"md-block tm8 bm8\" ng-disabled=\"searchRow.isDisable()\"><input ng-model=\"searchRow.localSearch\" placeholder=\"{{::searchRow.placeholder | translate}}\" ng-keypress=\"searchRow.onKeyPress($event)\" ng-change=\"searchRow.onSearch()\"></md-input-container><md-button class=\"md-icon-button flex-fixed pip-search-clear-button\" ng-if=\"searchRow.localSearch != \\'\\' && searchRow.localSearch\" ng-click=\"searchRow.onClear()\" n=\"\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:delete\"></md-icon></md-button></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-admin-system-html.min.js.map\n"]}