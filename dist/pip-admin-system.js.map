{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/common/pipTimeZone.ts","src/common/search/SearchRow.ts","src/counters/CountersPage.ts","src/counters/CountersPanel.ts","src/data/CountersDataService.ts","src/data/ErrorDescription.ts","src/data/ErrorsMessages.ts","src/data/EventsDataService.ts","src/data/LogMessage.ts","src/data/LoggingDataService.ts","src/data/SettingsDataService.ts","src/data/StatCounters.ts","src/data/StatisticsDataService.ts","src/errors/ErrorsPage.ts","src/errors/ErrorsPanel.ts","src/events/EventsPage.ts","src/events/EventsPanel.ts","src/index.ts","src/logging/LoggingModel.ts","src/logging/LoggingPage.ts","src/logging/LoggingPanel.ts","src/logging/LoggingViewModel.ts","src/rest/CountersResources.ts","src/rest/EventsResources.ts","src/rest/LoggingResources.ts","src/rest/SettingsResources.ts","src/rest/StatisticsResources.ts","src/settings/AddSettingsKeyController.ts","src/settings/AddSettingsKeyService.ts","src/settings/AddSettingsSectionController.ts","src/settings/AddSettingsSectionService.ts","src/settings/SettingsPage.ts","src/settings/SettingsPanel.ts","src/statistics/StatisticsPage.ts","src/statistics/StatisticsPanel.ts","src/statistics/StatisticsService.ts","temp/pip-admin-system-html.min.js"],"names":[],"mappings":"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":"pip-admin-system.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwdGltZXpvbmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzcmMvY29tbW9uL3BpcFRpbWVab25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIiXX0=","class SearchRowController {\n    private _element;\n    private _scope: angular.IScope;\n    private _timeout: ng.ITimeoutService;\n    private pipOnSearch: Function;\n    private ngDisable: Function;\n    public placeholder: string;\n\n    public localSearch: string;\n    \n    constructor(\n        $element: any,\n        $attrs: angular.IAttributes,\n        $scope: angular.IScope,\n        $timeout: ng.ITimeoutService\n    ) {\n        \"ngInject\";\n\n        $element.addClass('pip-search-row');\n        $element.addClass('flex');\n\n        this._element = $element;\n        this._scope = $scope;\n        this._timeout = $timeout;\n\n        this.pipOnSearch = $scope['onSearch'] ?  $scope['onSearch'] : null;\n\n        this.placeholder = $scope['placeholder'] ?  $scope['placeholder'] : 'SEARCH_ROW_PLACEHOLDER';\n\n        $scope.$watch('search', (search: string) => {\n            if (search != this.localSearch) {\n                this.localSearch = search;\n            }\n        });\n    }\n\n    public isDisable(): boolean {\n        this.ngDisable = this._scope['ngDisabled'] ? this._scope['ngDisabled'] : null;\n\n        return _.isFunction(this.ngDisable) && this.ngDisable();\n    }\n\n    public onSearch(): void {\n        if (this.isDisable()) {\n            return;\n        }\n        this._scope['search'] = this.localSearch;        \n\n        this._timeout(() => {\n            if (_.isFunction(this.pipOnSearch)) {\n                this.pipOnSearch();\n            }            \n        }, 200);\n    }\n    \n    public onClear() {\n        if (this.isDisable()) {\n            return;\n        }\n\n        this.localSearch = null;\n        this.onSearch();        \n    }\n\n    public onKeyPress = function (event: JQueryKeyEventObject): void {\n        if (event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSearch()\n        }\n    } \n\n}\n\n(() => {\n    function SearchRowDirective() {\n        return {\n            restrict: 'E',\n            controller: SearchRowController,\n            controllerAs: 'searchRow',\n            scope: {\n                search: '=pipSearch',\n                onSearch: '&pipOnSearch',\n                placeholder: '=pipPlaceholder',\n                ngDisabled: '&'\n            },\n            templateUrl: 'common/search/SearchRow.html'\n        };\n    }\n\n    function declareSearchRowResources(pipTranslateProvider: pip.services.ITranslateProvider) {\n        pipTranslateProvider.translations('en', {\n            SEARCH_ROW_PLACEHOLDER: 'Search ...',\n\n        });\n        pipTranslateProvider.translations('ru', {\n            SEARCH_ROW_PLACEHOLDER: 'Найти ...',\n        });\n    }\n\n    angular\n        .module('pipDirective', [])\n        .directive('pipSearchRow', SearchRowDirective)\n        .config(declareSearchRowResources);\n\n})();","class CountersController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Counters';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureCountersRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('counters', {\n            url: '/counters',\n            controller: CountersController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'counters/CountersPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipCountersPage', ['pipNav'])\n        .config(configureCountersRoute)\n\n})();\n","import { ICountersDataService } from '../data/ICountersDataService';\n\ninterface ICountersPanelBindings {\n    [key: string]: any;\n}\n\nconst CountersPanelBindings: ICountersPanelBindings = {\n\n}\n\nclass CountersPanelChanges implements ng.IOnChangesObject, ICountersPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass CountersPanelController {\n    public counters: any[];\n\n    constructor(\n        private $state: ng.ui.IStateService,\n        private pipCountersData: ICountersDataService,\n        public pipMedia: pip.layouts.IMediaService) {\n        this.readCounters();\n    }\n\n    private readCounters() {\n\n        this.pipCountersData.readCounters(null, (results) => { this.counters = results.data; console.log(this.counters, results); });\n    }\n}\n\n(() => {\n    angular\n        .module('pipCountersPanel', [])\n        .component('pipCountersPanel', {\n            bindings: CountersPanelBindings,\n            templateUrl: 'counters/CountersPanel.html',\n            controller: CountersPanelController\n        })\n\n})();\n","import { ICountersDataService, ICountersDataProvider } from './ICountersDataService';\n\nclass CountersData implements ICountersDataService {\n    private RESOURCE: string = 'counters'; \n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readCounters(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('counters').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n   \n}\n\nclass CountersDataProvider implements ICountersDataProvider {\n    private _service: ICountersDataService;\n    private RESOURCE: string = 'counters'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n        \n        if (this._service == null) {\n            this._service = new CountersData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipCountersData', ['pipRest'])\n    .provider('pipCountersData', CountersDataProvider);\n\n\n","export class ErrorDescription {\n\tpublic type: string;\n\tpublic category: string;\n\tpublic status: number;\n\tpublic code: string;\n\tpublic message: string;\n\tpublic details: any;\n\tpublic correlation_id: string;\n\tpublic cause: string;\n\tpublic stack_trace: string;\n}","import {LogMessage} from './LogMessage';\n\nexport class ErrorLogMessage extends LogMessage {\n    MomentTimeUtc: any;\n}\n\nexport class ErrorMessageRecord {\n    items: ErrorLogMessage[];\n    ErrorType: string;\n    first: any;\n    last: any;\n    count: number;\n    collapsed: boolean;\n    show: number;\n}\n\nexport interface IErrorMessages {\n    [key: string]: ErrorMessageRecord\n}\n// todo нужны default значения\nexport interface IConfigErrors {\n    start: number; // например тут при инициализации будет 0 и тд\n    pageSize: number;\n    refresh: number;\n    defaultSearch: string;\n    refreshEvent: string;\n    refreshTimes: number[];\n}\n\nexport class ConfigErrors implements IConfigErrors {\n    readonly start: number = 0;\n    readonly pageSize: number = 100;\n    readonly refresh: number = 3;\n    readonly defaultSearch: string = '';\n    readonly refreshEvent: string = 'TOOLS.ERRORS_REFRESH';\n    readonly refreshTimes: number[] = [1, 2, 3, 5, 10];\n}\n\nexport class ErrorsMessagesVisability {\n    static Limit: number = 50;\n    static Step: number = 50;\n}\n","import { IEventsDataService, IEventsDataProvider } from './IEventsDataService';\n\nclass EventsData implements IEventsDataService {\n    private RESOURCE: string = 'events';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n    public readEvents(params: any, start: number = 0, take: number = 100, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        if (!params) params = {};\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('events').get(\n            params,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass EventsDataProvider implements IEventsDataProvider {\n    private _service: IEventsDataService;\n    private RESOURCE: string = 'events'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new EventsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipEventsData', ['pipRest'])\n    .provider('pipEventsData', EventsDataProvider);\n\n\n","import { ErrorDescription } from './ErrorDescription';\n\nexport enum LogLevel {\n    None = 0,\n    Fatal = 1,\n    Error = 2,\n    Warn = 3,\n    Info = 4,\n    Debug = 5,\n    Trace = 6\n}\n\n\nexport class LogMessage {\n    public time: Date;\n    public source: string;\n    public level: LogLevel;\n    public correlation_id: string;\n    public error: ErrorDescription;\n    public message: string;\n}\n\nexport class LogMessages {\n    data: LogMessage[];\n    total: number;\n}","import { ILoggingDataService, ILoggingDataProvider } from './ILoggingDataService';\nimport { LogMessages } from './LogMessage';\n\nclass LoggingData implements ILoggingDataService {\n    private RESOURCE: string = 'logging';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n    }\n\n    private filterToString(filter: any): string {\n        if (filter == null) return null;\n        let result = ''; \n\n        for (let key in filter) {\n            if (result.length > 0)\n                result += ';';\n\n            let value = filter[key];\n            if (value != null)\n                result += key + '=' + value\n            else\n                result += key\n        }\n\n        return result;\n    }\n\n\n    public readLogging(params: any, start: number = 0, take: number = 100, successCallback?: (data: LogMessages) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('logging').get(\n            params,\n            (data: LogMessages) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readErrors(params: any, start: number = 0, take: number = 100, successCallback?: (data: LogMessages) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params.skip = start;\n        params.take = take;\n        params.total = true;\n        return this.pipRest.getResource('errors').get(\n            params,\n            (data: LogMessages) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass LoggingDataProvider implements ILoggingDataProvider {\n    private _service: ILoggingDataService;\n    private RESOURCE: string = 'logging'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new LoggingData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipLoggingData', ['pipRest'])\n    .provider('pipLoggingData', LoggingDataProvider);\n\n\n","import { ISettingsDataService, ISettingsDataProvider } from './ISettingsDataService';\n\nclass SettingsData implements ISettingsDataService {\n    private RESOURCE: string = 'settings';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readSettingsSections(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings_section').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data.data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readSettings(section: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').get(\n            {\n                section: section\n            },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public createSettings(section: string, data: any = {}, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        console.log('section', section, this.pipRest.getResource('settings'));\n        return this.pipRest.getResource('settings').save(\n            { section: section },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public updateSettings(section: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').update(\n            {\n                section: section\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n     public saveSettingsKey(section: string, key: string, value: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').save(\n            {\n                section: section,\n                key: key\n            },\n            value,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass SettingsDataProvider implements ISettingsDataProvider {\n    private _service: ISettingsDataService;\n    private RESOURCE: string = 'settings'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new SettingsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipSettingsData', ['pipRest'])\n    .provider('pipSettingsData', SettingsDataProvider);\n\n\n","export enum StatCounterType\n{\n    Total = 0,\n    Year = 1,\n    Month = 2,\n    Day = 3,\n    Hour = 4\n}\n\nexport class StatCounter\n{\n    public group: string;\n    public name: string;\n}\n\nexport class StatCounterValue\n{\n    public year: number;\n    public month: number;\n    public day: number;\n    public hour: number;\n    public value: number;\n}\n\nexport class StatCounterSet\n{\n    public group: string;\n    public name: string;\n    public type: StatCounterType;\n    public values: StatCounterValue[];\n    public counter?: any;\n}\n","import { IStatisticsDataService, IStatisticsDataProvider } from './IStatisticsDataService';\nimport { StatCounterValue } from './StatCounters';\n\nclass StatisticsData implements IStatisticsDataService {\n    private RESOURCE: string = 'statistics';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n\n    public readStatisticsSections(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics_section').get(\n            {},\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data.data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readStatistics(section: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics').get(\n            {\n                section: section\n            },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n\n    public getStats(counter: string, type: number = 0, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: any) => void, errorCallback?: (err: any) => void): any {\n            console.log('type', type);\n        let params: any = {};\n        if (counter != null) params.counter = counter;\n        if (type != null) params.type = type;\n        if (fromTimeUtc != null) params.fromTimeUtc = fromTimeUtc;\n        if (toTimeUtc != null) params.toTimeUtc = toTimeUtc;\n        params.section = counter;\n\n        return this.pipRest.getResource('statistics').query(\n            params,\n            params,\n            dataCallback,\n            errorCallback\n        );\n    }\n      public getTotalStats(counter: string, dataCallback?: (data: any) => void, errorCallback?: (err: any) => void): any {\n       \n        return this.getStats(counter, 0, null, null, dataCallback, errorCallback);\n    }\n    public getYearlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 1, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getMonthlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 2, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getDailyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 3, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public getHourlyStats(counter: string, fromTimeUtc: Date, toTimeUtc: Date,\n        dataCallback?: (data: StatCounterValue[]) => void, errorCallback?: (err: any) => void): any {\n        return this.getStats(counter, 4, fromTimeUtc, toTimeUtc, dataCallback, errorCallback);\n    }\n\n    public createStatistics(section: string, data: any = {}, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        console.log('section', section, this.pipRest.getResource('statistics'));\n        return this.pipRest.getResource('statistics').save(\n            { section: section },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public updateStatistics(section: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('statistics').update(\n            {\n                section: section\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass StatisticsDataProvider implements IStatisticsDataProvider {\n    private _service: IStatisticsDataService;\n    private RESOURCE: string = 'statistics'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new StatisticsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipStatisticsData', ['pipRest'])\n    .provider('pipStatisticsData', StatisticsDataProvider);\n\n\n","class ErrorsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Errors';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureErrorsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('errors', {\n            url: '/errors',\n            controller: ErrorsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'errors/ErrorsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipErrorsPage', ['pipNav'])\n        .config(configureErrorsRoute)\n\n})();\n","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { ConfigErrors, ErrorsMessagesVisability, ErrorMessageRecord, IErrorMessages, ErrorLogMessage } from '../data/ErrorsMessages';\nimport { LogMessage } from '../data/LogMessage';\nimport { ErrorDescription } from '../data/ErrorDescription';\n\ndeclare let moment;\ndeclare let async;\n\ninterface IErrorsPanelBindings {\n    [key: string]: any;\n}\n\nconst ErrorsPanelBindings: IErrorsPanelBindings = {\n\n}\n\nclass ErrorsPanelChanges implements ng.IOnChangesObject, IErrorsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass ErrorsPanelController {\n    private _log: ng.ILogService;\n    private _q: ng.IQService;\n    private _scope: ng.IScope;\n    private _state: angular.ui.IStateService;\n    private _location: ng.ILocationService;\n    private _errorsData: ILoggingDataService;\n    private _pipTimer: pip.services.ITimerService;\n    //private _pipErrorDetailsDialog: IErrorDetailsService;\n    private _config: ConfigErrors = new ConfigErrors();\n    private _rootScope: ng.IRootScopeService;\n    private _pipConfirmationDialog: any;\n    private _pipToasts: any;\n\n    private _start: number;\n    private _take: number;\n    private _total: boolean;\n\n    private refreshTime: number; // todo Имя должно начитаться с нижнего подчеркивания = это же private _refreshTime\n    private errorMessage: any;\n    private searchQuery: string = '';\n    private stopRefresh: boolean = false;\n\n    public showMessagesLimit: number = ErrorsMessagesVisability.Limit;\n\n    public _pipMedia: pip.layouts.IMediaService;\n    public search: string;\n    public refresh: number;\n    public refreshTimes: number[];\n    public errorText: string;\n\n    // data\n    public errors: ErrorMessageRecord[];\n    // state \n    // todo Стас, нужно сделать State одним параметром с использованием класса States, как в traces\n    public state: string;\n    public loading: boolean = false;\n    public updating: boolean = false; // нужно использовать транзакции, а не просто флаг\n    public error: boolean = false;\n\n    constructor(\n        $log: ng.ILogService,\n        $q: ng.IQService,\n        $state: angular.ui.IStateService,\n        $scope: ng.IScope,\n        $location: ng.ILocationService,\n        $rootScope: ng.IRootScopeService,\n        pipNavService: pip.nav.INavService,\n        pipLoggingData: ILoggingDataService,\n        pipTimer: pip.services.ITimerService,\n        pipMedia: pip.layouts.IMediaService,\n        //pipErrorDetailsDialog: IErrorDetailsService,\n        pipConfirmationDialog: any,\n        pipToasts: any) {\n\n        this._log = $log;\n        this._q = $q;\n        this._state = $state;\n        this._scope = $scope;\n        this._location = $location;\n        this._errorsData = pipLoggingData;\n        this._pipTimer = pipTimer;\n        this._pipMedia = pipMedia;\n        //this._pipErrorDetailsDialog = pipErrorDetailsDialog;\n        this._pipConfirmationDialog = pipConfirmationDialog;\n        this._pipToasts = pipToasts;\n\n        this._start = this._config.start;\n        this._take = this._config.pageSize;\n        this._total = true;\n        this.refresh = this._config.refresh;\n        this.refreshTimes = this._config.refreshTimes;\n\n\n        //this.filter = this._location.search().filter || this._config.defaultFilter;\n        this.search = this._location.search().search || this._config.defaultSearch;\n        this.searchQuery = this.search;\n\n        this.loading = true;\n\n        this._scope.$on('$destroy', () => {\n            this.removeRefreshTimer();\n        });\n\n\n        this.setRefreshTimer();\n        var cleanUpFunc = $rootScope.$on('TOOLS.ERRORS_REFRESH', () => {\n            if (!this.stopRefresh) {\n                this.updating = true;\n                this.InitErrors();\n            }\n        });\n\n        $scope.$on('$destroy', () => {\n            if (angular.isFunction(cleanUpFunc)) {\n                cleanUpFunc();\n            }\n        });\n\n        this.setState()\n        this.InitErrors();\n\n    }\n\n    private getErrorString(responses: any): string {\n        if (responses) {\n            if (_.isString(responses)) {\n                return responses;\n            } else if (responses.message) {\n                return responses.message;\n            } else if (responses.data && responses.data.message) {\n                return responses.data.message;\n            } else {\n                return responses.statusText || '';\n            }\n        }\n\n        return '';\n    }\n\n    public clean() {\n        this.search = null;\n        this.onSearchErrors();\n    }\n\n    private clearErrors() {\n        this._pipConfirmationDialog.show(\n            {\n                event: null,\n                title: 'Clear all errors?',\n                ok: 'Clear',\n                cancel: 'Cancel'\n            },\n            () => {\n                /*this._errorsData.clearErrors(\n                    () => {\n                        this.onErrorRead([]);\n                        this._pipToasts.showMessage('All errors have been cleared.');\n                        this.InitErrors();\n                    },\n                    (error: any) => {\n                        this.clearErrorsError(error);\n                    }\n                );*/\n            },\n            () => {\n                console.log('You disagreed');\n            }\n        );\n    }\n\n    private clearErrorsError(error: any) {\n        this._pipToasts.showError(error);\n        // todo need transactions \n    }\n\n    // todo нужно использовать traces data state -> смотри в traces \n    private setState() {\n        if (this.loading) {\n            this.state = 'loading';\n            return;\n        }\n        if (angular.isArray(this.errors) && this.errors && this.errors.length > 0) {\n            this.state = 'data';\n            return;\n        }\n        if (!angular.isArray(this.errors) || (this.errors && this.errors.length == 0)) {\n            this.state = 'empty';\n            return;\n        }\n    }\n\n    private setRefresh() {\n        this.refreshTime = this.refresh * 60 * 1000;\n    }\n\n    // для фильтра тоже нужно использовать класс\n    private getFilter() { // нужно писать возвращаемое значение\n        let filter: any = {};\n\n        if (this.searchQuery) {\n            filter.Search = this.searchQuery;\n        }\n\n        return filter;\n    }\n\n    private setRefreshTimer() {\n        if (!this._pipTimer.isStarted()) {\n            this._pipTimer.start();\n        }\n\n        this.setRefresh();\n        this.removeRefreshTimer();\n        this._pipTimer.addEvent('TOOLS.ERRORS_REFRESH', this.refreshTime);\n    }\n\n    private removeRefreshTimer() {\n        this._pipTimer.removeEvent('TOOLS.ERRORS_REFRESH');\n    }\n\n    private onErrorRead(responses: any) {\n        console.log(responses);\n        let traceErrors: LogMessage[];\n        let errorMessageTree: IErrorMessages;\n        let errors: ErrorMessageRecord[] = [];\n\n        traceErrors = this.createErrors(responses);\n        errorMessageTree = this.prepareErrorTree(this.createErrorTree(traceErrors));\n\n        for (var key in errorMessageTree) { // почему используется for ? Лучше использовать _.each  \n            let item = errorMessageTree[key];\n            if (this.errors && this.errors.length > 0) {\n                let oldItem = _.find(this.errors, (item) => {\n                    // все if должны быть с полной записью, но зачем тут вообще if ??????\n                    // нужно просто: return item && item.items && item.items.length > 0 && item.items[0].error.Type == key;\n                    if (item && item.items && item.items.length > 0 && item.items[0].error.type == key) return true;\n                    else return false;\n                });\n                item.collapsed = oldItem ? !!oldItem.collapsed : false;\n            }\n            errors.push(item);\n        }\n\n        this.errors = _.sortBy(errors, function (item: ErrorMessageRecord) {\n            return item.ErrorType;\n        });\n\n        // todo зачем тут куча просто переменных если у тебя есть state? \n        this.loading = false;\n        this.updating = false;\n        this.error = false;\n        this.setState();\n    }\n\n    private onError(responses: any): void { // тут тоже нужен класс\n        this._log.error('Error: ' + JSON.stringify(responses));\n        this.errorText = 'Error: Error on load erros messages.';\n        this.errorMessage = responses;\n        this.loading = false;\n        this.updating = false;\n        this.error = true;\n        this.setState();\n    }\n\n    private InitErrors(): void {\n        let filter = this.getFilter();\n\n        this.loading = true;\n        this.error = false;\n\n        // todo тут с этим куском что-то нужно сделать, это выглядит очень-очень странно \n        // each parallel используй\n        async.parallel([\n            (callback) => {\n                // поему тут используется старые  function ? где тип получаемых значений ?\n                this._errorsData.readErrors(filter, this._start, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 2 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 3 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 4 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 5 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 6 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 7 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 8 * this._take, this._take,\n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            },\n            (callback) => {\n                this._errorsData.readErrors(filter, this._start + 9 * this._take, this._take, \n                    function (responses) { callback(null, responses); },\n                    function (error) { callback(error, null); })\n            }\n        ]\n            , (error, result) => { // где типы возвращаемых значенией ? \n                if (!error && result) {\n                    this.onErrorRead(result);\n                }\n                if (error) this.onError(result);\n            });\n    }\n\n    private createErrors(traceErrors: any): LogMessage[] { // тут нет классов \n        let errorData = []; // тут нет классов \n        // join errors\n        _.each(traceErrors, (item) => {\n            if (angular.isObject(item) && angular.isArray(item.data)) {\n                for (let i = 0; i < item.data.length; i++) {\n                    errorData.push(item.data[i]);\n                }\n            }\n        });\n\n        return errorData;\n    }\n\n    private createErrorTree(traceErrors: LogMessage[]): IErrorMessages {\n        let tree: IErrorMessages = {};\n        if (angular.isArray(traceErrors)) {\n            _.each(traceErrors, (item) => {\n                let key;\n                if (item.error) {\n                    key = item.error.type;\n                } else {\n                    key = 'undefined';\n                    item.error = new ErrorDescription();\n                }\n\n                if (!tree[key]) {\n                    tree[key] = this.createRecord(key);\n                }\n                let record = this.createRecord(key);\n                tree[key] = this.addToRecord(tree[key], item);\n            });\n        }\n\n        return tree;\n    }\n\n    private prepareErrorTree(tree: IErrorMessages): IErrorMessages { //[]\n        // sort each record\n        _.each(tree, (item: ErrorMessageRecord) => {\n            item = this.sortByTime(item);\n        });\n\n        // set first last and count property\n        _.each(tree, (item: ErrorMessageRecord) => {\n            if (item.items.length > 0) {\n                item.count = item.items.length;\n                item.first = item.items[item.items.length - 1].MomentTimeUtc;\n                item.last = item.items[0].MomentTimeUtc\n            }\n        });\n        return tree;\n    }\n\n    private createRecord(key: string): ErrorMessageRecord {\n        let record: ErrorMessageRecord;\n\n        record = {\n            items: [],\n            ErrorType: key,\n            first: null,\n            last: null,\n            count: 0,\n            collapsed: false,\n            show: ErrorsMessagesVisability.Limit\n        }\n\n        return record;\n    }\n\n    private addToRecord(record: ErrorMessageRecord, item: LogMessage): ErrorMessageRecord {\n        let errorItem: ErrorLogMessage;\n\n        errorItem = new ErrorLogMessage;\n        if (record && record.items) {\n            errorItem.MomentTimeUtc = moment(item.time);\n            errorItem.time = errorItem.MomentTimeUtc.toDate().getTime();\n            errorItem.correlation_id = item.correlation_id;\n            errorItem.time = item.time;\n            errorItem.level = item.level;\n            errorItem.error = item.error;\n            errorItem.message = item.message;\n\n            record.items.push(errorItem);\n        }\n\n        return record;\n    }\n\n    private sortByTime(collection: ErrorMessageRecord): ErrorMessageRecord {\n        collection.items = _.sortBy(collection.items, function (item: ErrorLogMessage) {\n            return item.time;\n        });\n\n        return collection;\n    }\n\n    public onRefreshClick(): void {\n        this.updating = true;\n        this.searchQuery = this.search;\n        this.InitErrors();\n    }\n\n    public onRefreshChange(): void {\n        this.setRefreshTimer()\n    }\n\n    public onClickErrorDetails(): void {\n        // pipErrorDetailsDialog.show(\n        // this.errorMessage);\n    }\n\n    public onSearchErrors(): void {\n        this.searchQuery = this.search;\n        this._location.search('search', this.searchQuery);\n        this.onRefreshClick();\n    }\n\n    public onFilterErrors(): void {\n        if (this.search || this.searchQuery) {\n            this.searchQuery = this.search;\n            this._location.search('search', this.searchQuery);\n            this.onRefreshClick();\n        }\n    }\n\n    public onErrorsDetails(item: LogMessage): void {\n        /*this.stopRefresh = true\n        this._pipErrorDetailsDialog.show({\n            message: item.error.message,\n            source: item.error.category,\n            trace: item.error.stack_trace,\n            correlationId: item.correlation_id,\n            type: item.error.type,\n            time: item.time\n        },\n            () => { this.stopRefresh = false; },\n            () => { this.stopRefresh = false; }\n        );*/\n    }\n\n    public onKeyPress = function (event: JQueryKeyEventObject): void {\n        if (event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSearchErrors();\n        }\n    }\n\n    public onShowMore(item: ErrorMessageRecord): void {\n        item.show = item.show + ErrorsMessagesVisability.Step;\n    }\n\n    public onShowLess(item: ErrorMessageRecord): void {\n        item.show = ErrorsMessagesVisability.Limit;\n    }\n\n    public onBlur(): void {\n        //  this.search = this._location.search().search || this._config.defaultSearch;\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipErrorsPanel', [])\n        .component('pipErrorsPanel', {\n            bindings: ErrorsPanelBindings,\n            templateUrl: 'errors/ErrorsPanel.html',\n            controller: ErrorsPanelController\n        })\n\n})();\n","class EventsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Events';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureEventsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('events', {\n            url: '/events',\n            controller: EventsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'events/EventsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipEventsPage', ['pipNav'])\n        .config(configureEventsRoute)\n\n})();\n","import { IEventsDataService } from '../data/IEventsDataService';\n\ninterface IEventsPanelBindings {\n    [key: string]: any;\n}\n\nconst EventsPanelBindings: IEventsPanelBindings = {\n\n}\n\nclass EventsPanelChanges implements ng.IOnChangesObject, IEventsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass EventsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\nclass EventsFilter {\n    static Component: string = 'Component';\n    static Severity: string = 'Severity';\n    static Type: string = 'Type';\n    static All: string[] = ['Component', 'Severity', 'Type'];\n}\n\n\nclass EventsPanelController {\n    public events: any[] = [];\n    private _start: number = 0;\n    private _take: number = 100;\n\n    public search: string = '';\n    public state: string = EventsState.Progress;\n    public progress: boolean;\n    public updating: boolean;\n    public error: string = null;\n\n\n    constructor(\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private pipEventsData: IEventsDataService,\n        public pipMedia: pip.layouts.IMediaService,\n        private pipToasts: pip.controls.IToastService) {\n        this.readEvents();\n    }\n\n\n     public clear() {\n        this.search = null;\n        this.refreshEvents();\n    }\n\n    public readEvents() {\n        this.updating = true;\n\n         this.pipEventsData.readEvents(\n            this.getFilter(), this._start, this._take,(events: any) => {\n                this.onReadEvents(events);\n            },\n            (err: any) => {\n                this.onReadEventsError(err);\n            }\n        );\n\n    }\n\n     private getFilter() {\n        return this.search ? {Search: this.search} : {};\n    }\n\n    private onReadEventsError(error) {\n        this.error = error;//this._bbHandleErrors.parseError(error);\n    }\n\n    private onReadEvents(events: any) {\n        this.error = null;\n        _.each(events.data, (trace, $index) => {\n            if (this._start === 0 && this.events[$index]) {\n                this.events[$index] = trace;\n            } else {\n                this.events.push(trace);\n            }\n        });\n        if (this._start === 0 && events.data.length < this._take) {\n            this.events.splice(events.data.length, this._take - events.data.length);\n        }\n\n        this._start += this._take;\n        this._take = 100;\n        this.state = events.data.length > 0 || (this._start !== 0 && this.events.length > 0) ? \n                     EventsState.Data : EventsState.Empty;\n    \n        this.updating = false;\n    }\n\n    public refreshEvents() {\n        this._take = this._start > 0 ? this._start : 100;\n        this._start = 0;\n        this.$location.search('search', this.search);\n\n        this.readEvents();\n    }\n}\n\n(() => {\n    angular\n        .module('pipEventsPanel', [])\n        .component('pipEventsPanel', {\n            bindings: EventsPanelBindings,\n            templateUrl: 'events/EventsPanel.html',\n            controller: EventsPanelController\n        })\n\n})();\n","(() => {\n\n    angular\n        .module('pipSystem', [\n            'pipDirective',\n            \n            'pipLoggingResources',\n            'pipLoggingData',\n            'pipLoggingViewModel',\n            'pipLoggingPage',\n            'pipLoggingPanel',\n            \n            'pipErrorsPage',\n            'pipErrorsPanel',\n\n            'pipCountersResources',\n            'pipCountersData',\n            'pipCountersPage',\n            'pipCountersPanel',\n\n            'pipEventsResources',\n            'pipEventsData',\n            'pipEventsPage',\n            'pipEventsPanel',\n\n            'pipSettingsResources',\n            'pipSettingsData',\n            'pipSettingsPage',\n            'pipSettingsPanel',\n\n            'pipStatisticsResources',\n            'pipStatisticsService',\n            'pipStatisticsData',\n            'pipStatisticsPage',\n            'pipStatisticsPanel'\n\n        ])\n\n})();","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { LogMessages } from '../data/LogMessage';\nimport { LogMessage } from '../data/LogMessage';\n\nexport class LoggingsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\nexport class LoggingModel {\n    public loggings: LogMessage[] = [];\n    public state: string = LoggingsState.Progress;\n\n    private total: number = 0;\n    private _start: number = 0;\n    private _take: number = 100;\n\n    constructor(private pipLoggingData: ILoggingDataService) { }\n\n    public getLoggings() {\n        return this.loggings;\n    }\n    public setLoggings(loggings: LogMessage[]) {\n        this.loggings = loggings;\n    }\n\n    public setState(state: string) {\n        this.state = state; \n    }\n    \n    public getState(): string {\n        return this.state;\n    }\n\n    public readLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this.pipLoggingData.readLogging(\n            { 'Search': search }, this._start, this._take,\n            (results: LogMessages) => {\n                this.onLoggingRead(results, callback);\n            },\n            (err: any) => {\n                if (errorcallback) {\n                    errorcallback(err);\n                }\n            }\n        );\n\n    }\n\n\n    public refreshLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this._start = 0;\n        this.readLogging(search, callback, errorcallback);\n\n    }\n\n    private onLoggingRead(traces: LogMessages, callback?: () => void): void {\n        this.state = traces.data.length > 0 || (this._start !== 0 && this.loggings.length > 0) ?\n            LoggingsState.Data : LoggingsState.Empty;\n\n        _.each(traces.data, (trace, $index) => {\n            this.loggings[$index] ? this.loggings[$index + this._start] = trace : this.loggings.push(trace);\n        });\n\n        this._start += traces.data.length;\n\n        if (this.total <= this._start || this._take != traces.data.length) {\n            this.total = this._start;\n\n            if (this.loggings.length > this.total) {\n                this.loggings.splice(this.total, this.loggings.length - this.total);\n            }\n        } else {\n            //this.readLogging();\n        }\n        if (callback) {\n            callback();\n        }\n\n    }\n\n}","class LoggingController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Logging';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureLoggingRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('logging', {\n            url: '/logging',\n            controller: LoggingController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'logging/LoggingPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipLoggingPage', ['pipNav'])\n        .config(configureLoggingRoute)\n\n})();\n","import { ILoggingDataService } from '../data/ILoggingDataService';\nimport { ILoggingViewModel } from './LoggingViewModel';\nimport { LogMessage } from '../data/LogMessage';\n\ninterface ILoggingPanelBindings {\n    [key: string]: any;\n}\n\nconst LoggingPanelBindings: ILoggingPanelBindings = {\n\n}\n\nclass LoggingPanelChanges implements ng.IOnChangesObject, ILoggingPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass LoggingsTimer {\n    static Times: number[] = [1, 3, 5, 10, 20, 30];\n}\n\nclass LoggingsFilter {\n    static Content: string = 'Content';\n    static CorrelationId: string = 'CorrelationId';\n    static Level: string = 'Level';\n    static All: string[] = ['Content', 'CorrelationId', 'Level'];\n}\n\nclass LoggingPanelController {\n    public transaction: pip.services.Transaction;\n    public filter: string;\n    public autoUpdate: boolean = true;\n    public filters: string[] = LoggingsFilter.All;\n    public refresh: number = LoggingsTimer.Times[3];\n    public refreshTimes: number[] = LoggingsTimer.Times;\n    public search: string = '';\n    public localSearch: string = '';\n    public error: string = null;\n\n    private stopRefresh: boolean = false;\n    private _refreshTime: number;\n    private cleanUpFunc: Function;\n\n    constructor(\n        private pipLoggingViewModel: ILoggingViewModel,\n        private $location: ng.ILocationService,\n        private pipTimer: pip.services.ITimerService,\n        public pipMedia: pip.layouts.IMediaService,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService) {\n\n\n        this.transaction = pipTransaction.create('traces');\n        this.filter = this.$location.search().filter || LoggingsFilter.Content;\n        this.search = this.$location.search().search || '';\n        this.localSearch = this.search;\n        this.readLogging();\n\n        this.setRefreshTimer();\n        this.cleanUpFunc = $rootScope.$on('Logging', () => {\n            if (!this.stopRefresh && this.autoUpdate) {\n                this.refreshLogging();\n            }\n        });\n\n    }\n\n    public $onDestroy() {\n        this.pipTimer.removeEvent('Logging');\n        if (angular.isFunction(this.cleanUpFunc)) {\n            this.cleanUpFunc();\n        }\n    }\n\n    public loggings(): LogMessage[] {\n        return this.pipLoggingViewModel.logging;\n    }\n\n    public state(): string {\n        return this.pipLoggingViewModel.state;\n    }\n\n\n    public readLogging(): void {\n        this.stopRefresh = true;\n        this.transaction.begin('PROCESSING');\n        this.pipLoggingViewModel.readLogging(this.search, () => { this.onLoggingRead() }, (error) => { this.onError(error) });\n    }\n\n\n    private setRefreshTimer() {\n        if (!this.pipTimer.isStarted()) {\n            this.pipTimer.start();\n        }\n\n        this.setRefresh();\n        this.pipTimer.removeEvent('Logging');\n        this.pipTimer.addEvent('Logging', this._refreshTime);\n    }\n\n    public onRefreshChange(): void {\n        this.setRefreshTimer()\n    }\n\n    private setRefresh() {\n        this._refreshTime = this.refresh * 1000;\n    }\n\n    public playStopAutoUpdate() {\n        this.autoUpdate = !this.autoUpdate;\n    }\n\n    private onError(error: any): void {\n        this.error = error;\n        this.transaction.abort();\n        this.stopRefresh = false;\n    }\n\n    private onLoggingRead(): void {\n        this.stopRefresh = false;\n        this.error = null;\n        this.transaction.end();\n    }\n\n    public refreshLogging(): void {\n        this.$location.search('search', this.search);\n        this.stopRefresh = true;\n        this.transaction.begin('PROCESSING');\n        this.pipLoggingViewModel.refreshLogging(this.search, () => { this.onLoggingRead() }, (error) => { this.onError(error) });\n    }\n    public onSearch(): void {\n        this.search = this.localSearch;\n        this.refreshLogging();\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipLoggingPanel', [])\n        .component('pipLoggingPanel', {\n            bindings: LoggingPanelBindings,\n            templateUrl: 'logging/LoggingPanel.html',\n            controller: LoggingPanelController\n        })\n\n})();\n","import { LoggingModel } from './LoggingModel';\nimport { LogMessage } from '../data/LogMessage';\nimport { ILoggingDataService } from '../data/ILoggingDataService';\n\nexport interface ILoggingViewModel {\n    logging: LogMessage[];\n    state: string;\n    readLogging(search?: string, callback?: () => void, errorcallback?: (error: any) => void);\n    refreshLogging(search?: string, callback?: () => void, errorcallback?: (error: any) => void);\n}\n\nclass LoggingViewModel implements ILoggingViewModel {\n    private workflow: LoggingModel;\n\n    constructor(private pipLoggingData: ILoggingDataService) {\n        \"ngInject\";\n        this.workflow = new LoggingModel(pipLoggingData);\n    }\n\n    public get logging(): LogMessage[] {\n        return this.workflow.getLoggings();\n    }\n\n    public set logging(loggings: LogMessage[]) {\n        this.workflow.setLoggings(loggings);\n    }\n\n    public get state(): string {\n        return this.workflow.getState();\n    }\n\n    public set state(state: string) {\n        this.workflow.setState(state);\n    }\n\n\n    public readLogging(search?: string, callback?: () => void, errorcallback?: (error) => void): void {\n        this.workflow.readLogging(search, callback, errorcallback);\n    }\n    public refreshLogging(search?: string, callback?: () => void, errorcallback?: (error) => void) {\n        this.workflow.refreshLogging(search, callback, errorcallback)\n    }\n}\n\n(() => {\n\n    angular\n        .module('pipLoggingViewModel', ['pipNav'])\n        .service('pipLoggingViewModel', LoggingViewModel)\n\n})();\n\n","function configCountersResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('counters', '/api/v1/counters');\n}\n\nangular\n    .module('pipCountersResources', [])\n    .config(configCountersResources);","function configEventsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('events', '/api/v1/eventlog');\n}\n\nangular\n    .module('pipEventsResources', [])\n    .config(configEventsResources);","function configLoggingResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('logging', '/api/v1/logging');\n    pipRestProvider.registerOperation('errors', '/api/v1/logging/errors');\n}\n\nangular\n    .module('pipLoggingResources', [])\n    .config(configLoggingResources);","function configSettingsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerPagedCollection('settings', '/api/v1/settings/:section/:key',\n        { section: '@section' },\n        {\n            page: { method: 'GET', isArray: false },\n            update: { method: 'PUT' }\n        }\n    );\n    pipRestProvider.registerOperation('settings_section', '/api/v1/settings/ids');\n\n}\n\nangular\n    .module('pipSettingsResources', [])\n    .config(configSettingsResources);","function configStatisticsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('statistics_counters', '/api/v1/statistics/counters');\n    pipRestProvider.registerOperation('statistics_section', '/api/v1/statistics/groups');\n    pipRestProvider.registerOperation('statistics', '/api/v1/statistics/:section/:name');\n    \n}\n\nangular\n    .module('pipStatisticsResources', [])\n    .config(configStatisticsResources);","'use strict';\n\nexport class SettingsKey {\n    name: string;\n    data: any;\n}\n\nexport class AddSettingsKeyDialogController {\n    public title: string = \"New settings key\";\n    public $mdDialog: angular.material.IDialogService;\n    public theme;\n    public key: SettingsKey;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n        this.key = new SettingsKey();\n        this.key.name = params.name ? params.name.replace('<wbr>', '') : null;\n        this.key.data = params.data;\n\n        if (params.name && params.data) {\n            this.title = \"Edit settings key\";\n        }\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide(this.key);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipAddSettingsKeyDialog', ['ngMaterial'])\n    .controller('pipAddSettingsKeyDialogController', AddSettingsKeyDialogController);\n\nimport './AddSettingsKeyService';","\nimport { SettingsKey } from \"./AddSettingsKeyController\";\n\nexport interface IAddSettingsKeyService {\n    show(params: any, successCallback?: (key: SettingsKey) => void, cancelCallback?: () => void): any;\n}\n\nclass AddSettingsKeyService implements IAddSettingsKeyService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (key: SettingsKey) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'settings/AddSettingsKeyDialog.html',\n            controller: 'pipAddSettingsKeyDialogController',\n            controllerAs: '$ctrl',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((key: SettingsKey) => {\n            if (successCallback) {\n                successCallback(key);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddSettingsKeyDialog')\n    .service('pipAddSettingsKeyDialog', AddSettingsKeyService);","'use strict';\n\nexport class AddSettingsSectionDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme;\n    public sectionName: string;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n    \n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide(this.sectionName);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipAddSettingsSectionDialog', ['ngMaterial'])\n    .controller('pipAddSettingsSectionDialogController', AddSettingsSectionDialogController);\n\nimport './AddSettingsSectionService';","\nexport interface IAddSettingsSectionService {\n    show(params: any, successCallback?: (settingsName: string) => void, cancelCallback?: () => void): any;\n}\n\nclass AddSettingsSectionService implements IAddSettingsSectionService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (settingsName: string) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'settings/AddSettingsSectionDialog.html',\n            controller: 'pipAddSettingsSectionDialogController',\n            controllerAs: '$ctrl',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((settingsName: string) => {\n            if (successCallback) {\n                successCallback(settingsName);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddSettingsSectionDialog')\n    .service('pipAddSettingsSectionDialog', AddSettingsSectionService);","class SettingsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Settings';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureSettingsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('settings_tool', {\n            url: '/settings_tool',\n            controller: SettingsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'settings/SettingsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipSettingsPage', ['pipNav'])\n        .config(configureSettingsRoute)\n\n})();\n","import { ISettingsDataService } from '../data/ISettingsDataService';\nimport { IAddSettingsSectionService } from './AddSettingsSectionService';\nimport { IAddSettingsKeyService } from './AddSettingsKeyService';\n\ninterface ISettingsPanelBindings {\n    [key: string]: any;\n}\n\nconst SettingsPanelBindings: ISettingsPanelBindings = {\n\n}\n\nclass SettingsPanelChanges implements ng.IOnChangesObject, ISettingsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass SettingsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\n\nexport class SettingSection {\n    public name: string;\n    public hide: boolean = false;\n}\n\n\nclass SettingsPanelController {\n    public settingsSections: SettingSection[];\n    public settings: any[];//ISettingsMessages[];\n    public search: string = null;\n    public selectIndex: number;\n    public details: boolean;\n    public state: string = SettingsState.Progress;\n    public error: string = null;\n    public transaction: pip.services.Transaction;\n    public getSelectDropdown: Function;\n\n    constructor(\n        private $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        private pipToasts: pip.controls.IToastService,\n        pipTransaction: pip.services.ITransactionService,\n        $log: ng.ILogService,\n        private pipAddSettingsSectionDialog: IAddSettingsSectionService,\n        private $state: ng.ui.IStateService,\n        private pipSettingsData: ISettingsDataService,\n        public pipMedia: pip.layouts.IMediaService,\n        private pipAddSettingsKeyDialog: IAddSettingsKeyService,\n        private pipConfirmationDialog: pip.dialogs.IConfirmationDialogService) {\n\n        this.transaction = pipTransaction.create('settings');\n        this.search = this.$location.search().search;\n        this.readSettings();\n        this.selectIndex = 0;\n\n        this.getSelectDropdown = () => {\n            this.selectItem(this.selectIndex);\n        }\n    }\n\n    private readSettings() {\n        this.transaction.begin('Reading settings');\n\n        this.state = SettingsState.Empty;\n        this.transaction.end();\n        this.pipSettingsData.readSettingsSections({},\n            (settingsSections: string[]) => {\n                this.state = SettingsState.Progress;\n                this.onSettingsRead(settingsSections);\n                if (settingsSections.length > 0) {\n                    this.state = SettingsState.Data;\n                } else {\n                    this.state = SettingsState.Empty;\n                }\n            },\n            (error: any) => {\n                this.onError(error);\n            });\n        /*this.pipSettingsData.getSettingSections(\n            (settingsSections: string[]) => {\n                this.state = SettingsState.Progress;\n                this.onSettingsRead(settingsSections);\n                if (settingsSections.length > 0) {\n                    this.state = SettingsState.Data;\n                } else {\n                    this.state = SettingsState.Empty;\n                }\n            },\n            (error: any) => {\n                this.onError(error);\n            }\n        );*/\n    }\n\n    public onSearch() {\n        this.$location.search('search', this.search);\n\n        _.each(this.settingsSections, (item: SettingSection, index: number) => {\n            this.settingsSections[index].hide = this.filterSections(item.name);\n        })\n        if (!this.settingsSections[this.selectIndex] || this.settingsSections[this.selectIndex].hide == true) {\n            let index: number = _.findIndex(this.settingsSections, { hide: false })\n            if (index == -1) {\n                this.state = SettingsState.Empty;\n                this.selectIndex = null;\n            } else {\n                this.state = SettingsState.Data;\n                this.selectItem(index);\n            }\n        }\n    }\n\n    public clean() {\n        this.search = null;\n        this.onSearch();\n    }\n\n    private filterSections(section): boolean {\n        if (!this.search || this.search == '') {\n            return false;\n        }\n\n        if (section.indexOf(this.search) != -1) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private onSettingsRead(settingsSections: string[]) {\n        this.settingsSections = [];\n        _.each(settingsSections, (item: string) => {\n            this.settingsSections.push({ name: item, hide: false });\n        })\n        this.settings = [];\n\n        _.each(this.settingsSections, (section: SettingSection, index: number) => {\n            if (section.name === this.$location.search().section) {\n                this.selectIndex = index;\n            }\n\n            this.pipSettingsData.readSettings(section.name, (settings) => {\n                let keys: string[] = _.keys(settings);\n\n                keys = _.map(keys, (key) => {\n                    if (key == '$promise' || key == '$resolved') return key;\n\n                    let split: string[] = _.split(key, '.');\n                    let newKey: string = '';\n                    _.each(split, (k: string, index: number) => {\n                        newKey += k;\n                        if (index != split.length - 1) {\n                            newKey += '.<wbr>';\n                        }\n                    })\n                    return newKey;\n                })\n                let settingsN = _.zipObject(keys, _.values(settings));\n\n                this.settings[index] = settingsN;\n                this.transaction.end();\n                this.state = SettingsState.Data;\n            }, (error: any) => {\n                this.transaction.abort();\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n\n        });\n    }\n\n    private onError(error: any) {\n        this.error = error;\n        this.transaction.end(error);\n    }\n\n    public selectItem(index: number) {\n        this.selectIndex = index;\n        this.$location.search('section', this.settingsSections[index].name);\n    }\n\n    public updateKey(name: string, data: string) {\n        this.pipAddSettingsKeyDialog.show(\n            {\n                section: this.settingsSections[this.selectIndex],\n                name: name,\n                data: data\n            },\n            (key) => {\n                this.transaction.begin('add section');\n                if (name == key.name) {\n                    this.addKeyDialogCallback(key);\n                } else {\n                    this.updateKeyDialogCallback(key, name);\n                }\n            })\n    }\n\n    private updateKeyDialogCallback(key, name) {\n        name = name.replace('.', '.<wbr>');\n        key.name = key.name.replace('.', '.<wbr>');\n        //this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], name);\n        //this.settings[this.selectIndex][key.name] = key.data;\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, key.name,\n            (data) => {\n                this.transaction.end();\n            },\n            (error: any) => {\n                this.transaction.abort();\n\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n    }\n\n    public openDeleteKeyDialog(key: string, value: string) {\n        this.pipConfirmationDialog.show(\n            {\n                event: null,\n                title: 'Delete settings key?',\n                ok: 'Delete',\n                cancel: 'Cancel'\n            },\n            () => {\n                this.deleteKey(key, value);\n            },\n            () => {\n                console.log('You disagreed');\n            }\n        );\n    }\n\n    public deleteKey(key: string, value: string) {\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], key);\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], '$promise');\n        this.settings[this.selectIndex] = _.omit(this.settings[this.selectIndex], '$resolved');\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, this.settings[this.selectIndex],\n            (data) => {\n                this.transaction.end();\n            },\n            (error: any) => {\n                this.transaction.abort();\n\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n    }\n\n    public addKey() {\n        this.pipAddSettingsKeyDialog.show({ section: this.settingsSections[this.selectIndex] }, (key) => {\n            this.addKeyDialogCallback(key);\n        })\n    }\n\n    private addKeyDialogCallback(key) {\n        this.transaction.begin('add section');\n\n        let settings = {}, keys: string[] = _.keys(this.settings[this.selectIndex]),\n            values = _.values(this.settings[this.selectIndex]);\n        for (let i: number = 0; i < values.length; i++) {\n            if (keys[i] != '$promise' && keys[i] != '$resolved') {\n                settings[keys[i]] = values[i];\n            }\n        }\n        settings[key.name] = key.data;\n        console.log(settings);\n        this.pipSettingsData.createSettings(this.settingsSections[this.selectIndex].name, settings,\n            () => {\n                this.saveKeyCallback(key);\n            },\n            (error: any) => {\n                this.transaction.abort();\n                this.pipToasts.showError(error, null, null, null, null);\n            });\n\n    }\n\n    private saveKeyCallback(key) {\n        this.transaction.end();\n\n        key.name = key.name.replace('.', '.<wbr>');\n        if (!this.settings[this.selectIndex]) {\n            this.settings[this.selectIndex] = {};\n        }\n        this.settings[this.selectIndex][key.name] = key.data;\n    }\n\n    private errorkeyCallback(error: any) {\n        this.transaction.abort();\n        this.pipToasts.showError(error, null, null, null, null);\n    }\n\n    public addSection() {\n        this.pipAddSettingsSectionDialog.show({}, (sectionName: string) => {\n            this.addSectionDialogCallback(sectionName);\n        })\n    }\n\n    private addSectionDialogCallback(sectionName: string, data: any = {}) {\n        this.transaction.begin('Adding section');\n        this.pipSettingsData.createSettings(sectionName, data,\n            () => {\n                this.saveSectionCallback(sectionName);\n            },\n            (error: any) => {\n                this.errorkeyCallback(error);\n            });\n    }\n\n    private saveSectionCallback(data: string) {\n        this.transaction.end();\n        this.settingsSections.push({ name: data, hide: this.filterSections(data) }); // todo\n        this.selectItem(this.settingsSections.length - 1);\n    }\n\n    private errorSectionCallback(error) {\n        this.transaction.end('error');\n        this.pipToasts.showError(error, null, null, null, null);\n    }\n\n\n}\n\n(() => {\n    angular\n        .module('pipSettingsPanel', ['pipAddSettingsSectionDialog', 'pipAddSettingsKeyDialog'])\n        .component('pipSettingsPanel', {\n            bindings: SettingsPanelBindings,\n            templateUrl: 'settings/SettingsPanel.html',\n            controller: SettingsPanelController\n        })\n\n})();\n","class StatisticsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Statistics';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureStatisticsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('statistics', {\n            url: '/statistics',\n            controller: StatisticsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'statistics/StatisticsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipStatisticsPage', ['pipNav'])\n        .config(configureStatisticsRoute)\n\n})();\n","import { IStatisticsDataService } from '../data/IStatisticsDataService';\nimport { StatCounterValue, StatCounterSet } from '../data/StatCounters';\ndeclare let moment;\nimport {\n    IStatisticsService,\n    ToolsStatisticsGetFunctions,\n    ToolsStatisticsFormatX,\n    ToolsStatisticsFormatTickX,\n    ToolsStatisticsDecade,\n    counterStatistics,\n    pieChartSeria,\n    statisticsGroup,\n    chartValue,\n    lineChartSeria,\n    StatisticsFilter\n} from \"./StatisticsService\";\n\nclass ToolsStatisticsStates {\n    static Progress: string = 'progress';\n    static Empty: string = 'empty';\n    static Data: string = 'data';\n}\n\n\ninterface IStatisticsPanelBindings {\n    [key: string]: any;\n}\n\nconst StatisticsPanelBindings: IStatisticsPanelBindings = {\n\n}\n\nclass StatisticsPanelChanges implements ng.IOnChangesObject, IStatisticsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass StatisticsPanelController {\n    public filters: string[] = StatisticsFilter.All;\n    public filter: string;\n    public state: string = ToolsStatisticsStates.Progress;\n    public search: string;\n    public counters: string[];\n    public statistics: counterStatistics[];\n    public statisticsGroups: statisticsGroup[];\n    public transaction: pip.services.Transaction;\n    public TOTAL: string = StatisticsFilter.Total;\n    public hourlyDate: Date;\n    public dailyDate: Date;\n    public monthlyDate: Date;\n    public yearlyDate: Date;\n    public yearlyName: string;\n    public chartXTickFormat: any;\n    public decades: ToolsStatisticsDecade[];\n    public pipMedia: pip.layouts.IMediaService\n\n    private groups: any;\n    private _rest: IStatisticsDataService;\n    private _pipAuxPanel: pip.layouts.IAuxPanelService;\n    private _$state: angular.ui.IStateService;\n    private _$location: ng.ILocationService;\n    private _$timeout: ng.ITimeoutService;\n    private _pipDateConvert: pip.dates.IDateConvertService;//IDateTimeService;\n    private _onlyUpdated: boolean = false;\n    private _pipStatistics: IStatisticsService;\n    private _pipToasts: any;\n    constructor(\n        $window: ng.IWindowService,\n        $timeout: ng.ITimeoutService,\n        $state: angular.ui.IStateService,\n        $location: ng.ILocationService,\n        pipStatisticsData: IStatisticsDataService,\n        pipTransaction: pip.services.ITransactionService,\n        pipAuxPanel: pip.layouts.IAuxPanelService,\n        pipDateConvert: pip.dates.IDateConvertService,\n        pipMedia: pip.layouts.IMediaService,\n        pipStatistics: IStatisticsService,\n        pipToasts: any\n    ) {\n\n        this.pipMedia = pipMedia;\n        this._rest = pipStatisticsData;\n        this._pipAuxPanel = pipAuxPanel;\n        this._pipDateConvert = pipDateConvert;\n        this._$state = $state;\n        this._$location = $location;\n        this._$timeout = $timeout;\n        this._pipStatistics = pipStatistics;\n        this._pipToasts = pipToasts;\n        this.transaction = pipTransaction.create('statistics');\n        this.chartXTickFormat = (x) => {\n            if (this.filter == StatisticsFilter.Hourly) {\n                //x += this._pipTimeZone.hoursOffset == undefined ? 0 : this._pipTimeZone.hoursOffset;\n                x += x > 24 ? -24 : x < -24 ? 24 : 0;\n            }\n\n            return ToolsStatisticsFormatTickX[this.filter](x);\n        }\n\n        this.filter = $state.params['filter'] || StatisticsFilter.Hourly;\n        this.search = $state.params['search'];\n        this.configDates();\n        this.getCounters();\n    }\n\n    private prepareDecades() {\n        let stepsCount = 1;\n        let utcStartYear = moment.utc().startOf('year').add('years', (-stepsCount * 10 - 6));\n        this.decades = new Array<ToolsStatisticsDecade>();\n        this.decades.push(new ToolsStatisticsDecade(moment.utc(utcStartYear).toDate(), utcStartYear.year().toString() + ' - ' + utcStartYear.add('years', 10).year().toString()));\n\n        for (let i = -stepsCount + 1; i <= stepsCount; i++) {\n            let start = _.cloneDeep(utcStartYear);\n            let end = _.cloneDeep(utcStartYear.add('years', 10));\n            this.decades.push(new ToolsStatisticsDecade(moment.utc(start).toDate(), start.year().toString() + ' - ' + end.year().toString()));\n        }\n    }\n\n    private configDates() {\n        this.prepareDecades();\n        let utcDate = moment.utc();\n\n        this.hourlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Hourly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        this.dailyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Daily) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        this.monthlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Monthly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n        utcDate.add('years', -6);\n        this.yearlyDate = (this._$state.params['start'] && this._$state.params['filter'] === StatisticsFilter.Yearly) ? this._$state.params['start'] : _.cloneDeep(utcDate.toDate());\n    }\n\n    private getCounters() {\n        this.transaction.begin('PROCESSING');\n        this._rest.readStatisticsSections(null, (counters) => {\n            this.counters = counters;\n            if (this.counters.length > 0) {\n                this.getStatistics();\n            } else {\n                this.transaction.end();\n                this.state = ToolsStatisticsStates.Empty;\n            }\n        }, (error: any) => {\n            this._pipToasts(error);\n            this.transaction.end();\n        });\n    }\n\n    private getEndDate() {\n        let endDate;\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                endDate = moment(this.hourlyDate).add('days', 1).add(0, 'hours').add('minutes', -1).toDate();\n                //endDate = moment(this.hourlyDate).add('days', 1).add(-this._pipTimeZone.hoursOffset, 'hours').add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                endDate = moment(this.dailyDate).add('weeks', 1).add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                endDate = moment(this.monthlyDate).add('years', 1).add('minutes', -1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                endDate = moment(this.yearlyDate).add('years', 10).add('minutes', -1).toDate();\n                break;\n        }\n\n        return endDate;\n    }\n\n    private getStartDate() {\n        let startDate;\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                startDate = moment.utc(this.hourlyDate).startOf('day').add(0, 'hours').toDate();\n                //startDate = moment.utc(this.hourlyDate).startOf('day').add(-this._pipTimeZone.hoursOffset, 'hours').toDate();\n                this.hourlyDate = startDate;\n                break;\n            case StatisticsFilter.Daily:\n                startDate = moment.utc(this.dailyDate).startOf('isoWeek').toDate();\n                this.dailyDate = startDate;\n                break;\n            case StatisticsFilter.Monthly:\n                startDate = moment.utc(this.monthlyDate).startOf('year').toDate();\n                this.monthlyDate = startDate;\n                break;\n            case StatisticsFilter.Yearly:\n                startDate = moment.utc(this.yearlyDate).startOf('year').toDate();\n                this.yearlyDate = startDate;\n                this.yearlyName = <string>_.result(_.find(this.decades, function (dec) {\n                    return dec.value.toString() == startDate.toString();\n                }), 'name');\n                break;\n        }\n\n        this._$location.search('start', startDate);\n\n        return startDate;\n    }\n\n    private getStatistics() {\n        this.statistics = new Array<counterStatistics>();\n        let dateStart: Date = this.getStartDate();\n        let dateEnd: Date = this.getEndDate();\n        _.each(this.counters, (counter, index) => {\n            if (this.filter !== StatisticsFilter.Total) {\n                this._rest[ToolsStatisticsGetFunctions[this.filter]](counter, dateStart, dateEnd,\n                    (statistics: any) => {\n                        //statistics = _.groupBy(statistics, 'group');\n                        //[counter: '', values: [{value: 4, data}]]\n                        console.log('st',statistics);\n                        this.transaction.end();\n                        let temp = new counterStatistics(counter, statistics);\n                        temp.seria = this.prepareForLineCharts(statistics, counter, dateStart, dateEnd, this.filter);\n                        console.log('temp', temp);\n                        this.statistics.push(temp);\n\n                        if (index === this.counters.length - 1) this.groupStatistics();\n                    }, (error: any) => {\n                        this._pipToasts(error);\n                        this.transaction.end();\n                    });\n            } else {\n                this._rest.getTotalStats(counter,\n                    (statistics: any) => {\n                    \n                        this.transaction.end();\n                        let temp = new counterStatistics(counter, statistics);\n                        temp.seria = this.prepareForPieCharts(statistics, counter);\n                          console.log('temp',temp);\n                        \n                        this.statistics.push(temp);\n\n                        if (index === this.counters.length - 1) this.groupStatistics();\n                    },\n                    (error: any) => {\n                        this._pipToasts(error);\n                        this.transaction.end();\n                    });\n            }\n        });\n    }\n\n    public clean() {\n        this.search = null;\n        this.searchClick();\n    }\n\n    // private formatXValues(x) {\n    //     return x[ToolsStatisticsFormatX[this.filter]]();\n    // }\n\n    private prepareForPieCharts(statistics: any[], counter: string): pieChartSeria[] {\n         let seria, serias: any[] = [], values;\n        _.each(statistics, (item: any) => {\n            console.log(item);\n            seria = new pieChartSeria(item.counter, item.values[0].value);\n            serias.push(seria);\n        })\n        return serias\n    }\n\n    private prepareForLineCharts(statistics: StatCounterValue[], counter: string, dateFrom: Date, dateTo: Date, category: string): lineChartSeria[] {\n        let seria, serias: any[] = [], values;\n        _.each(statistics, (item: any) => {\n            values = this._pipStatistics.fillLineCharts(item.values, dateFrom, dateTo, category);\n            seria = new lineChartSeria(item.counter, values);\n            serias.push(seria);\n        })\n        console.log('v', values);\n  \n\n        return serias;\n    }\n\n    private groupStatistics() {\n        this.groups = this.statistics;\n        console.log('groups', this.groups);\n        /*_.groupBy(this.statistics, (counterStats: counterStatistics) => {\n            let oldCounter = _.clone(counterStats.counter);\n            counterStats.counter = counterStats.counter.substr(oldCounter.lastIndexOf('.') + 1);\n\n            return oldCounter.substr(0, oldCounter.lastIndexOf('.'));\n        });*/\n\n        this.filterStatistics();\n    }\n\n    public searchClick() {\n        this._$location.search('search', this.search);\n        this.transaction.begin('PROCESSING');\n        this.filterStatistics();\n    }\n\n    public filterStatistics() {\n        this.statisticsGroups = new Array<statisticsGroup>();\n        _.each(this.groups, (group, name) => {\n              console.log('statisticsGroups', group, name);\n            if (!this.search || name.toLowerCase().indexOf(this.search.toLowerCase()) > -1)\n                this.statisticsGroups.push(new statisticsGroup(name, group))\n        });\n\n        this.state = this.statisticsGroups.length === 0 ? ToolsStatisticsStates.Empty : ToolsStatisticsStates.Data;\n        this.transaction.end();\n    }\n\n    public refreshStatistics(filter?: string) {\n        if (filter) this.filter = filter;\n        if (this.statisticsGroups.length == 0) return; \n\n        this.state = ToolsStatisticsStates.Progress;\n        this._$location.search('filter', this.filter);\n\n        this.transaction.begin('PROCESSING');\n        this.getStatistics();\n\n        this._onlyUpdated = true;\n        this._$timeout(() => {\n            this._onlyUpdated = false;\n        }, 4000);\n    }\n\n    public previousStep() {\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = moment.utc(this.hourlyDate).add('days', -1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = moment.utc(this.dailyDate).add('weeks', -1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = moment.utc(this.monthlyDate).add('years', -1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                this.yearlyDate = moment.utc(this.yearlyDate).add('years', -10).toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public nextStep() {\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = moment.utc(this.hourlyDate).add('days', 1).toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = moment.utc(this.dailyDate).add('weeks', 1).toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = moment.utc(this.monthlyDate).add('years', 1).toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                this.yearlyDate = moment.utc(this.yearlyDate).add('years', 10).toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public today() {\n        let utcDate = moment.utc();\n\n        switch (this.filter) {\n            case StatisticsFilter.Hourly:\n                this.hourlyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Daily:\n                this.dailyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Monthly:\n                this.monthlyDate = utcDate.toDate();\n                break;\n            case StatisticsFilter.Yearly:\n                utcDate.year(2010);\n                this.yearlyDate = utcDate.toDate();\n                break;\n        }\n\n        this.refreshStatistics();\n    }\n\n    public updateDate() {\n        if (!this._onlyUpdated) this.refreshStatistics();\n    }\n\n    public updateDecade(yearlyDate) {\n        this.yearlyDate = yearlyDate;\n\n        this.refreshStatistics();\n    }\n\n\n}\n\n(() => {\n    angular\n        .module('pipStatisticsPanel', ['pipCharts'])\n        .component('pipStatisticsPanel', {\n            bindings: StatisticsPanelBindings,\n            templateUrl: 'statistics/StatisticsPanel.html',\n            controller: StatisticsPanelController\n        })\n\n})();\n","'use strict'\ndeclare let moment;\nimport { StatCounterValue, StatCounterSet } from '../data/StatCounters';\nimport { IStatisticsDataService } from '../data/IStatisticsDataService';\n\nexport class StatisticsFilter {\n    static Yearly: string = 'Yearly';\n    static Monthly: string = 'Monthly';\n    static Daily: string = 'Daily';\n    static Hourly: string = 'Hourly';\n    static Total: string = 'Total';\n    static All: string[] = ['Total', 'Yearly', 'Monthly', 'Daily', 'Hourly'];\n}\n\nexport class counterStatistics {\n    private _counter: string;\n    private _statistics: StatCounterValue[];\n    private _value: number;\n    private _seria: any;\n    private _key: string;\n\n    public constructor(counter: string, statistics: StatCounterValue[], value?: number) {\n        this._counter = counter;\n        this._statistics = statistics;\n        this._value = value || undefined;\n    }\n\n    public get statistics(): StatCounterValue[] {\n        return this._statistics;\n    }\n\n    public set statistics(statistics: StatCounterValue[]) {\n        this._statistics = statistics;\n    }\n\n    public get value(): number {\n        return this._value;\n    }\n\n    public set value(value: number) {\n        this._value = value;\n    }\n\n    public get key(): string {\n        return this._key;\n    }\n\n    public set key(value: string) {\n        this._key = value;\n    }\n\n    public get counter(): string {\n        return this._counter;\n    }\n\n    public set counter(counter: string) {\n        this._counter = counter;\n        if (this._seria) this._seria.key = counter;\n    }\n\n    public get seria(): any {\n        return this._seria;\n    }\n\n    public set seria(seria: any) {\n        this._seria = seria;\n    }\n}\n\nexport class statisticsGroup {\n    private _group: string;\n    private _series: any[];\n    private _counterStats: counterStatistics[];\n    private _singleChartvalue: boolean;\n\n    public constructor(group: string, counterStats: counterStatistics[]) {\n         console.log('1',group, counterStats);\n        this._group = counterStats['counter'];\n        _.each(counterStats['seria'], (cs, index) => {\n            counterStats['seria'][index].key = counterStats['statistics'][index].name;\n        })\n        this._counterStats = counterStats;\n        this._series = new Array<any>();\n        _.each(this._counterStats['seria'], (cs) => {\n            this._series.push(cs);\n\n            this._singleChartvalue = this._singleChartvalue === false ? false : (cs.values !== undefined && cs.values.length === 1);\n        });\n    }\n\n    public get group(): string {\n        return this._group;\n    }\n\n    public set group(group: string) {\n        this._group = group;\n    }\n\n    public get counterStats(): counterStatistics[] {\n        return this._counterStats;\n    }\n\n    public set counterStats(counterStats: counterStatistics[]) {\n        this._counterStats = counterStats;\n    }\n\n    public get series(): any[] {\n        return this._series;\n    }\n\n    public set series(series: any[]) {\n        this._series = series;\n    }\n\n    public get singleChartvalue(): boolean {\n        return this._singleChartvalue;\n    }\n\n    public set singleChartvalue(singleChartvalue: boolean) {\n        this._singleChartvalue = singleChartvalue;\n    }\n}\n\nexport class chartValue {\n    public x: any;\n    public color: string;\n    public value: number;\n\n    public constructor(x: any, value: number, color?: string) {\n        this.x = x;\n        this.value = value;\n        this.color = color || undefined;\n    }\n}\n\nexport class lineChartSeria {\n    public key: string;\n    public color: string;\n    public values: chartValue[];\n\n    public constructor(key: string, values: chartValue[], color?: string) {\n        this.key = key;\n        this.values = values;\n        this.color = color || undefined;\n    }\n}\n\nexport class pieChartSeria {\n    public key: string;\n    public color: string;\n    public value: number;\n\n    public constructor(key: string, value: number, color?: string) {\n        this.key = key;\n        this.value = value;\n        this.color = color || undefined;\n    }\n}\n\nexport class ToolsStatisticsGetFunctions {\n    static Yearly: string = 'getYearlyStats';\n    static Monthly: string = 'getMonthlyStats';\n    static Daily: string = 'getDailyStats';\n    static Hourly: string = 'getHourlyStats';\n    static Total: string = 'getTotalStats';\n}\n\nexport class ToolsStatisticsFormatX {\n    static Yearly: string = 'getUTCFullYear';\n    static Monthly: string = 'getUTCMonth';\n    static Daily: string = 'getUTCDate';\n    static Hourly: string = 'getUTCHours';\n}\n\nexport class ToolsStatisticsFormatTickX {\n    public static Yearly(x): string {\n        return Number(x).toFixed(0);\n    }\n\n    public static Monthly(x): string {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        return months[x];\n    }\n\n    public static Daily(x): string {\n        return Number(x).toFixed(0);\n    }\n\n    public static Hourly(x): string {\n        x = Number(x);\n        return x <= 12 ? x + ' am' : (x - 12) + ' pm';\n    }\n}\nexport class ToolsStatisticsDecade {\n    public name: string;\n    public value: any;\n\n    public constructor(value: any, name: string) {\n        this.name = name;\n        this.value = value;\n    }\n}\n\nexport interface IStatisticsService {\n    formatXvalues(x: Date, category: string): chartValue;\n    fillLineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date, category: string): chartValue[];\n    fillLast24LineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date): chartValue[];\n    getStatisticsLastActionDate(statistics: StatCounterSet[], statKey: string): Date;\n    getStatisticsCount(statistics: StatCounterSet[], statKey: string): number;\n}\n\nexport interface IStatisticsProvider extends ng.IServiceProvider {\n\n}\n\nclass StatisticsService implements IStatisticsService {\n\n    public constructor() {\n        \"ngInject\";\n\n    }\n\n    public getStatisticsCount(statistics: StatCounterSet[], statKey: string): number {\n        let count: number = 0;\n\n        _.each(statistics, (item: StatCounterSet) => {\n            let key = item.counter.split(\".\").pop();\n            if (key == statKey) {\n\n                _.each(item.values, function (a: any) {\n                    count += a.value;\n                })\n            }\n        });\n\n        return count;\n    }\n\n    public getStatisticsLastActionDate(statistics: StatCounterSet[], statKey: string): Date {\n        let date: any = { Day: 0, Hour: 0, Month: 0, Year: 0 };\n\n        _.each(statistics, (item: StatCounterSet) => {\n            let key = item.counter.split(\".\").pop();\n            if (key == statKey) {\n                _.each(item.values, (a: any) => {\n                    if (date.year < a.year) {\n                        date = a;\n                    } else if (date.year == a.year && date.month < a.month) {\n                        date = a;\n                    } else if (date.year == a.year && date.month == a.month && date.day < a.day) {\n                        date = a;\n                    } else if (date.year == a.year && date.month == a.month && date.day == a.day && date.hour < a.hour) {\n                        date = a;\n                    }\n                });\n            }\n        });\n\n        if (date.year) {\n            return moment.utc([date.year, date.month - 1, date.day, date.hour]).toDate();\n        } else {\n            return null;\n        }\n    }\n\n    public formatXvalues(x: Date, category: string): chartValue {\n        if (x === undefined || !category) return;\n\n        return x[ToolsStatisticsFormatX[category]]();\n    }\n\n    public fillLast24LineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date): chartValue[] {\n        let from = moment.utc(dateFrom);\n        let size: number;\n\n        var sHour = moment(from).hour(),\n            sDay = moment(from).date(),\n            sMonth = moment(from).month(),\n            sYear = moment(from).year(),\n            values = new Array<chartValue>();\n\n        size = 25;\n\n        let startHours = dateFrom.getUTCHours();\n        let h: number;\n        for (h = 0; h < size; h++) {\n            sHour = (startHours + h) % 24;\n            let current = moment.utc([sYear, sMonth, sDay, 0]).add(startHours + h, 'hours');\n\n            let statistic = _.find(statistics, (point) => {\n                return sHour == point.hour && current.date() == point.day && current.month() + 1 == point.month && current.year() == point.year\n            });\n            let value = statistic ? statistic.value : 0;\n\n            if (startHours === 0) {\n                values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, sDay, sHour]).toDate(), 'Hourly'), value));\n            } else {\n                values.push(new chartValue(startHours + h - 24, value));\n            }\n\n        }\n\n        return values;\n    }\n\n    public fillLineCharts(statistics: StatCounterValue[], dateFrom: Date, dateTo: Date, category: string): chartValue[] {\n        let from = moment.utc(dateFrom);\n        let to = moment.utc(dateTo);\n        let size: number;\n\n        console.log('st2', statistics);\n\n        let sHour = moment(from).hour(),\n            sDay = moment(from).date(),\n            sMonth = moment(from).month(),\n            sYear = moment(from).year(),\n            values = new Array<chartValue>();\n\n        switch (category) {\n            case StatisticsFilter.Hourly:\n                size = to.diff(from, 'hours') + 1;\n                if (size > 24) size = 24;\n                if (size <= 0) break;\n\n                let startHours = dateFrom.getUTCHours();\n                let h: number;\n                for (h = 0; h < size; h++) {\n                    sHour = (startHours + h) % 24;\n                    let current = moment.utc([sYear, sMonth, sDay, 0]).add(startHours + h, 'hours');\n                    let statistic = _.find(statistics, (point) => {\n                        return sHour == point.hour && current.date() == point.day && current.month() + 1 == point.month && current.year() == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n\n                    if (startHours === 0) {\n                        values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, sDay, sHour]).toDate(), category), value));\n                    } else {\n                        values.push(new chartValue(startHours + h - 24, value));\n                    }\n                }\n                break;\n            case StatisticsFilter.Daily:\n                size = to.diff(from, 'days') + 1;\n                sHour = null;\n                let day: number;\n                for (day = sDay; day < sDay + size; day++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return day == point.day && sMonth + 1 == point.month && sYear == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth, day]).toDate(), category), value));\n                }\n                break;\n            case StatisticsFilter.Monthly:\n                sHour = null;\n                sDay = null;\n                for (sMonth = 0; sMonth < 12; sMonth++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return sMonth + 1 == point.month && sYear == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([sYear, sMonth]).toDate(), category), value));\n                }\n                break;\n            case StatisticsFilter.Yearly:\n                let i: number;\n                size = to.diff(from, 'years') + 1;\n                sHour = null;\n                sDay = null;\n                sMonth = null;\n                for (i = sYear; i < sYear + size + 1; i++) {\n                    let statistic = _.find(statistics, (point) => {\n                        return i == point.year\n                    });\n                    let value = statistic ? statistic.value : 0;\n                    values.push(new chartValue(this.formatXvalues(moment.utc([i]).toDate(), category), value));\n                }\n                break;\n        }\n\n        return values;\n    }\n\n}\n\nclass StatisticsProvider implements IStatisticsProvider {\n    private _service: StatisticsService;\n\n    constructor() {\n    }\n\n    public $get() {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new StatisticsService();\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipStatisticsService', [])\n    .provider('pipStatistics', StatisticsProvider);\n","(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('counters/CountersPage.html',\n    '<pip-counters-panel></pip-counters-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('counters/CountersPanel.html',\n    '<table class=\"table table-striped table-hover bm0 pip-admin-counters-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\"><thead><tr><th class=\"pip-admin-small-td\">Type</th><th>Name</th><th>Count</th></tr></thead></table><div class=\"pip-admin-counters pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-admin-read-error\\':$ctrl.error}\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.counters\" pip-scroll-container=\"\\'.pip-admin-counters\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr ng-repeat=\"counter in $ctrl.counters\"><td class=\"pip-admin-small-td\">{{counter.type}}</td><td>{{counter.name}}</td><td>{{counter.count}}</td></tr></tbody></table></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('errors/ErrorsPage.html',\n    '<pip-errors-panel></pip-errors-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('errors/ErrorsPanel.html',\n    '<div class=\"pip-errors\"><div class=\"pip-page-errors\" ng-if=\"$ctrl.error\"><span class=\"pip-error-text text-overflow color-error flex\">{{::$ctrl.errorText | translate}}</span> <span class=\"pointer layout-row layout-align-start-center flex-fixed\" ng-click=\"$ctrl.onClickErrorDetails()\"><md-icon md-svg-icon=\"icons:info-circle\" class=\"rm16 color-error\"></md-icon><span class=\"flex text-body2 color-error\">{{:: \\'DETAILS\\' | translate }}</span></span></div><div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp16 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" class=\"pip-search-panel-primary\" pip-on-search=\"$ctrl.onSearchErrors()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"pip-search-panel-secondary layout-row layout-align-start-center\"><div class=\"flex\"></div><div class=\"pip-filter-text\">Autorefresh</div><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.refresh\" ng-disabled=\"$ctrl.updating\" md-on-close=\"$ctrl.onRefreshChange()\"><md-option ng-value=\"minutes\" ng-repeat=\"minutes in $ctrl.refreshTimes\">{{::minutes}} mins</md-option></md-select></md-input-container></div></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" aria-label=\"add\" ng-hide=\"$ctrl.loading\" ng-disabled=\"$ctrl.updating\" ng-click=\"$ctrl.onRefreshClick()\"><md-icon md-svg-icon=\"icons:reload\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.updating\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-errors-header\" ng-if=\"$ctrl._pipMedia(\\'gt-xs\\') && $ctrl.state == \\'data\\'\"><thead><tr><th class=\"pip-big-td\">Error</th><th class=\"pip-small-medium-td\">First</th><th class=\"pip-small-medium-td\">Last</th><th class=\"pip-small-td\">Count</th><th class=\"pip-small-td p4\"></th></tr></thead></table><div class=\"pip-errors-container pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-read-error\\':$ctrl.error}\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover bm0\" ng-if=\"$ctrl._pipMedia(\\'gt-xs\\')\"><tbody><tr ng-repeat-start=\"errorType in $ctrl.errors track by $index\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><td class=\"pip-big-td text-overflow\">{{errorType.ErrorType}}</td><td class=\"pip-small-medium-td text-overflow\">{{ errorType.first }}</td><td class=\"pip-small-medium-td text-overflow\">{{ errorType.last }}</td><td class=\"pip-small-td\">{{ errorType.count }}</td><td class=\"pip-small-td text-center p4\"><md-button class=\"md-icon-button m0 p0\" aria-label=\"expand\"><md-icon md-svg-icon=\"icons:chevron-down\" ng-class=\"{\\'error-expand\\': errorType.collapsed, \\'error-not-expand\\': !errorType.collapsed }\"></md-icon></md-button></td></tr><tr ng-repeat-end=\"\" ng-if=\"errorType.collapsed\"><td class=\"p0 error-messages\" colspan=\"5\"><table class=\"table table-striped table-hover bm0\"><tfoot ng-if=\"errorType.items.length > $ctrl.showMessagesLimit\"><tr><td colspan=\"4\"><a class=\"lm16\" ng-click=\"$ctrl.onShowMore(errorType)\" ng-class=\"{\\'rm16\\': errorType.show > $ctrl.showMessagesLimit}\" ng-show=\"errorType.show < errorType.items.length\">Show More ...</a> <a ng-click=\"$ctrl.onShowLess(errorType)\" ng-show=\"errorType.show > $ctrl.showMessagesLimit\">Show Less ...</a></td></tr></tfoot><tbody><tr ng-repeat=\"item in errorType.items | limitTo:errorType.show\" class=\"active .error-message\" ng-click=\"$ctrl.onErrorsDetails(item)\"><td class=\"pip-big-td text-overflow\">{{ item.message }}</td><td class=\"pip-small-medium-td text-overflow\">{{ item.time}}</td><td class=\"pip-small-medium-td text-overflow\">{{ item.correlation_id }}</td><td class=\"pip-small-td\"></td><td class=\"pip-small-td text-center p4\"><md-button class=\"md-icon-button m0 p0\" aria-label=\"show-details\"><md-icon class=\"pointer\" md-svg-icon=\"icons:search\"></md-icon></md-button></td></tr></tbody></table></td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list\" ng-if=\"$ctrl._pipMedia(\\'xs\\')\" style=\"overflow-x: hidden\"><md-list-item class=\"pip-ref-list-item\" ng-class=\"{\\'divider-bottom\\': !$last}\" md-ink-ripple=\"\" ng-repeat-start=\"errorType in $ctrl.errors\"><div class=\"pip-content flex\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><div class=\"pip-title text-overflow\">{{errorType.items[0].Error.Type}}</div><p class=\"pip-subtitle text-overflow tm4\">{{errorType.first }} • {{errorType.last}} • {{errorType.count}}</p></div><div class=\"pip-pic flex-fixed\" ng-click=\"errorType.collapsed = !errorType.collapsed\"><md-icon md-svg-icon=\"icons:chevron-down\" ng-class=\"{\\'error-expand\\': errorType.collapsed, \\'error-not-expand\\': !errorType.collapsed }\"></md-icon></div></md-list-item><div ng-repeat-end=\"\" ng-if=\"errorType.collapsed\"><md-list-item class=\"pip-ref-list-item error-messages\" ng-class=\"{\\'divider-bottom\\': !$last}\" md-ink-ripple=\"\" ng-repeat=\"item in errorType.items | limitTo:errorType.show\"><div class=\"pip-content flex\" ng-click=\"$ctrl.onErrorsDetails(item)\"><div class=\"pip-title text-overflow\">{{ item.message }}</div><p class=\"pip-subtitle text-overflow tm4\">{{ item.correlation_id }} <span ng-show=\"item.correlation_id && item.time\">•</span> {{ item.time }}</p></div><div class=\"pip-pic flex-fixed\" ng-click=\"$ctrl.onErrorsDetails(item)\"><md-icon md-svg-icon=\"icons:search\"></md-icon></div></md-list-item><div class=\"h48 layout-align-start-center layout-row divider-bottom\" ng-if=\"errorType.items.length > $ctrl.showMessagesLimit\"><a class=\"lm16\" ng-click=\"$ctrl.onShowMore(errorType)\" ng-class=\"{\\'rm16\\': errorType.show > $ctrl.showMessagesLimit}\" ng-show=\"errorType.show < errorType.items.length\">Show More ...</a> <a ng-click=\"$ctrl.onShowLess(errorType)\" ng-show=\"errorType.show > $ctrl.showMessagesLimit\">Show Less ...</a></div></div></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty\" ng-if=\"$ctrl.state == \\'empty\\' || $ctrl.state == \\'loading\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no errors…<br>Try again later <span ng-show=\"$ctrl.searchQuery\">or change filter options</span></div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'loading\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading errors<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('events/EventsPage.html',\n    '<pip-events-panel></pip-events-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('events/EventsPanel.html',\n    '<div ng-show=\"$ctrl.error\" class=\"pip-page-errors\"><span class=\"pip-error-text color-error text-overflow flex\">{{$ctrl.error}}</span><md-icon md-svg-icon=\"icons:warn-circle\" class=\"color-error\"></md-icon></div><div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.refreshEvents()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" ng-click=\"$ctrl.refreshEvents()\" aria-label=\"add\"><md-icon md-svg-icon=\"icons:reload\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.updating && $ctrl.state == \\'data\\'\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-admin-events-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state == \\'data\\'\"><thead><tr><th class=\"pip-admin-small-td\">Severity</th><th ng-class=\"$ctrl.pipMedia(\\'gt-md\\') ? \\'pip-admin-medium-td\\': \\'pip-admin-small-medium-td\\'\">ID</th><th class=\"pip-admin-small-medium-td\">Time</th><th class=\"pip-admin-small-medium-td\">Type</th><th class=\"pip-admin-medium-td\">Source</th><th>Message</th></tr></thead></table><div class=\"pip-admin-events pip-scroll-y pip-scroll\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\" pip-infinite-scroll=\"$ctrl.readEvents()\" pip-scroll-container=\"\\'.pip-admin-events\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr class=\"w-streach\" ng-repeat=\"event in $ctrl.events\"><td class=\"pip-admin-small-td\">{{event.severity}}</td><td class=\"pip-admin-break\" ng-class=\"$ctrl.pipMedia(\\'gt-md\\') ? \\'pip-admin-medium-td\\': \\'pip-admin-small-medium-td\\'\">{{event.id}}</td><td class=\"pip-admin-small-medium-td\">{{event.time }}</td><td class=\"pip-admin-small-medium-td\">{{event.type}}</td><td class=\"pip-admin-medium-td\">{{event.source}}</td><td class=\"\">{{event.message}}</td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state == \\'data\\'\" style=\"overflow-x: hidden\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"event in $ctrl.events\"><div class=\"pip-pic layout-row layout-align-center-center\"><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"event.severity == 0\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Critical</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"event.severity == 1\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Important</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-circle\" ng-if=\"event.severity == 2\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Informational</md-tooltip></md-icon></div><div class=\"pip-content\"><div class=\"text-body2 text-overflow\">{{event.correlation_id}} <span>•</span> {{event.time }} <span ng-if=\"event.Type\">•</span> {{event.type}}</div><div class=\"text-body2\">{{event.component}}</div><p class=\"pip-subtitle\">{{event.message}}</p></div></md-list-item></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty pip-scroll\" ng-if=\"$ctrl.state == \\'progress\\' || $ctrl.state == \\'empty\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no events right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading events<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('logging/LoggingPage.html',\n    '<pip-logging-panel></pip-logging-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('logging/LoggingPanel.html',\n    '<div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.localSearch\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"flex layout-row layout-align-start-center\"><div class=\"flex\"></div><div class=\"pip-filter-text\">Autorefresh</div><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.refresh\" md-on-close=\"$ctrl.onRefreshChange()\"><md-option ng-value=\"minutes\" ng-repeat=\"minutes in $ctrl.refreshTimes\">{{::minutes}} sec</md-option></md-select></md-input-container></div></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" aria-label=\"add\" ng-click=\"$ctrl.playStopAutoUpdate()\"><md-icon md-svg-icon=\"icons:play\" ng-if=\"!$ctrl.autoUpdate\"></md-icon><md-icon md-svg-icon=\"icons:pause\" ng-if=\"$ctrl.autoUpdate\"></md-icon></md-button><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state() != \\'progress\\'\"></md-progress-linear><table class=\"table table-striped table-hover bm0 pip-admin-loggings-header\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state() != \\'empty\\'\"><thead><tr><th class=\"pip-admin-small-td\">level</th><th class=\"pip-admin-medium-td\">Time</th><th class=\"pip-admin-medium-td\">Correlation ID</th><th>Message</th><th class=\"pip-admin-small-td\"></th></tr></thead></table><div class=\"pip-admin-loggings pip-scroll-y pip-scroll\" ng-class=\"{\\'pip-admin-read-error\\':$ctrl.error}\" ng-if=\"$ctrl.state() != \\'empty\\'\"><table class=\"table table-striped table-hover\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.loggings && $ctrl.state() != \\'empty\\'\" pip-infinite-scroll=\"$ctrl.readLogging()\" pip-scroll-container=\"\\'.pip-admin-loggings\\'\" pip-scroll-listen-for-event=\"windowResized\" pip-scroll-distance=\"0.1\"><tbody><tr ng-repeat=\"trace in $ctrl.loggings()\"><td class=\"pip-admin-small-td\"><md-icon md-svg-icon=\"icons:menu\" ng-if=\"trace.level == 6\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Trace</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:bug\" ng-if=\"trace.level == 5\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Debug</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle-outline\" ng-if=\"trace.level == 4\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Info</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle\" ng-if=\"trace.level == 3\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Warning</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"trace.level == 2\" class=\"color-warn\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Error</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"trace.level == 1\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Fatal</md-tooltip></md-icon></td><td class=\"pip-admin-medium-td\">{{trace.time}}</td><td class=\"pip-admin-medium-td\">{{trace.correlation_id}}</td><td class=\"\"><div class=\"pip-admin-trace-message\">{{trace.message}}</div></td><td class=\"pip-admin-small-td tp4 bp4\"><md-button class=\"md-icon-button\" ng-click=\"$ctrl.onErrorDetails(trace)\" aria-label=\"error\" ng-if=\"trace.error\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></td></tr></tbody></table><md-list class=\"pip-menu pip-ref-list tp0\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state() == \\'data\\'\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"trace in $ctrl.loggings\"><div class=\"pip-pic flex-fixed lm16 layout-row layout-align-center-center\"><md-icon md-svg-icon=\"icons:menu\" ng-if=\"trace.level == 6\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Trace</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:bug\" ng-if=\"trace.level == 5\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Debug</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle-outline\" ng-if=\"trace.level == 4\" class=\"fg-cyan\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Info</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:info-circle\" ng-if=\"trace.level == 3\" class=\"color-warm\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Warning</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-triangle\" ng-if=\"trace.level == 2\" class=\"color-warn\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Error</md-tooltip></md-icon><md-icon md-svg-icon=\"icons:warn-star\" ng-if=\"trace.level == 1\" class=\"color-error\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">Fatal</md-tooltip></md-icon></div><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\">{{trace.time}} <span ng-if=\"trace.CorrelationId\">•</span> {{trace.correlation_id}}</div><p class=\"pip-subtitle pip-trace-message\">{{trace.message}}</p></div><div class=\"pip-pic rm0\"><md-button class=\"md-icon-button flex-fixed\" ng-if=\"trace.Error\" ng-click=\"$ctrl.onErrorDetails(trace)\" aria-label=\"error\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div></md-list-item></md-list></div><div class=\"layout-column layout-align-center-center flex pip-admin-empty pip-scroll\" ng-if=\"$ctrl.state() == \\'empty\\' || $ctrl.state() == \\'progress\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state() == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-show=\"$ctrl.state() == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading traces<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/AddSettingsKeyDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column bb-settings-key-dialog\" width=\"400\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-body pip-scroll p16 bp0\"><h3 class=\"tm0\">{{$ctrl.title}}</h3><md-input-container class=\"md-block flex bm0\"><label>Key</label> <input ng-model=\"$ctrl.key.name\"></md-input-container><md-input-container class=\"md-block flex bm0\"><label>Value</label> <textarea ng-model=\"$ctrl.key.data\"> </textarea></md-input-container></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\" ng-disabled=\"!$ctrl.key.name || !$ctrl.key.data\">Ok</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/AddSettingsSectionDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column pip-scroll\" width=\"400\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-body\"><h3 class=\"tm0\">New section</h3><md-input-container class=\"md-block flex bm0\"><label>Section name</label> <input ng-model=\"$ctrl.sectionName\"></md-input-container></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\" ng-disabled=\"!$ctrl.sectionName\">Ok</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/SettingsPage.html',\n    '<pip-settings-panel></pip-settings-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('settings/SettingsPanel.html',\n    '<div class=\"pip-main-menu pip-settings\" ng-class=\"{\\'pip-single-content\\': $ctrl.details}\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\"><div class=\"pip-menu\"><div class=\"pip-filter-row layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><div ng-show=\"$ctrl.error\" class=\"pip-page-errors\"><span class=\"pip-error-text color-error flex\">{{$ctrl.error}}</span><md-icon md-svg-icon=\"icons:warn-circle\" class=\"color-error\"></md-icon></div><div class=\"pip-list-container pip-scroll\" style=\"height: calc(100% - 48px);\" ng-class=\"{\\'pip-menu-empty\\': $ctrl.state == \\'empty\\'}\"><md-list class=\"pip-simple-list tp0\" pip-selected=\"$ctrl.selectIndex\" pip-select=\"$ctrl.selectItem($event.index)\"><md-list-item class=\"pip-simple-list-item pip-selectable {{ $ctrl.selectIndex == $index ? \\'selected\\' : \\'\\' }}\" md-ink-ripple=\"\" ng-repeat=\"section in $ctrl.settingsSections\" ng-show=\"!section.hide\"><p class=\"pip-title text-body2\">{{ section.name }}</p></md-list-item></md-list></div></div><div class=\"pip-content-container\"><div><pip-document><div class=\"pip-header p0\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\') && $ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover bm0\"><thead><tr><th class=\"lp16\">Key</th><th class=\"pip-settings-value\">Value</th><th style=\"width: 48px\"></th></tr></thead></table></div><div class=\"pip-body p0 layout-column layout-align-center-center\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\') && $ctrl.state != \\'data\\'\"><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll w-stretch\" ng-if=\"$ctrl.state == \\'empty\\'\"><div class=\"pip-empty\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div></div><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll w-stretch\" ng-if=\"$ctrl.state == \\'progress\\'\"><div class=\"pip-empty\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading settings<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div></div><div class=\"pip-body p0\" ng-if=\"$ctrl.state == \\'data\\'\"><table class=\"table table-striped table-hover\" style=\"margin-bottom: 72px\" ng-if=\"$ctrl.pipMedia(\\'gt-md\\')\"><tbody><tr ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\" ng-if=\"key != \\'toJSON\\'\"><td class=\"pip-settings-key lp16\" ng-bind-html=\"key\"></td><td class=\"pip-settings-value\"><div class=\"pip-settings-key\" ng-if=\"!key.includes(\\'Utc\\')\">{{ value }}</div><div class=\"pip-settings-key\" ng-if=\"key.includes(\\'Utc\\')\">{{ value }}</div></td><td class=\"tp4 bp4\" style=\"width: 48px\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"vdots\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\" aria-label=\"update\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button aria-label=\"delete\">Delete</md-button></md-menu-item></md-menu-content></md-menu></td></tr></tbody></table><div ng-if=\"$ctrl.pipMedia(\\'md\\') && $ctrl.state == \\'data\\'\"><div class=\"pip-menu\" style=\"width: 100% !important;\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-if=\"key != \\'toJSON\\'\" ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\"><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\" ng-bind-html=\"key\"></div><p class=\"pip-subtitle\">{{value}}</p></div><div class=\"pip-pic rm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"vdots\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\" aria-label=\"update\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button aria-label=\"delete\">Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list><div style=\"margin-bottom: 72px\"></div></div></div></div></div><md-fab-speed-dial md-direction=\"up\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\'\" class=\"md-fab-bottom-right md-fling\" pip-fab-tooltip-visibility=\"opened\" pip-fab-show-tooltip=\"showTooltip\" md-open=\"opened\"><md-fab-trigger><md-button aria-label=\"menu\" class=\"md-fab md-accent\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button></md-fab-trigger><md-fab-actions><md-button aria-label=\"New section\" class=\"md-fab md-accent md-mini pip-fab-mini md-raised\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addSection()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Section</md-tooltip><md-icon md-svg-icon=\"icons:pie-chart\"></md-icon></md-button><md-button aria-label=\"New key\" class=\"md-fab md-accent md-mini md-raised pip-fab-mini\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addKey()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Key</md-tooltip><md-icon md-svg-icon=\"icons:submenu\"></md-icon></md-button></md-fab-actions></md-fab-speed-dial></pip-document></div></div></div><md-fab-speed-dial md-direction=\"up\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\' && !$ctrl.pipMedia(\\'gt-sm\\')\" class=\"md-fab-bottom-right md-fling\" pip-fab-tooltip-visibility=\"opened\" pip-fab-show-tooltip=\"showTooltip\" md-open=\"opened\"><md-fab-trigger><md-button aria-label=\"menu\" class=\"md-fab md-accent\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button></md-fab-trigger><md-fab-actions><md-button aria-label=\"New section\" class=\"md-fab md-accent md-mini pip-fab-mini md-raised\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addSection()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Section</md-tooltip><md-icon md-svg-icon=\"icons:pie-chart\"></md-icon></md-button><md-button aria-label=\"New key\" class=\"md-fab md-accent md-mini md-raised pip-fab-mini\" ng-disabled=\"transaction.busy()\" ng-click=\"$ctrl.addKey()\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"left\">Key</md-tooltip><md-icon md-svg-icon=\"icons:submenu\"></md-icon></md-button></md-fab-actions></md-fab-speed-dial><pip-dropdown pip-actions=\"$ctrl.settingsSections\" pip-active-index=\"$ctrl.selectIndex\" pip-change=\"$ctrl.getSelectDropdown()\" ng-if=\"!$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state != \\'progress\\'\"></pip-dropdown><div class=\"pip-main-menu pip-settings\" ng-if=\"!$ctrl.pipMedia(\\'gt-sm\\') && $ctrl.state != \\'progress\\'\"><div class=\"pip-menu\" style=\"width: 100% !important;\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"(key, value) in $ctrl.settings[$ctrl.selectIndex]\" ng-if=\"key != \\'toJSON\\'\"><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\" ng-bind-html=\"key\"></div><p class=\"pip-subtitle\">{{value}}</p></div><div class=\"pip-pic rm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.updateKey(key, value)\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteKeyDialog(key, value)\"><md-button>Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list><div style=\"margin-bottom: 72px\"></div></div></div></div><div class=\"layout-column layout-align-center-center flex pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><div class=\"pip-empty\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading settings<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute; z-index: 100\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state != \\'progress\\'\"></md-progress-linear>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics/StatisticsPage.html',\n    '<pip-statistics-panel></pip-statistics-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics/StatisticsPanel.html',\n    '<div class=\"pip-filter-row divider-bottom layout-row pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.searchClick()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row><div class=\"pip-search-panel-primary flex layout-row layout-align-start-center\"><md-input-container class=\"md-block\"><md-select class=\"flex\" aria-label=\"Status\" ng-model=\"$ctrl.filter\"><md-option ng-value=\"opt\" ng-click=\"$ctrl.refreshStatistics(opt)\" ng-repeat=\"opt in $ctrl.filters\">{{::opt}}</md-option></md-select></md-input-container><div class=\"pip-filter-text\" ng-if=\"$ctrl.filter !== $ctrl.TOTAL\">for</div><div ng-if=\"$ctrl.filter === \\'Hourly\\'\"><md-datepicker ng-model=\"$ctrl.hourlyDate\" ng-change=\"$ctrl.refreshStatistics()\"></md-datepicker></div><div ng-if=\"$ctrl.filter === \\'Daily\\'\"><pip-date-range pip-date-range-type=\"weekly\" ng-model=\"$ctrl.dailyDate\" pip-changed=\"$ctrl.updateDate()\"></pip-date-range></div><div ng-if=\"$ctrl.filter === \\'Monthly\\'\"><pip-date-range pip-date-range-type=\"yearly\" ng-model=\"$ctrl.monthlyDate\" pip-changed=\"$ctrl.updateDate()\"></pip-date-range></div><div ng-if=\"$ctrl.filter === \\'Yearly\\'\"><md-input-container class=\"md-block\"><md-select ng-model=\"$ctrl.yearlyName\" class=\"flex\"><md-option ng-repeat=\"decade in $ctrl.decades\" ng-value=\"decade.name\" ng-click=\"$ctrl.updateDecade(decade.value)\">{{ decade.name }}</md-option></md-select></md-input-container></div><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"rm0\"><md-icon md-svg-icon=\"icons:arrow-left\" ng-click=\"$ctrl.previousStep()\"></md-icon></md-button><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"lm0 rm0\"><md-icon md-svg-icon=\"icons:date\" ng-click=\"$ctrl.today()\"></md-icon></md-button><md-button ng-if=\"$ctrl.filter !== $ctrl.TOTAL && $ctrl.pipMedia(\\'gt-sm\\')\" class=\"lm0\"><md-icon md-svg-icon=\"icons:arrow-right\" ng-click=\"$ctrl.nextStep()\"></md-icon></md-button></div></div><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute;\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state != \\'progress\\'\"></md-progress-linear><pip-simple ng-if=\"$ctrl.state === \\'data\\'\"><div class=\"p16\"><div ng-repeat=\"statistics in $ctrl.statisticsGroups\" ng-if=\"$ctrl.filter !== $ctrl.TOTAL\" style=\"margin-bottom: 24px;\"><h4>{{ statistics.group }}</h4><pip-line-chart pip-series=\"statistics.series\" pip-inter-legend=\"true\" ng-if=\"!statistics.singleChartValue\" pip-x-tick-format=\"$ctrl.chartXTickFormat\"></pip-line-chart><pip-bar-chart pip-series=\"statistics.series\" pip-inter-legend=\"true\" ng-if=\"statistics.singleChartValue\" pip-x-tick-format=\"$ctrl.chartXTickFormat()\"></pip-bar-chart></div><div ng-repeat=\"statistics in $ctrl.statisticsGroups\" ng-if=\"$ctrl.filter === $ctrl.TOTAL\" ng-class=\"{\\'w-stretch\\': !$ctrl.pipMedia(\\'gt-sm\\')}\" style=\"display: inline-block; width: 295px; height:330px; margin-bottom: 24px; margin-right: 16px;\"><h4>{{ statistics.group }}</h4><pip-pie-chart pip-series=\"statistics.series\" pip-centered=\"true\" pip-donut=\"true\" pip-size=\"250\"></pip-pie-chart></div></div></pip-simple><div class=\"layout-column layout-align-center-center flex pip-admin-empty\" ng-if=\"$ctrl.state == \\'empty\\' || $ctrl.state == \\'progress\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There is no data right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading statistics<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipSystem.Templates');\n} catch (e) {\n  module = angular.module('pipSystem.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/search/SearchRow.html',\n    '<div class=\"pip-search layout-row layout-align-start-center flex\"><md-button class=\"md-icon-button pip-search-button flex-fixed\" ng-click=\"searchRow.onSearch()\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><md-input-container md-no-float=\"\" class=\"md-block tm8 bm8\" ng-disabled=\"searchRow.isDisable()\"><input ng-model=\"searchRow.localSearch\" placeholder=\"{{::searchRow.placeholder | translate}}\" ng-keypress=\"searchRow.onKeyPress($event)\" ng-change=\"searchRow.onSearch()\"></md-input-container><md-button class=\"md-icon-button flex-fixed pip-search-clear-button\" ng-if=\"searchRow.localSearch != \\'\\' && searchRow.localSearch\" ng-click=\"searchRow.onClear()\" n=\"\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:delete\"></md-icon></md-button></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-admin-system-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}